<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="eyJjdXJyZW50Q29udmVyc2F0aW9uSWQiOiJkNzdlMjFhNS00OTZlLTRjYmUtYmVlZS03Y2MzNDdlMTFkNWQiLCJjb252ZXJzYXRpb25zIjp7Ijg5OGZhZWFjLTZlOWEtNDBhMS1hMmM5LWFhZTE3ZDYzZThjMyI6eyJpZCI6Ijg5OGZhZWFjLTZlOWEtNDBhMS1hMmM5LWFhZTE3ZDYzZThjMyIsIm5hbWUiOiJXZWxjb21lIHRvIEF1Z21lbnQiLCJjcmVhdGVkQXRJc28iOiIyMDI1LTAzLTE4VDAwOjU1OjQ1LjIyM1oiLCJsYXN0SW50ZXJhY3RlZEF0SXNvIjoiMjAyNS0wMy0xOFQxMzoyMjoyMC43MTRaIiwiY2hhdEhpc3RvcnkiOlt7ImNoYXRJdGVtVHlwZSI6ImVkdWNhdGUtZmVhdHVyZXMiLCJyZXF1ZXN0X2lkIjoiMmJjYjZhZDctZjc1My00YjY5LTgyZDEtMTc3NDk3MTM0OGMzIiwic2Vlbl9zdGF0ZSI6InNlZW4ifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNzZhOTVlMmEtMTY4Ny00NjMwLWEzOGMtZTQ3NWExNmFjMmZkIiwicmVxdWVzdF9tZXNzYWdlIjoiY29tcGxldGUgdGhlIGF1dGggc2VyY2llcyIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJjb21wbGV0ZSB0aGUgYXV0aCBzZXJjaWVzIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJJJ2xsIGhlbHAgeW91IGNvbXBsZXRlIHRoZSBgQXV0aFNlcnZpY2VgIGNsYXNzLiBCYXNlZCBvbiB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUgYW5kIHRoZSBzZWxlY3RlZCBjb2RlIHNob3dpbmcgYHVzZXJzVXBkYXRlSW5wdXRgLCBJJ2xsIGNyZWF0ZSBhIHByb3BlciBzaWdudXAgaW1wbGVtZW50YXRpb24gdXNpbmcgdGhlIHVzZXIgcmVwb3NpdG9yeS5cblxuSGVyZSdzIHRoZSBjb21wbGV0ZWQgYEF1dGhTZXJ2aWNlYDpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSBcImludmVyc2lmeVwiO1xuaW1wb3J0IHsgUHJpc21hLCB1c2VycyB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcbmltcG9ydCB7IFVzZXJSZXBvc2l0b3J5IH0gZnJvbSBcIi4uL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnlcIjtcblxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEF1dGhTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KFVzZXJSZXBvc2l0b3J5KSBwcml2YXRlIHVzZXJSZXBvc2l0b3J5OiBVc2VyUmVwb3NpdG9yeSkge31cblxuICAgIGFzeW5jIHNpZ25VcCh1c2VyRGF0YTogUHJpc21hLnVzZXJzQ3JlYXRlSW5wdXQpOiBQcm9taXNlPHVzZXJzPiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiB1c2VyIGFscmVhZHkgZXhpc3RzIHdpdGggdGhlIGdpdmVuIGVtYWlsXG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LmZpbmRCeUVtYWlsKHVzZXJEYXRhLmVtYWlsKTtcbiAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBuZXcgdXNlclxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuY3JlYXRlVXNlcih1c2VyRGF0YSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFJlbW92ZSBzZW5zaXRpdmUgZGF0YSBiZWZvcmUgcmV0dXJuaW5nXG4gICAgICAgICAgICBjb25zdCB7IHBhc3N3b3JkX2hhc2gsIC4uLnVzZXJXaXRob3V0UGFzc3dvcmQgfSA9IG5ld1VzZXI7XG4gICAgICAgICAgICByZXR1cm4gdXNlcldpdGhvdXRQYXNzd29yZCBhcyB1c2VycztcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEF1dGhTZXJ2aWNlLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZGl0aW9uYWwgYXV0aCBtZXRob2RzIGNhbiBiZSBhZGRlZCBoZXJlOlxuICAgIC8vIC0gc2lnbkluXG4gICAgLy8gLSBmb3Jnb3RQYXNzd29yZFxuICAgIC8vIC0gcmVzZXRQYXNzd29yZFxuICAgIC8vIC0gdmVyaWZ5RW1haWxcbiAgICAvLyBldGMuXG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbldlIGFsc28gbmVlZCB0byBhZGQgdGhlIGBmaW5kQnlFbWFpbGAgbWV0aG9kIHRvIHRoZSBgVXNlclJlcG9zaXRvcnlgIGNsYXNzOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuYXN5bmMgZmluZEJ5RW1haWwoZW1haWw6IHN0cmluZyk6IFByb21pc2U8dXNlcnMgfCBudWxsPiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgd2hlcmU6IHsgZW1haWw6IGVtYWlsIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdXNlcjtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBVc2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbDonLCBlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTm93IGxldCdzIHVwZGF0ZSB0aGUgYEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcmAgdG8gdXNlIHRoaXMgc2VydmljZTpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2F1dGguc2VydmljZVwiO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KEF1dGhTZXJ2aWNlKSBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSkge31cblxuICAgIHNpZ25VcCA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgICAgICAgICAgIC8vIEJhc2ljIHZhbGlkYXRpb25cbiAgICAgICAgICAgIGlmICghdXNlcm5hbWUgfHwgIWVtYWlsIHx8ICFwYXNzd29yZCkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdVc2VybmFtZSwgZW1haWwsIGFuZCBwYXNzd29yZCBhcmUgcmVxdWlyZWQnIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHVzZXIgZGF0YSBvYmplY3RcbiAgICAgICAgICAgIGNvbnN0IHVzZXJEYXRhID0ge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkX2hhc2g6IHBhc3N3b3JkLCAvLyBOb3RlOiBJbiBhIHJlYWwgYXBwbGljYXRpb24sIHlvdSBzaG91bGQgaGFzaCB0aGUgcGFzc3dvcmRcbiAgICAgICAgICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKClcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcCh1c2VyRGF0YSk7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuanNvbihuZXdVc2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmIGVycm9yLm1lc3NhZ2UgPT09ICdVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cycpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwOSkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlci5zaWduVXA6JywgZXJyb3IpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byBjcmVhdGUgdXNlcicgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkZpbmFsbHksIHVwZGF0ZSB0aGUgREkgY29udGFpbmVyIGNvbmZpZ3VyYXRpb246XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG4vLyBBZGQgdGhlc2UgbGluZXMgYWZ0ZXIgdGhlIGV4aXN0aW5nIGJpbmRpbmdzXG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIgfSBmcm9tICcuLi9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyJztcblxuLy8gQmluZCBBdXRoU2VydmljZVxuY29udGFpbmVyLmJpbmQ8QXV0aFNlcnZpY2U+KEF1dGhTZXJ2aWNlKVxuICAgIC50b1NlbGYoKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aGVudGljYXRpb25Db250cm9sbGVyXG5jb250YWluZXIuYmluZDxBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI+KEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcilcbiAgICAudG9TZWxmKClcbiAgICAuaW5SZXF1ZXN0U2NvcGUoKTtcbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuVGhpcyBpbXBsZW1lbnRhdGlvbjpcblxuMS4gQ3JlYXRlcyBhIHByb3BlciBzaWdudXAgZmxvdyBpbiB0aGUgYEF1dGhTZXJ2aWNlYFxuMi4gQWRkcyBlbWFpbCB1bmlxdWVuZXNzIGNoZWNraW5nXG4zLiBSZW1vdmVzIHNlbnNpdGl2ZSBkYXRhIChwYXNzd29yZCBoYXNoKSBmcm9tIHRoZSByZXNwb25zZVxuNC4gQWRkcyBwcm9wZXIgZXJyb3IgaGFuZGxpbmdcbjUuIEluY2x1ZGVzIHByb3BlciBkZXBlbmRlbmN5IGluamVjdGlvbiBzZXR1cFxuXG5Ob3RlOiBJbiBhIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQsIHlvdSBzaG91bGQ6XG4xLiBBZGQgcGFzc3dvcmQgaGFzaGluZyAoZS5nLiwgdXNpbmcgYmNyeXB0KVxuMi4gQWRkIGlucHV0IHZhbGlkYXRpb25cbjMuIEFkZCBlbWFpbCB2ZXJpZmljYXRpb25cbjQuIEFkZCBKV1QgdG9rZW4gZ2VuZXJhdGlvbiBmb3IgYXV0aGVudGljYXRpb25cbjUuIEFkZCBwcm9wZXIgc2VjdXJpdHkgaGVhZGVyc1xuNi4gQWRkIHJhdGUgbGltaXRpbmcgZm9yIHNpZ251cCBhdHRlbXB0c1xuXG5Xb3VsZCB5b3UgbGlrZSBtZSB0byBpbXBsZW1lbnQgYW55IG9mIHRoZXNlIGFkZGl0aW9uYWwgc2VjdXJpdHkgZmVhdHVyZXM/XG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50czowLTUzOFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50czowLTQyMlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjAtNDg2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6NDg2LTExNTVcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czoxMTU1LTE5NTBcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czoxOTUwLTI4NjVcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czoyODY1LTM3NDFcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHM6MC0zNzlcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjAtNzQzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTo3NDMtMTQ2MlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWE6MTkzNi0yNTQ4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjAtNjU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjY1NS0xNDA3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjE0MDctMTc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6MC01ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzOjU4Ni05NDNcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50czowLTUzN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY3NFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NzQtMTY0NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czoxNjQ2LTI2OTZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MjY5Ni0zMDk2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWw6MC03NDhcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbDo3NDgtMTUzNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjI3MDUtMzM3OFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvaW5kZXgudHM6MC02MThcbldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb246MC02MjZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy91c2VyLnJvdXRlcy50czowLTcyMVxuZG9ja2VyLWNvbXBvc2UueW1sOjAtOTc2XG5XRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UuanNvbjowLTY4NlxuVk9MVU1FUy9yZXBvc2l0b3J5cy90ZXN0LmdpdC9ob29rcy91cGRhdGUuc2FtcGxlOjAtNzYyXG5HSVQtU0VSVkVSL0RvY2tlcmZpbGU6MC02OTZcblZPTFVNRVMvcmVwb3NpdG9yeXMvbXkuZ2l0L2hvb2tzL3VwZGF0ZS5zYW1wbGU6MC03NThcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zL21pZ3JhdGlvbl9sb2NrLnRvbWw6MC0xMjdcblZPTFVNRVMvcmVwb3NpdG9yeXMvbXktcmVwby1uYW1lLmdpdC9ob29rcy91cGRhdGUuc2FtcGxlOjAtNzU4XG5WT0xVTUVTL3JlcG9zaXRvcnlzL3Rlc3QuZ2l0L2hvb2tzL3NlbmRlbWFpbC12YWxpZGF0ZS5zYW1wbGU6NzU3LTEzNDVcblZPTFVNRVMvcmVwb3NpdG9yeXMvdGVzdC5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGU6MC03NTRcblZPTFVNRVMvcmVwb3NpdG9yeXMvdGVzdC5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGU6NzU0LTkwMFxuVk9MVU1FUy9yZXBvc2l0b3J5cy9yZXBvY3JlYXRlZHZpYWh0dHAyLmdpdC9ob29rcy91cGRhdGUuc2FtcGxlOjAtNzU4XG5WT0xVTUVTL3JlcG9zaXRvcnlzL3JlcG9jcmVhdGVkdmlhaHR0cC5naXQvaG9va3MvdXBkYXRlLnNhbXBsZTowLTc1OFxuVk9MVU1FUy9yZXBvc2l0b3J5cy90ZXN0LmdpdC9ob29rcy9wcmUtcmVjZWl2ZS5zYW1wbGU6MC01NDgifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkknbGwgaGVscCB5b3UgY29tcGxldGUgdGhlIGBBdXRoU2VydmljZWAgY2xhc3MuIEJhc2VkIG9uIHRoZSBwcm9qZWN0IHN0cnVjdHVyZSBhbmQgdGhlIHNlbGVjdGVkIGNvZGUgc2hvd2luZyBgdXNlcnNVcGRhdGVJbnB1dGAsIEknbGwgY3JlYXRlIGEgcHJvcGVyIHNpZ251cCBpbXBsZW1lbnRhdGlvbiB1c2luZyB0aGUgdXNlciByZXBvc2l0b3J5LlxuXG5IZXJlJ3MgdGhlIGNvbXBsZXRlZCBgQXV0aFNlcnZpY2VgOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyBtb2RlPUVESVRcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IFByaXNtYSwgdXNlcnMgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQgeyBVc2VyUmVwb3NpdG9yeSB9IGZyb20gXCIuLi9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoQGluamVjdChVc2VyUmVwb3NpdG9yeSkgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHt9XG5cbiAgICBhc3luYyBzaWduVXAodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTx1c2Vycz4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdXNlciBhbHJlYWR5IGV4aXN0cyB3aXRoIHRoZSBnaXZlbiBlbWFpbFxuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbCh1c2VyRGF0YS5lbWFpbCk7XG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cycpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBDcmVhdGUgbmV3IHVzZXJcbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LmNyZWF0ZVVzZXIodXNlckRhdGEpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBSZW1vdmUgc2Vuc2l0aXZlIGRhdGEgYmVmb3JlIHJldHVybmluZ1xuICAgICAgICAgICAgY29uc3QgeyBwYXNzd29yZF9oYXNoLCAuLi51c2VyV2l0aG91dFBhc3N3b3JkIH0gPSBuZXdVc2VyO1xuICAgICAgICAgICAgcmV0dXJuIHVzZXJXaXRob3V0UGFzc3dvcmQgYXMgdXNlcnM7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBBdXRoU2VydmljZS5zaWduVXA6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGRpdGlvbmFsIGF1dGggbWV0aG9kcyBjYW4gYmUgYWRkZWQgaGVyZTpcbiAgICAvLyAtIHNpZ25JblxuICAgIC8vIC0gZm9yZ290UGFzc3dvcmRcbiAgICAvLyAtIHJlc2V0UGFzc3dvcmRcbiAgICAvLyAtIHZlcmlmeUVtYWlsXG4gICAgLy8gZXRjLlxufVxuYGBgYFxuXG5XZSBhbHNvIG5lZWQgdG8gYWRkIHRoZSBgZmluZEJ5RW1haWxgIG1ldGhvZCB0byB0aGUgYFVzZXJSZXBvc2l0b3J5YCBjbGFzczpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIG1vZGU9RURJVFxuYXN5bmMgZmluZEJ5RW1haWwoZW1haWw6IHN0cmluZyk6IFByb21pc2U8dXNlcnMgfCBudWxsPiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgd2hlcmU6IHsgZW1haWw6IGVtYWlsIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdXNlcjtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBVc2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbDonLCBlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn1cbmBgYGBcblxuTm93IGxldCdzIHVwZGF0ZSB0aGUgYEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcmAgdG8gdXNlIHRoaXMgc2VydmljZTpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzIG1vZGU9RURJVFxuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSBcImludmVyc2lmeVwiO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvYXV0aC5zZXJ2aWNlXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoQXV0aFNlcnZpY2UpIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgc2lnblVwID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgLy8gQmFzaWMgdmFsaWRhdGlvblxuICAgICAgICAgICAgaWYgKCF1c2VybmFtZSB8fCAhZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1VzZXJuYW1lLCBlbWFpbCwgYW5kIHBhc3N3b3JkIGFyZSByZXF1aXJlZCcgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdXNlciBkYXRhIG9iamVjdFxuICAgICAgICAgICAgY29uc3QgdXNlckRhdGEgPSB7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmQsIC8vIE5vdGU6IEluIGEgcmVhbCBhcHBsaWNhdGlvbiwgeW91IHNob3VsZCBoYXNoIHRoZSBwYXNzd29yZFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2Uuc2lnblVwKHVzZXJEYXRhKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld1VzZXIpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgZXJyb3IubWVzc2FnZSA9PT0gJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzJykge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA5KS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aGVudGljYXRpb25Db250cm9sbGVyLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGNyZWF0ZSB1c2VyJyB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuRmluYWxseSwgdXBkYXRlIHRoZSBESSBjb250YWluZXIgY29uZmlndXJhdGlvbjpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIG1vZGU9RURJVFxuLy8gQWRkIHRoZXNlIGxpbmVzIGFmdGVyIHRoZSBleGlzdGluZyBiaW5kaW5nc1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRpb25Db250cm9sbGVyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlcic7XG5cbi8vIEJpbmQgQXV0aFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPEF1dGhTZXJ2aWNlPihBdXRoU2VydmljZSlcbiAgICAudG9TZWxmKClcbiAgICAuaW5TaW5nbGV0b25TY29wZSgpO1xuXG4vLyBCaW5kIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlclxuY29udGFpbmVyLmJpbmQ8QXV0aGVudGljYXRpb25Db250cm9sbGVyPihBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIpXG4gICAgLnRvU2VsZigpXG4gICAgLmluUmVxdWVzdFNjb3BlKCk7XG5gYGBgXG5cblRoaXMgaW1wbGVtZW50YXRpb246XG5cbjEuIENyZWF0ZXMgYSBwcm9wZXIgc2lnbnVwIGZsb3cgaW4gdGhlIGBBdXRoU2VydmljZWBcbjIuIEFkZHMgZW1haWwgdW5pcXVlbmVzcyBjaGVja2luZ1xuMy4gUmVtb3ZlcyBzZW5zaXRpdmUgZGF0YSAocGFzc3dvcmQgaGFzaCkgZnJvbSB0aGUgcmVzcG9uc2VcbjQuIEFkZHMgcHJvcGVyIGVycm9yIGhhbmRsaW5nXG41LiBJbmNsdWRlcyBwcm9wZXIgZGVwZW5kZW5jeSBpbmplY3Rpb24gc2V0dXBcblxuTm90ZTogSW4gYSBwcm9kdWN0aW9uIGVudmlyb25tZW50LCB5b3Ugc2hvdWxkOlxuMS4gQWRkIHBhc3N3b3JkIGhhc2hpbmcgKGUuZy4sIHVzaW5nIGJjcnlwdClcbjIuIEFkZCBpbnB1dCB2YWxpZGF0aW9uXG4zLiBBZGQgZW1haWwgdmVyaWZpY2F0aW9uXG40LiBBZGQgSldUIHRva2VuIGdlbmVyYXRpb24gZm9yIGF1dGhlbnRpY2F0aW9uXG41LiBBZGQgcHJvcGVyIHNlY3VyaXR5IGhlYWRlcnNcbjYuIEFkZCByYXRlIGxpbWl0aW5nIGZvciBzaWdudXAgYXR0ZW1wdHNcblxuV291bGQgeW91IGxpa2UgbWUgdG8gaW1wbGVtZW50IGFueSBvZiB0aGVzZSBhZGRpdGlvbmFsIHNlY3VyaXR5IGZlYXR1cmVzP1xuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTM4IiwiYmxvYl9uYW1lIjoiMzE5ZDE4NmFkOTMyYTU2Y2Q1NzMwNGM0NjA4ODhhMjcyZjlkNDEzODc1NThjODUwNjQwMzNmZDMzZmYwYzYxYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0MjIiLCJibG9iX25hbWUiOiI4OGQ3Y2ExNDFmZGRlZGQwZTY4ZmQzZmZiZmNlYWJmYzNhNjgwMDZlYWQ2ZDAyNWY2MzUwNDM1MzQ2ZjYzNTBlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0ODYiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjQ4NiIsImNoYXJfZW5kIjoiMTE1NSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMTE1NSIsImNoYXJfZW5kIjoiMTk1MCIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMTk1MCIsImNoYXJfZW5kIjoiMjg2NSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMjg2NSIsImNoYXJfZW5kIjoiMzc0MSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzQzIiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6Ijc0MyIsImNoYXJfZW5kIjoiMTQ2MiIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIxOTM2IiwiY2hhcl9lbmQiOiIyNTQ4IiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY1NSIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjY1NSIsImNoYXJfZW5kIjoiMTQwNyIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjE0MDciLCJjaGFyX2VuZCI6IjE3NDEiLCJibG9iX25hbWUiOiJjZGJmZmQzNDc1MjNlYTdhMjY4MzZhZGM5YWYzYTc3N2U1NmY5ZWU2ZTgyZDhkYjk4N2Y2MjhmOTAzMzQ1YmQzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1ODYiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiNTg2IiwiY2hhcl9lbmQiOiI5NDMiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTM3IiwiYmxvYl9uYW1lIjoiZWEyNjRlMWM5MmQ0NDU1NGE0M2YyNWIyYjhiMjUyNjcyNzM1MTRhYjNlNDBiOGQyNGU3NDg0NmE4ZjZlNmFjMiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2NzQiLCJibG9iX25hbWUiOiI4NWE1MzAxYWYxMmRlZDE4ODY2MmZmMjg0OTdiY2NlN2Q3YjhmMTU5YTE5MWU2NGFhMjBmMzJiYzk4Y2JkOWRhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiI2NzQiLCJjaGFyX2VuZCI6IjE2NDYiLCJibG9iX25hbWUiOiI4NWE1MzAxYWYxMmRlZDE4ODY2MmZmMjg0OTdiY2NlN2Q3YjhmMTU5YTE5MWU2NGFhMjBmMzJiYzk4Y2JkOWRhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxNjQ2IiwiY2hhcl9lbmQiOiIyNjk2IiwiYmxvYl9uYW1lIjoiODVhNTMwMWFmMTJkZWQxODg2NjJmZjI4NDk3YmNjZTdkN2I4ZjE1OWExOTFlNjRhYTIwZjMyYmM5OGNiZDlkYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiMjY5NiIsImNoYXJfZW5kIjoiMzA5NiIsImJsb2JfbmFtZSI6Ijg1YTUzMDFhZjEyZGVkMTg4NjYyZmYyODQ5N2JjY2U3ZDdiOGYxNTlhMTkxZTY0YWEyMGYzMmJjOThjYmQ5ZGEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0OCIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiNzQ4IiwiY2hhcl9lbmQiOiIxNTM2IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIyNzA1IiwiY2hhcl9lbmQiOiIzMzc4IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIxNDc3IiwiY2hhcl9lbmQiOiIyMjkxIiwiYmxvYl9uYW1lIjoiYzY3NjQ4YWJjMWFkYjc0NmU3YzE1NDk4MTE1ZTVmOTFkM2Q3YWZlZTE0MmVlYzY4ZDVjZDgzM2U5MTJjNzZhMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MTgiLCJibG9iX25hbWUiOiIxMDM3OWY5MzU1M2IzOTkyMTA4N2FjZGNlZThkNjQzNGQ4ZWIxYTg1NzlmNjY2NjU3MTgyZTMzODgzZDg5ODhhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvaW5kZXgudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjI2IiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzIxIiwiYmxvYl9uYW1lIjoiOTNlNGQ2MTRmM2IwNTNmMTM3ZTU5NTNhNmQyOWNhN2VmMzUxMmI3MDkzMDM5MDM3ZjYzZTgwZWE2YzVjOTA4NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy91c2VyLnJvdXRlcy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NzYiLCJibG9iX25hbWUiOiIyOTA4OWI4ZTY0MDViZGY4MmU5NjAyMjdiZjAwM2JhMTE2ODc2MjRhN2FiZDJiZWNiMzc3ODM2ODNjN2M4YjMzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiZG9ja2VyLWNvbXBvc2UueW1sIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY4NiIsImJsb2JfbmFtZSI6ImQ3YjhiZTE0NDY3OWEyZWZjMWU2ZjZiNzdmMjlmNzhjZWZkN2I5MGYyM2I1ODU0Yjk0YWYyYWJjNTAyNDE1ZTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NjIiLCJibG9iX25hbWUiOiJlYjVjZGY1Njg1NjZmNjZiMWJjZjIwYjMxNTEwNDllNzQyNDg5OTc0MzgyZGE3NjI3ZjBkOTA3YTExODVmODZkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy90ZXN0LmdpdC9ob29rcy91cGRhdGUuc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY5NiIsImJsb2JfbmFtZSI6IjFmYTEzOGIwNjVhODJiNzcxZWRmZTcxMDIzYzA5MjhjYTNhOTI4N2ExOTdhZTAwMDQzMWZjZTZhNmEwN2QwN2YiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJHSVQtU0VSVkVSL0RvY2tlcmZpbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzU4IiwiYmxvYl9uYW1lIjoiYzk2ZjI2OTAwMWZhZWJmMjdlOTFiZDA5MDY5YTZkNWQ5ODJmMDMwZDRiYjcxYTY4YTk2MGViMGZmZTU1YjNlMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvbXkuZ2l0L2hvb2tzL3VwZGF0ZS5zYW1wbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTI3IiwiYmxvYl9uYW1lIjoiY2Q4ZjgzZWYxNTg5ZWY4NzgzMjY0OGFhYWEzMzZjYmExODllNzQ1MTA2MWRhY2FiY2RlNmQ0NWQ2MzgzMjFkZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zL21pZ3JhdGlvbl9sb2NrLnRvbWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzU4IiwiYmxvYl9uYW1lIjoiM2ZhNWFmYjYzYTMyNTVlZGQwMmRkZWNlZjc2YWEyNmZhZjY1ZmFmYjQ1MTVlNDdiNDkwMzliOTkyMGIyOWMxNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvbXktcmVwby1uYW1lLmdpdC9ob29rcy91cGRhdGUuc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6Ijc1NyIsImNoYXJfZW5kIjoiMTM0NSIsImJsb2JfbmFtZSI6ImUyZjVkNWM2YWMwNTM0OTIwZWEzYTVjZTc1YzEzM2FjODRmZWJlOTI2YzdlZTY4MWE5YTQ4N2Q2N2M4ZGY2NTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL3Rlc3QuZ2l0L2hvb2tzL3NlbmRlbWFpbC12YWxpZGF0ZS5zYW1wbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzU0IiwiYmxvYl9uYW1lIjoiMWYwMDk3MjhhY2QzMmFlZDBjMDc1ZmI5NTM5OGQ2MTFlODUzN2Q1ZDI3OWU2NTczZTJkZTNjNjIwMDkxM2RkOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvdGVzdC5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGUifX0seyJjaGFyX3N0YXJ0IjoiNzU0IiwiY2hhcl9lbmQiOiI5MDAiLCJibG9iX25hbWUiOiIxZjAwOTcyOGFjZDMyYWVkMGMwNzVmYjk1Mzk4ZDYxMWU4NTM3ZDVkMjc5ZTY1NzNlMmRlM2M2MjAwOTEzZGQ4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy90ZXN0LmdpdC9ob29rcy9jb21taXQtbXNnLnNhbXBsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NTgiLCJibG9iX25hbWUiOiI4ZjY2MzVlZGJjNmY4Y2Q0ZTI5YzRlZDM3NmU4NDIxNjNkOWIxNDVlZGFkZWI0OTYxMjg3ZDk2Mjg2OTNkZjQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy9yZXBvY3JlYXRlZHZpYWh0dHAyLmdpdC9ob29rcy91cGRhdGUuc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc1OCIsImJsb2JfbmFtZSI6ImViODI0ODg2NTVkNzIzNTcxMGE4NzRlZGZlZDk2YzcwMTM5MWNjMmY3N2Q5NWYxMmZmNWYzMTgzNDZkN2FkOWMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL3JlcG9jcmVhdGVkdmlhaHR0cC5naXQvaG9va3MvdXBkYXRlLnNhbXBsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NDgiLCJibG9iX25hbWUiOiJkYjQzMzVhYzAxYTFkYmU4MDNlNTljMGY1ZWE1NDdhNGQxYjA5OGEzYjdjZWI4YWI4NmI4MTdhOGFkZjc5Y2VkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy90ZXN0LmdpdC9ob29rcy9wcmUtcmVjZWl2ZS5zYW1wbGUifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiM2NiYTUwNzEtODhjNi00ZWE1LThmMWEtYmVlMTVmOTU5ZGU0IiwicmVxdWVzdF9tZXNzYWdlIjoidXNlIGRlcGVuY3kgaW5qZWN0aW9uIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6InVzZSBkZXBlbmN5IGluamVjdGlvbiJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSdsbCBtb2RpZnkgdGhlIGNvZGUgdG8gcHJvcGVybHkgdXNlIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGZvciBhbGwgY29tcG9uZW50cywgaW5jbHVkaW5nIHRoZSBwYXNzd29yZCBoYXNoaW5nIGZ1bmN0aW9uYWxpdHkuXG5cbkZpcnN0LCBsZXQncyBjcmVhdGUgYW4gaW50ZXJmYWNlIGZvciB0aGUgcGFzc3dvcmQgc2VydmljZTpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9pbnRlcmZhY2VzL3Bhc3N3b3JkLnNlcnZpY2UuaW50ZXJmYWNlLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmV4cG9ydCBpbnRlcmZhY2UgSVBhc3N3b3JkU2VydmljZSB7XG4gICAgaGFzaFBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz47XG4gICAgdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZywgaGFzaDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTm93LCBsZXQncyBjcmVhdGUgdGhlIGNvbmNyZXRlIGltcGxlbWVudGF0aW9uOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3Bhc3N3b3JkLnNlcnZpY2UudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuaW1wb3J0IHsgaW5qZWN0YWJsZSB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBJUGFzc3dvcmRTZXJ2aWNlIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3Bhc3N3b3JkLnNlcnZpY2UuaW50ZXJmYWNlJztcbmltcG9ydCAqIGFzIGNyeXB0byBmcm9tICdjcnlwdG8nO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRTZXJ2aWNlIGltcGxlbWVudHMgSVBhc3N3b3JkU2VydmljZSB7XG4gICAgYXN5bmMgaGFzaFBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICAvLyBJbiBwcm9kdWN0aW9uLCB1c2UgYmNyeXB0IG9yIHNpbWlsYXJcbiAgICAgICAgY29uc3Qgc2FsdCA9IGNyeXB0by5yYW5kb21CeXRlcygxNikudG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICBjb25zdCBoYXNoID0gY3J5cHRvLnBia2RmMlN5bmMocGFzc3dvcmQsIHNhbHQsIDEwMDAsIDY0LCAnc2hhNTEyJykudG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICByZXR1cm4gYCR7c2FsdH06JHtoYXNofWA7XG4gICAgfVxuXG4gICAgYXN5bmMgdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZywgc3RvcmVkSGFzaDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIGNvbnN0IFtzYWx0LCBoYXNoXSA9IHN0b3JlZEhhc2guc3BsaXQoJzonKTtcbiAgICAgICAgY29uc3QgdmVyaWZ5SGFzaCA9IGNyeXB0by5wYmtkZjJTeW5jKHBhc3N3b3JkLCBzYWx0LCAxMDAwLCA2NCwgJ3NoYTUxMicpLnRvU3RyaW5nKCdoZXgnKTtcbiAgICAgICAgcmV0dXJuIGhhc2ggPT09IHZlcmlmeUhhc2g7XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5MZXQncyBjcmVhdGUgYW4gaW50ZXJmYWNlIGZvciB0aGUgYXV0aCBzZXJ2aWNlOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2ludGVyZmFjZXMvYXV0aC5zZXJ2aWNlLmludGVyZmFjZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5pbXBvcnQgeyB1c2VycyB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcblxuZXhwb3J0IGludGVyZmFjZSBTaWduVXBEdG8ge1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBwYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElBdXRoU2VydmljZSB7XG4gICAgc2lnblVwKHVzZXJEYXRhOiBTaWduVXBEdG8pOiBQcm9taXNlPE9taXQ8dXNlcnMsICdwYXNzd29yZF9oYXNoJz4+O1xufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5Ob3csIGxldCdzIHVwZGF0ZSB0aGUgQXV0aFNlcnZpY2Ugd2l0aCBwcm9wZXIgZGVwZW5kZW5jeSBpbmplY3Rpb246XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IFByaXNtYSwgdXNlcnMgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQgeyBVc2VyUmVwb3NpdG9yeSB9IGZyb20gXCIuLi9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5pbXBvcnQgeyBJQXV0aFNlcnZpY2UsIFNpZ25VcER0byB9IGZyb20gXCIuL2ludGVyZmFjZXMvYXV0aC5zZXJ2aWNlLmludGVyZmFjZVwiO1xuaW1wb3J0IHsgSVBhc3N3b3JkU2VydmljZSB9IGZyb20gXCIuL2ludGVyZmFjZXMvcGFzc3dvcmQuc2VydmljZS5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IFRZUEVTIH0gZnJvbSBcIi4uL2RpL3R5cGVzXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSBpbXBsZW1lbnRzIElBdXRoU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBpbmplY3QoVFlQRVMuVXNlclJlcG9zaXRvcnkpIHByaXZhdGUgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5LFxuICAgICAgICBAaW5qZWN0KFRZUEVTLlBhc3N3b3JkU2VydmljZSkgcHJpdmF0ZSBwYXNzd29yZFNlcnZpY2U6IElQYXNzd29yZFNlcnZpY2VcbiAgICApIHt9XG5cbiAgICBhc3luYyBzaWduVXAodXNlckRhdGE6IFNpZ25VcER0byk6IFByb21pc2U8T21pdDx1c2VycywgJ3Bhc3N3b3JkX2hhc2gnPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdXNlciBhbHJlYWR5IGV4aXN0c1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbCh1c2VyRGF0YS5lbWFpbCk7XG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cycpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBIYXNoIHBhc3N3b3JkXG4gICAgICAgICAgICBjb25zdCBwYXNzd29yZEhhc2ggPSBhd2FpdCB0aGlzLnBhc3N3b3JkU2VydmljZS5oYXNoUGFzc3dvcmQodXNlckRhdGEucGFzc3dvcmQpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdXNlciBkYXRhXG4gICAgICAgICAgICBjb25zdCB1c2VyQ3JlYXRlSW5wdXQ6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0ID0ge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmRIYXNoLFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIG5ldyB1c2VyXG4gICAgICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5jcmVhdGVVc2VyKHVzZXJDcmVhdGVJbnB1dCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFJlbW92ZSBwYXNzd29yZCBoYXNoIGZyb20gcmVzcG9uc2VcbiAgICAgICAgICAgIGNvbnN0IHsgcGFzc3dvcmRfaGFzaCwgLi4udXNlcldpdGhvdXRQYXNzd29yZCB9ID0gbmV3VXNlcjtcbiAgICAgICAgICAgIHJldHVybiB1c2VyV2l0aG91dFBhc3N3b3JkO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aFNlcnZpY2Uuc2lnblVwOicsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5MZXQncyBjcmVhdGUgdGhlIHR5cGVzIGZvciBkZXBlbmRlbmN5IGluamVjdGlvbjpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS90eXBlcy50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5leHBvcnQgY29uc3QgVFlQRVMgPSB7XG4gICAgVXNlclJlcG9zaXRvcnk6IFN5bWJvbC5mb3IoXCJVc2VyUmVwb3NpdG9yeVwiKSxcbiAgICBBdXRoU2VydmljZTogU3ltYm9sLmZvcihcIkF1dGhTZXJ2aWNlXCIpLFxuICAgIFBhc3N3b3JkU2VydmljZTogU3ltYm9sLmZvcihcIlBhc3N3b3JkU2VydmljZVwiKSxcbiAgICBQcmlzbWFDbGllbnQ6IFN5bWJvbC5mb3IoXCJQcmlzbWFDbGllbnRcIiksXG4gICAgQXV0aGVudGljYXRpb25Db250cm9sbGVyOiBTeW1ib2wuZm9yKFwiQXV0aGVudGljYXRpb25Db250cm9sbGVyXCIpXG59O1xuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5VcGRhdGUgdGhlIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcjpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IElBdXRoU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9pbnRlcmZhY2VzL2F1dGguc2VydmljZS5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IFRZUEVTIH0gZnJvbSBcIi4uL2RpL3R5cGVzXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBAaW5qZWN0KFRZUEVTLkF1dGhTZXJ2aWNlKSBwcml2YXRlIGF1dGhTZXJ2aWNlOiBJQXV0aFNlcnZpY2VcbiAgICApIHt9XG5cbiAgICBzaWduVXAgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB7IHVzZXJuYW1lLCBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuXG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSBpbnB1dFxuICAgICAgICAgICAgaWYgKCF1c2VybmFtZSB8fCAhZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1VzZXJuYW1lLCBlbWFpbCwgYW5kIHBhc3N3b3JkIGFyZSByZXF1aXJlZCcgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy5hdXRoU2VydmljZS5zaWduVXAoeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0pO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24obmV3VXNlcik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiBlcnJvci5tZXNzYWdlID09PSAnVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHMnKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDkpLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIuc2lnblVwOicsIGVycm9yKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdGYWlsZWQgdG8gY3JlYXRlIHVzZXInIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5GaW5hbGx5LCB1cGRhdGUgdGhlIGludmVyc2lmeSBjb250YWluZXIgY29uZmlndXJhdGlvbjpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tICdpbnZlcnNpZnknO1xuaW1wb3J0IHsgVFlQRVMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IFVzZXJSZXBvc2l0b3J5IH0gZnJvbSAnLi4vcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wYXNzd29yZC5zZXJ2aWNlJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXInO1xuaW1wb3J0IHsgZ2V0UHJpc21hQ2xpZW50IH0gZnJvbSAnLi4vcHJpc21hL3ByaXNtYS1jbGllbnQnO1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xuaW1wb3J0IHsgSUF1dGhTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvaW50ZXJmYWNlcy9hdXRoLnNlcnZpY2UuaW50ZXJmYWNlJztcbmltcG9ydCB7IElQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9pbnRlcmZhY2VzL3Bhc3N3b3JkLnNlcnZpY2UuaW50ZXJmYWNlJztcblxuY29uc3QgY29udGFpbmVyID0gbmV3IENvbnRhaW5lcigpO1xuXG4vLyBCaW5kIFByaXNtYUNsaWVudFxuY29udGFpbmVyLmJpbmQ8UHJpc21hQ2xpZW50PihUWVBFUy5QcmlzbWFDbGllbnQpXG4gICAgLnRvRHluYW1pY1ZhbHVlKCgpID0+IGdldFByaXNtYUNsaWVudCgpKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgVXNlclJlcG9zaXRvcnlcbmNvbnRhaW5lci5iaW5kPFVzZXJSZXBvc2l0b3J5PihUWVBFUy5Vc2VyUmVwb3NpdG9yeSlcbiAgICAudG8oVXNlclJlcG9zaXRvcnkpXG4gICAgLmluU2luZ2xldG9uU2NvcGUoKTtcblxuLy8gQmluZCBQYXNzd29yZFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPElQYXNzd29yZFNlcnZpY2U+KFRZUEVTLlBhc3N3b3JkU2VydmljZSlcbiAgICAudG8oUGFzc3dvcmRTZXJ2aWNlKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPElBdXRoU2VydmljZT4oVFlQRVMuQXV0aFNlcnZpY2UpXG4gICAgLnRvKEF1dGhTZXJ2aWNlKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aGVudGljYXRpb25Db250cm9sbGVyXG5jb250YWluZXIuYmluZDxBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI+KFRZUEVTLkF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcilcbiAgICAudG8oQXV0aGVudGljYXRpb25Db250cm9sbGVyKVxuICAgIC5pblJlcXVlc3RTY29wZSgpO1xuXG5leHBvcnQgZGVmYXVsdCBjb250YWluZXI7XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cblRoaXMgaW1wbGVtZW50YXRpb246XG5cbjEuIFVzZXMgcHJvcGVyIGRlcGVuZGVuY3kgaW5qZWN0aW9uIHdpdGggaW50ZXJmYWNlc1xuMi4gU2VwYXJhdGVzIGNvbmNlcm5zIChwYXNzd29yZCBoYXNoaW5nLCB1c2VyIGNyZWF0aW9uLCBldGMuKVxuMy4gVXNlcyBzeW1ib2xzIGZvciB0eXBlIGlkZW50aWZpY2F0aW9uXG40LiBJbXBsZW1lbnRzIHByb3BlciBzY29waW5nIGZvciBzZXJ2aWNlcyBhbmQgY29udHJvbGxlcnNcbjUuIFByb3ZpZGVzIHR5cGUgc2FmZXR5IHRocm91Z2hvdXQgdGhlIGFwcGxpY2F0aW9uXG5cblRoZSBhdXRoZW50aWNhdGlvbiBmbG93IGlzIG5vdyBtb3JlIG1haW50YWluYWJsZSBhbmQgdGVzdGFibGUsIGFzIGVhY2ggY29tcG9uZW50IGNhbiBiZSBtb2NrZWQgYW5kIHRlc3RlZCBpbmRlcGVuZGVudGx5LiBXb3VsZCB5b3UgbGlrZSBtZSB0byBhZGQgYW55IGFkZGl0aW9uYWwgZmVhdHVyZXMgb3IgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucz9cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNTM4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTowLTc0M1xuZG9ja2VyLWNvbXBvc2UueW1sOjAtOTc2XG5kb2NrZXItY29tcG9zZS55bWw6OTc2LTE0MTNcbldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS5qc29uOjAtNjg2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvYXV0aGVudGljYXRpb24ucm91dGVzLnRzOjAtMzc5XG5XRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UtbG9jay5qc29uOjAtNjI2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzOjAtNDIyXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50czowLTU4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6NTg2LTk0M1xuV0VCL0JBQ0tFTkQvRG9ja2VyZmlsZTowLTQwOVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzOjAtNTM3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9pbmRleC50czowLTYxOFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czowLTY1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czo2NTUtMTQwN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czoxNDA3LTE3NDFcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czowLTQ4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjExNTUtMTk1MFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjI4NjUtMzc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnNoOjAtNzIzXG5XRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb246MC01NzlcbldFQi9GUk9OVEVORC9Eb2NrZXJmaWxlOjAtNDg2XG5HSVQtU0VSVkVSL0RvY2tlcmZpbGU6MC02OTZcbldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC91dGlscy9pbml0R2l0UmVwby5zaDowLTcyN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY3NFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NzQtMTY0NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjAtNzQ4XG4uZ2l0aWdub3JlOjAtMTczXG5XRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL2VzbGludC5jb25maWcuanM6MjA0LTEwMDNcbkRBVEFCQVNFL2RvY2tlcmZpbGU6MC0xNTVcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvdml0ZS5jb25maWcuanM6MC0xNjFcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zL21pZ3JhdGlvbl9sb2NrLnRvbWw6MC0xMjdcbldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC9pbml0R2l0UmVwby50czowLTgwM1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuVk9MVU1FUy9yZXBvc2l0b3J5cy9teS1yZXBvLW5hbWUuZ2l0L2hvb2tzL3ByZS1wdXNoLnNhbXBsZTo3NjctMTM3NFxuVk9MVU1FUy9yZXBvc2l0b3J5cy9teS1yZXBvLW5hbWUuZ2l0L2hvb2tzL3ByZS1yZWNlaXZlLnNhbXBsZTowLTU0NFxuVk9MVU1FUy9yZXBvc2l0b3J5cy9teS1yZXBvLW5hbWUuZ2l0L2hvb2tzL2NvbW1pdC1tc2cuc2FtcGxlOjc1MC04OTYifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkknbGwgbW9kaWZ5IHRoZSBjb2RlIHRvIHByb3Blcmx5IHVzZSBkZXBlbmRlbmN5IGluamVjdGlvbiBmb3IgYWxsIGNvbXBvbmVudHMsIGluY2x1ZGluZyB0aGUgcGFzc3dvcmQgaGFzaGluZyBmdW5jdGlvbmFsaXR5LlxuXG5GaXJzdCwgbGV0J3MgY3JlYXRlIGFuIGludGVyZmFjZSBmb3IgdGhlIHBhc3N3b3JkIHNlcnZpY2U6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvaW50ZXJmYWNlcy9wYXNzd29yZC5zZXJ2aWNlLmludGVyZmFjZS50cyBtb2RlPUVESVRcbmV4cG9ydCBpbnRlcmZhY2UgSVBhc3N3b3JkU2VydmljZSB7XG4gICAgaGFzaFBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz47XG4gICAgdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZywgaGFzaDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcbn1cbmBgYGBcblxuTm93LCBsZXQncyBjcmVhdGUgdGhlIGNvbmNyZXRlIGltcGxlbWVudGF0aW9uOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3Bhc3N3b3JkLnNlcnZpY2UudHMgbW9kZT1FRElUXG5pbXBvcnQgeyBpbmplY3RhYmxlIH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IElQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuL2ludGVyZmFjZXMvcGFzc3dvcmQuc2VydmljZS5pbnRlcmZhY2UnO1xuaW1wb3J0ICogYXMgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQYXNzd29yZFNlcnZpY2UgaW1wbGVtZW50cyBJUGFzc3dvcmRTZXJ2aWNlIHtcbiAgICBhc3luYyBoYXNoUGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIC8vIEluIHByb2R1Y3Rpb24sIHVzZSBiY3J5cHQgb3Igc2ltaWxhclxuICAgICAgICBjb25zdCBzYWx0ID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDE2KS50b1N0cmluZygnaGV4Jyk7XG4gICAgICAgIGNvbnN0IGhhc2ggPSBjcnlwdG8ucGJrZGYyU3luYyhwYXNzd29yZCwgc2FsdCwgMTAwMCwgNjQsICdzaGE1MTInKS50b1N0cmluZygnaGV4Jyk7XG4gICAgICAgIHJldHVybiBgJHtzYWx0fToke2hhc2h9YDtcbiAgICB9XG5cbiAgICBhc3luYyB2ZXJpZnlQYXNzd29yZChwYXNzd29yZDogc3RyaW5nLCBzdG9yZWRIYXNoOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICAgICAgY29uc3QgW3NhbHQsIGhhc2hdID0gc3RvcmVkSGFzaC5zcGxpdCgnOicpO1xuICAgICAgICBjb25zdCB2ZXJpZnlIYXNoID0gY3J5cHRvLnBia2RmMlN5bmMocGFzc3dvcmQsIHNhbHQsIDEwMDAsIDY0LCAnc2hhNTEyJykudG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICByZXR1cm4gaGFzaCA9PT0gdmVyaWZ5SGFzaDtcbiAgICB9XG59XG5gYGBgXG5cbkxldCdzIGNyZWF0ZSBhbiBpbnRlcmZhY2UgZm9yIHRoZSBhdXRoIHNlcnZpY2U6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvaW50ZXJmYWNlcy9hdXRoLnNlcnZpY2UuaW50ZXJmYWNlLnRzIG1vZGU9RURJVFxuaW1wb3J0IHsgdXNlcnMgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2lnblVwRHRvIHtcbiAgICB1c2VybmFtZTogc3RyaW5nO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgcGFzc3dvcmQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJQXV0aFNlcnZpY2Uge1xuICAgIHNpZ25VcCh1c2VyRGF0YTogU2lnblVwRHRvKTogUHJvbWlzZTxPbWl0PHVzZXJzLCAncGFzc3dvcmRfaGFzaCc+Pjtcbn1cbmBgYGBcblxuTm93LCBsZXQncyB1cGRhdGUgdGhlIEF1dGhTZXJ2aWNlIHdpdGggcHJvcGVyIGRlcGVuZGVuY3kgaW5qZWN0aW9uOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyBtb2RlPUVESVRcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IFByaXNtYSwgdXNlcnMgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQgeyBVc2VyUmVwb3NpdG9yeSB9IGZyb20gXCIuLi9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5pbXBvcnQgeyBJQXV0aFNlcnZpY2UsIFNpZ25VcER0byB9IGZyb20gXCIuL2ludGVyZmFjZXMvYXV0aC5zZXJ2aWNlLmludGVyZmFjZVwiO1xuaW1wb3J0IHsgSVBhc3N3b3JkU2VydmljZSB9IGZyb20gXCIuL2ludGVyZmFjZXMvcGFzc3dvcmQuc2VydmljZS5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IFRZUEVTIH0gZnJvbSBcIi4uL2RpL3R5cGVzXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSBpbXBsZW1lbnRzIElBdXRoU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBpbmplY3QoVFlQRVMuVXNlclJlcG9zaXRvcnkpIHByaXZhdGUgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5LFxuICAgICAgICBAaW5qZWN0KFRZUEVTLlBhc3N3b3JkU2VydmljZSkgcHJpdmF0ZSBwYXNzd29yZFNlcnZpY2U6IElQYXNzd29yZFNlcnZpY2VcbiAgICApIHt9XG5cbiAgICBhc3luYyBzaWduVXAodXNlckRhdGE6IFNpZ25VcER0byk6IFByb21pc2U8T21pdDx1c2VycywgJ3Bhc3N3b3JkX2hhc2gnPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdXNlciBhbHJlYWR5IGV4aXN0c1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbCh1c2VyRGF0YS5lbWFpbCk7XG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cycpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBIYXNoIHBhc3N3b3JkXG4gICAgICAgICAgICBjb25zdCBwYXNzd29yZEhhc2ggPSBhd2FpdCB0aGlzLnBhc3N3b3JkU2VydmljZS5oYXNoUGFzc3dvcmQodXNlckRhdGEucGFzc3dvcmQpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdXNlciBkYXRhXG4gICAgICAgICAgICBjb25zdCB1c2VyQ3JlYXRlSW5wdXQ6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0ID0ge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyRGF0YS51c2VybmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmRIYXNoLFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIG5ldyB1c2VyXG4gICAgICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5jcmVhdGVVc2VyKHVzZXJDcmVhdGVJbnB1dCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFJlbW92ZSBwYXNzd29yZCBoYXNoIGZyb20gcmVzcG9uc2VcbiAgICAgICAgICAgIGNvbnN0IHsgcGFzc3dvcmRfaGFzaCwgLi4udXNlcldpdGhvdXRQYXNzd29yZCB9ID0gbmV3VXNlcjtcbiAgICAgICAgICAgIHJldHVybiB1c2VyV2l0aG91dFBhc3N3b3JkO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aFNlcnZpY2Uuc2lnblVwOicsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgYFxuXG5MZXQncyBjcmVhdGUgdGhlIHR5cGVzIGZvciBkZXBlbmRlbmN5IGluamVjdGlvbjpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS90eXBlcy50cyBtb2RlPUVESVRcbmV4cG9ydCBjb25zdCBUWVBFUyA9IHtcbiAgICBVc2VyUmVwb3NpdG9yeTogU3ltYm9sLmZvcihcIlVzZXJSZXBvc2l0b3J5XCIpLFxuICAgIEF1dGhTZXJ2aWNlOiBTeW1ib2wuZm9yKFwiQXV0aFNlcnZpY2VcIiksXG4gICAgUGFzc3dvcmRTZXJ2aWNlOiBTeW1ib2wuZm9yKFwiUGFzc3dvcmRTZXJ2aWNlXCIpLFxuICAgIFByaXNtYUNsaWVudDogU3ltYm9sLmZvcihcIlByaXNtYUNsaWVudFwiKSxcbiAgICBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI6IFN5bWJvbC5mb3IoXCJBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJcIilcbn07XG5gYGBgXG5cblVwZGF0ZSB0aGUgQXV0aGVudGljYXRpb25Db250cm9sbGVyOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMgbW9kZT1FRElUXG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgeyBpbmplY3RhYmxlLCBpbmplY3QgfSBmcm9tIFwiaW52ZXJzaWZ5XCI7XG5pbXBvcnQgeyBJQXV0aFNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvaW50ZXJmYWNlcy9hdXRoLnNlcnZpY2UuaW50ZXJmYWNlXCI7XG5pbXBvcnQgeyBUWVBFUyB9IGZyb20gXCIuLi9kaS90eXBlc1wiO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQGluamVjdChUWVBFUy5BdXRoU2VydmljZSkgcHJpdmF0ZSBhdXRoU2VydmljZTogSUF1dGhTZXJ2aWNlXG4gICAgKSB7fVxuXG4gICAgc2lnblVwID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgLy8gVmFsaWRhdGUgaW5wdXRcbiAgICAgICAgICAgIGlmICghdXNlcm5hbWUgfHwgIWVtYWlsIHx8ICFwYXNzd29yZCkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdVc2VybmFtZSwgZW1haWwsIGFuZCBwYXNzd29yZCBhcmUgcmVxdWlyZWQnIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2Uuc2lnblVwKHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9KTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld1VzZXIpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgZXJyb3IubWVzc2FnZSA9PT0gJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzJykge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA5KS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aGVudGljYXRpb25Db250cm9sbGVyLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGNyZWF0ZSB1c2VyJyB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuRmluYWxseSwgdXBkYXRlIHRoZSBpbnZlcnNpZnkgY29udGFpbmVyIGNvbmZpZ3VyYXRpb246XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyBtb2RlPUVESVRcbmltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tICdpbnZlcnNpZnknO1xuaW1wb3J0IHsgVFlQRVMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IFVzZXJSZXBvc2l0b3J5IH0gZnJvbSAnLi4vcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wYXNzd29yZC5zZXJ2aWNlJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXInO1xuaW1wb3J0IHsgZ2V0UHJpc21hQ2xpZW50IH0gZnJvbSAnLi4vcHJpc21hL3ByaXNtYS1jbGllbnQnO1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xuaW1wb3J0IHsgSUF1dGhTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvaW50ZXJmYWNlcy9hdXRoLnNlcnZpY2UuaW50ZXJmYWNlJztcbmltcG9ydCB7IElQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9pbnRlcmZhY2VzL3Bhc3N3b3JkLnNlcnZpY2UuaW50ZXJmYWNlJztcblxuY29uc3QgY29udGFpbmVyID0gbmV3IENvbnRhaW5lcigpO1xuXG4vLyBCaW5kIFByaXNtYUNsaWVudFxuY29udGFpbmVyLmJpbmQ8UHJpc21hQ2xpZW50PihUWVBFUy5QcmlzbWFDbGllbnQpXG4gICAgLnRvRHluYW1pY1ZhbHVlKCgpID0+IGdldFByaXNtYUNsaWVudCgpKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgVXNlclJlcG9zaXRvcnlcbmNvbnRhaW5lci5iaW5kPFVzZXJSZXBvc2l0b3J5PihUWVBFUy5Vc2VyUmVwb3NpdG9yeSlcbiAgICAudG8oVXNlclJlcG9zaXRvcnkpXG4gICAgLmluU2luZ2xldG9uU2NvcGUoKTtcblxuLy8gQmluZCBQYXNzd29yZFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPElQYXNzd29yZFNlcnZpY2U+KFRZUEVTLlBhc3N3b3JkU2VydmljZSlcbiAgICAudG8oUGFzc3dvcmRTZXJ2aWNlKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPElBdXRoU2VydmljZT4oVFlQRVMuQXV0aFNlcnZpY2UpXG4gICAgLnRvKEF1dGhTZXJ2aWNlKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aGVudGljYXRpb25Db250cm9sbGVyXG5jb250YWluZXIuYmluZDxBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI+KFRZUEVTLkF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcilcbiAgICAudG8oQXV0aGVudGljYXRpb25Db250cm9sbGVyKVxuICAgIC5pblJlcXVlc3RTY29wZSgpO1xuXG5leHBvcnQgZGVmYXVsdCBjb250YWluZXI7XG5gYGBgXG5cblRoaXMgaW1wbGVtZW50YXRpb246XG5cbjEuIFVzZXMgcHJvcGVyIGRlcGVuZGVuY3kgaW5qZWN0aW9uIHdpdGggaW50ZXJmYWNlc1xuMi4gU2VwYXJhdGVzIGNvbmNlcm5zIChwYXNzd29yZCBoYXNoaW5nLCB1c2VyIGNyZWF0aW9uLCBldGMuKVxuMy4gVXNlcyBzeW1ib2xzIGZvciB0eXBlIGlkZW50aWZpY2F0aW9uXG40LiBJbXBsZW1lbnRzIHByb3BlciBzY29waW5nIGZvciBzZXJ2aWNlcyBhbmQgY29udHJvbGxlcnNcbjUuIFByb3ZpZGVzIHR5cGUgc2FmZXR5IHRocm91Z2hvdXQgdGhlIGFwcGxpY2F0aW9uXG5cblRoZSBhdXRoZW50aWNhdGlvbiBmbG93IGlzIG5vdyBtb3JlIG1haW50YWluYWJsZSBhbmQgdGVzdGFibGUsIGFzIGVhY2ggY29tcG9uZW50IGNhbiBiZSBtb2NrZWQgYW5kIHRlc3RlZCBpbmRlcGVuZGVudGx5LiBXb3VsZCB5b3UgbGlrZSBtZSB0byBhZGQgYW55IGFkZGl0aW9uYWwgZmVhdHVyZXMgb3IgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucz9cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjUzOCIsImJsb2JfbmFtZSI6IjMxOWQxODZhZDkzMmE1NmNkNTczMDRjNDYwODg4YTI3MmY5ZDQxMzg3NTU4Yzg1MDY0MDMzZmQzM2ZmMGM2MWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzQzIiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk3NiIsImJsb2JfbmFtZSI6IjI5MDg5YjhlNjQwNWJkZjgyZTk2MDIyN2JmMDAzYmExMTY4NzYyNGE3YWJkMmJlY2IzNzc4MzY4M2M3YzhiMzMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJkb2NrZXItY29tcG9zZS55bWwifX0seyJjaGFyX3N0YXJ0IjoiOTc2IiwiY2hhcl9lbmQiOiIxNDEzIiwiYmxvYl9uYW1lIjoiMjkwODliOGU2NDA1YmRmODJlOTYwMjI3YmYwMDNiYTExNjg3NjI0YTdhYmQyYmVjYjM3NzgzNjgzYzdjOGIzMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRvY2tlci1jb21wb3NlLnltbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2ODYiLCJibG9iX25hbWUiOiJkN2I4YmUxNDQ2NzlhMmVmYzFlNmY2Yjc3ZjI5Zjc4Y2VmZDdiOTBmMjNiNTg1NGI5NGFmMmFiYzUwMjQxNWU5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjI2IiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDIyIiwiYmxvYl9uYW1lIjoiODhkN2NhMTQxZmRkZWRkMGU2OGZkM2ZmYmZjZWFiZmMzYTY4MDA2ZWFkNmQwMjVmNjM1MDQzNTM0NmY2MzUwZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTg2IiwiYmxvYl9uYW1lIjoiNDdjNjE5MTQxMGZlMGRmM2U3MWJjYWVlNTcyMTZjMjkzNDFmOGZjYTliNDllNDVhMTQzNTFmNWYyYjQ2YmQ1NyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzIn19LHsiY2hhcl9zdGFydCI6IjU4NiIsImNoYXJfZW5kIjoiOTQzIiwiYmxvYl9uYW1lIjoiNDdjNjE5MTQxMGZlMGRmM2U3MWJjYWVlNTcyMTZjMjkzNDFmOGZjYTliNDllNDVhMTQzNTFmNWYyYjQ2YmQ1NyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQwOSIsImJsb2JfbmFtZSI6ImJhNmE1YWM5MDA1MzRjYTQ2ZDE5MjkyNTQzNDU2ZTc3MTc0NmE2ZTcyMmZjNGQ3MGY0ZmQwMjAyYWYxYzFjYzgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9Eb2NrZXJmaWxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjUzNyIsImJsb2JfbmFtZSI6ImVhMjY0ZTFjOTJkNDQ1NTRhNDNmMjViMmI4YjI1MjY3MjczNTE0YWIzZTQwYjhkMjRlNzQ4NDZhOGY2ZTZhYzIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvaW5kZXgudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY1NSIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjY1NSIsImNoYXJfZW5kIjoiMTQwNyIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjE0MDciLCJjaGFyX2VuZCI6IjE3NDEiLCJibG9iX25hbWUiOiJjZGJmZmQzNDc1MjNlYTdhMjY4MzZhZGM5YWYzYTc3N2U1NmY5ZWU2ZTgyZDhkYjk4N2Y2MjhmOTAzMzQ1YmQzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0ODYiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjExNTUiLCJjaGFyX2VuZCI6IjE5NTAiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjI4NjUiLCJjaGFyX2VuZCI6IjM3NDEiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjcyMyIsImJsb2JfbmFtZSI6IjZjMzI1Mjk5OTM4OWRlYTNmMDQ5MTA1ZGQ1ZGY0MmQ3NDk5ODM0ZmVlMjJhNjE1ZmI3ZGYxNTcxMTYxZjg4YzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8uc2gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTc5IiwiYmxvYl9uYW1lIjoiMDE0YmExMDQ0ZDQ3ZTUxYjVjNWY2MjI3ZmU1Mzc2OGZiYzNlZGFiYWQwMTY0NjQ2MjBiN2M0ZjNiZDhiM2Y1MyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvdHNjb25maWcuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0ODYiLCJibG9iX25hbWUiOiIxYjkxNDgwN2QxNzhmZjVkYmUzYmFiY2Q3NzY5YTg0ZGNkZTkyNzcyOWU1MGY3Y2NjMGU1NDY0OTE5MzMyMGRjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0RvY2tlcmZpbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjk2IiwiYmxvYl9uYW1lIjoiMWZhMTM4YjA2NWE4MmI3NzFlZGZlNzEwMjNjMDkyOGNhM2E5Mjg3YTE5N2FlMDAwNDMxZmNlNmE2YTA3ZDA3ZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IkdJVC1TRVJWRVIvRG9ja2VyZmlsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MjciLCJibG9iX25hbWUiOiJmMWE5NmEyNzA2OGIwZDRhZjU3N2M1YzE0YmRlZmJiOWM1NzgyMjgyMGI0NTVkMTFjZWI0NzEwOGRlY2JlMTg5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L3V0aWxzL2luaXRHaXRSZXBvLnNoIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY3NCIsImJsb2JfbmFtZSI6Ijg1YTUzMDFhZjEyZGVkMTg4NjYyZmYyODQ5N2JjY2U3ZDdiOGYxNTlhMTkxZTY0YWEyMGYzMmJjOThjYmQ5ZGEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjY3NCIsImNoYXJfZW5kIjoiMTY0NiIsImJsb2JfbmFtZSI6Ijg1YTUzMDFhZjEyZGVkMTg4NjYyZmYyODQ5N2JjY2U3ZDdiOGYxNTlhMTkxZTY0YWEyMGYzMmJjOThjYmQ5ZGEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0OCIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTczIiwiYmxvYl9uYW1lIjoiMzgxOWU2MjFmOTdhZjJkMjE5N2YzYmQ5MWJlMzliNGY2OTlhMTAzZDAxMjA2MDUzNWFlZTNiNWIwMThkMDlmZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii5naXRpZ25vcmUifX0seyJjaGFyX3N0YXJ0IjoiMjA0IiwiY2hhcl9lbmQiOiIxMDAzIiwiYmxvYl9uYW1lIjoiYmU2MjhjODZkZWRhZjZhODVkY2RjNDJhMjNmZTI4NGMyNjUxODc0YWY0YmUwYjc2MmIzNzRmMTUzZmUwOTMwZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvZXNsaW50LmNvbmZpZy5qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxNTUiLCJibG9iX25hbWUiOiIzNTdjY2RmNjEzMzVmMzIwMDY2ZTFjMDU4MTgxNzU4ZjM0MWM1ZjU3NzVmOTBkYWE2YmRkNjZkNmQ5MWFlMzQyIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiREFUQUJBU0UvZG9ja2VyZmlsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxNjEiLCJibG9iX25hbWUiOiI4MWM5ZjAwOTY4YTg4MGI4ODJmNTMyMDc0Mjg2YTYzZTc0ZWRkMjAwMTViZWFhYjJhMTg2MGZkZjdhMTc3MzlkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC92aXRlLmNvbmZpZy5qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxMjciLCJibG9iX25hbWUiOiJjZDhmODNlZjE1ODllZjg3ODMyNjQ4YWFhYTMzNmNiYTE4OWU3NDUxMDYxZGFjYWJjZGU2ZDQ1ZDYzODMyMWRmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvbWlncmF0aW9uX2xvY2sudG9tbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4MDMiLCJibG9iX25hbWUiOiI5ZWYyYTk0ZWZiNTU4N2JkYzQyYmNlZTc3MDI4ZjAyMWMwNmUzOTVhZTUwOGU2MjU2YjE4OTBhM2NiMmQ4ZDljIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnRzIn19LHsiY2hhcl9zdGFydCI6IjE0NzciLCJjaGFyX2VuZCI6IjIyOTEiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6Ijc2NyIsImNoYXJfZW5kIjoiMTM3NCIsImJsb2JfbmFtZSI6IjExODZmMTk4NzFjMmExYjhmN2IwZjZkMmQ1ZGE1ZTQxMTJkNzBhYmE0MjViY2ViZjY3OGI2YWE1MjVjN2I3MzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvcHJlLXB1c2guc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU0NCIsImJsb2JfbmFtZSI6IjA4N2VlNjk0NDE5YjVkNzBmMGQzNmY3MjRkYzJjNjZiODRlZGRiY2FkY2M2ZjM5MWY4MmIwNmUxMWYyYWY3MGIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvcHJlLXJlY2VpdmUuc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6Ijc1MCIsImNoYXJfZW5kIjoiODk2IiwiYmxvYl9uYW1lIjoiNmQ0YjM5Y2RlZDYyMTVmYjNmMmZhYjZkZWUzNjMzNmFkMWIwNTFjMjcyNTc1NmNkYzlhYzVlY2NkMGYzMTlhOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvbXktcmVwby1uYW1lLmdpdC9ob29rcy9jb21taXQtbXNnLnNhbXBsZSJ9fV19XSwiZmVlZGJhY2tTdGF0ZXMiOnsidGVtcC1mZS02ZGQzN2M0ZC1lNzliLTQ0ZjQtOWZjMy1iYmMxMWM3MGQ2N2EiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWQ4OGNmYzM2LThkNWItNDVhYy1hMTc1LTg3NDM0MzgxODQ1NCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6e30sImRyYWZ0QWN0aXZlQ29udGV4dElkcyI6WyIvaG9tZS9qb2JyYW4vRGVza3RvcC9pbnRlcm5zaGlwL215LXByb2plY3RmYWxzZWZhbHNlIl19LCJkNzdlMjFhNS00OTZlLTRjYmUtYmVlZS03Y2MzNDdlMTFkNWQiOnsiaWQiOiJkNzdlMjFhNS00OTZlLTRjYmUtYmVlZS03Y2MzNDdlMTFkNWQiLCJjcmVhdGVkQXRJc28iOiIyMDI1LTAzLTE4VDEzOjIyOjQ0LjU4M1oiLCJsYXN0SW50ZXJhY3RlZEF0SXNvIjoiMjAyNS0wMy0xOFQyMzowOToyNS43MDhaIiwiY2hhdEhpc3RvcnkiOlt7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMTgwNjU4Y2YtMjIxMy00ZDNlLTk1NTQtMjgyYjVlMDM4ODg3IiwicmVxdWVzdF9tZXNzYWdlIjoiaGkgcGVsYXNlIGV4cGxhaW4gbWUgaG93IHRvIGNyZWF0ZSB0aGUgIHNpbmd1cCBjb250cm9sbGVyICBhbmQgdGhlIGZpZWxzIG5lZWRlZCBmb3IgaXQgIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6ImhpIHBlbGFzZSBleHBsYWluIG1lIGhvdyB0byBjcmVhdGUgdGhlICBzaW5ndXAgY29udHJvbGxlciAgYW5kIHRoZSBmaWVscyBuZWVkZWQgZm9yIGl0ICJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSdsbCBoZWxwIHlvdSBjcmVhdGUgdGhlIHNpZ251cCBjb250cm9sbGVyLiBCYXNlZCBvbiB5b3VyIHNjaGVtYSBhbmQgZXhpc3RpbmcgY29kZSwgSSdsbCBjcmVhdGUgYSBjb21wbGV0ZSBzaWdudXAgaW1wbGVtZW50YXRpb24uXG5cbkZpcnN0LCBsZXQncyB1cGRhdGUgdGhlIGBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJgOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuaW1wb3J0IHtSZXF1ZXN0LCBSZXNwb25zZX0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7aW5qZWN0YWJsZSwgaW5qZWN0fSBmcm9tIFwiaW52ZXJzaWZ5XCI7XG5pbXBvcnQge0F1dGhTZXJ2aWNlfSBmcm9tIFwiLi4vc2VydmljZXMvYXV0aC5zZXJ2aWNlXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoQXV0aFNlcnZpY2UpIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgc2lnblVwID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgLy8gQmFzaWMgdmFsaWRhdGlvblxuICAgICAgICAgICAgaWYgKCF1c2VybmFtZSB8fCAhZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6ICdNaXNzaW5nIHJlcXVpcmVkIGZpZWxkczogdXNlcm5hbWUsIGVtYWlsLCBhbmQgcGFzc3dvcmQgYXJlIHJlcXVpcmVkJyBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEVtYWlsIGZvcm1hdCB2YWxpZGF0aW9uXG4gICAgICAgICAgICBjb25zdCBlbWFpbFJlZ2V4ID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC87XG4gICAgICAgICAgICBpZiAoIWVtYWlsUmVnZXgudGVzdChlbWFpbCkpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSW52YWxpZCBlbWFpbCBmb3JtYXQnIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXNlcm5hbWUgdmFsaWRhdGlvbiAoYWxwaGFudW1lcmljIGFuZCBiZXR3ZWVuIDMtNTAgY2hhcmFjdGVycylcbiAgICAgICAgICAgIGlmICghL15bYS16QS1aMC05XXszLDUwfSQvLnRlc3QodXNlcm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6ICdVc2VybmFtZSBtdXN0IGJlIGFscGhhbnVtZXJpYyBhbmQgYmV0d2VlbiAzLTUwIGNoYXJhY3RlcnMnIFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gUGFzc3dvcmQgdmFsaWRhdGlvbiAobWluaW11bSA4IGNoYXJhY3RlcnMpXG4gICAgICAgICAgICBpZiAocGFzc3dvcmQubGVuZ3RoIDwgOCkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiAnUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMgbG9uZycgXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcCh7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmQsIC8vIE5vdGU6IFRoaXMgd2lsbCBiZSBoYXNoZWQgaW4gdGhlIHNlcnZpY2VcbiAgICAgICAgICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKClcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7IG1lc3NhZ2U6ICdVc2VyIHJlZ2lzdGVyZWQgc3VjY2Vzc2Z1bGx5JywgZGF0YTogcmVzdWx0IH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aGVudGljYXRpb25Db250cm9sbGVyLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIHJlZ2lzdGVyIHVzZXInIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5Ob3csIGxldCdzIHVwZGF0ZSB0aGUgYEF1dGhTZXJ2aWNlYDpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuaW1wb3J0IHtQcmlzbWEsIHVzZXJzfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQge1VzZXJSZXBvc2l0b3J5fSBmcm9tIFwiQC9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5pbXBvcnQge2luamVjdCwgaW5qZWN0YWJsZX0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCAqIGFzIGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2Uge1xuICAgIHByaXZhdGUgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5O1xuXG4gICAgY29uc3RydWN0b3IoQGluamVjdCgnVXNlclJlcG9zaXRvcnknKSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHtcbiAgICAgICAgdGhpcy51c2VyUmVwb3NpdG9yeSA9IHVzZXJSZXBvc2l0b3J5O1xuICAgIH1cblxuICAgIGFzeW5jIHNpZ25VcCh1c2VyOiBQcmlzbWEudXNlcnNDcmVhdGVJbnB1dCk6IFByb21pc2U8dXNlcnM+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHVzZXIgYWxyZWFkeSBleGlzdHNcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkucHJpc21hLnVzZXJzLmZpbmRGaXJzdCh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgT1I6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1haWw6IHVzZXIuZW1haWwgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIG9yIHVzZXJuYW1lIGFscmVhZHkgZXhpc3RzJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEhhc2ggdGhlIHBhc3N3b3JkXG4gICAgICAgICAgICBjb25zdCBzYWx0Um91bmRzID0gMTA7XG4gICAgICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXIucGFzc3dvcmRfaGFzaCwgc2FsdFJvdW5kcyk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBuZXcgdXNlclxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkucHJpc21hLnVzZXJzLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAuLi51c2VyLFxuICAgICAgICAgICAgICAgICAgICBwYXNzd29yZF9oYXNoOiBoYXNoZWRQYXNzd29yZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBSZW1vdmUgcGFzc3dvcmRfaGFzaCBmcm9tIHJlc3BvbnNlXG4gICAgICAgICAgICBjb25zdCB7IHBhc3N3b3JkX2hhc2gsIC4uLnVzZXJXaXRob3V0UGFzc3dvcmQgfSA9IG5ld1VzZXI7XG4gICAgICAgICAgICByZXR1cm4gdXNlcldpdGhvdXRQYXNzd29yZCBhcyB1c2VycztcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEF1dGhTZXJ2aWNlLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuRmluYWxseSwgdXBkYXRlIHRoZSBhdXRoZW50aWNhdGlvbiByb3V0ZXM6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5pbXBvcnQge1JvdXRlcn0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge0F1dGhlbnRpY2F0aW9uQ29udHJvbGxlcn0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXJcIjtcbmltcG9ydCBjb250YWluZXIgZnJvbSBcIi4uL2RpL2ludmVyc2lmeS5jb25maWdcIjtcblxuZXhwb3J0IGNvbnN0IGF1dGhlbnRpY2F0aW9uUm91dGVzID0gKCk6IFJvdXRlciA9PiB7XG4gICAgY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG4gICAgY29uc3QgYXV0aENvbnRyb2xsZXIgPSBjb250YWluZXIuZ2V0PEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcj4oQXV0aGVudGljYXRpb25Db250cm9sbGVyKTtcbiAgICBcbiAgICByb3V0ZXIucG9zdChcIi9zaWdudXBcIiwgYXV0aENvbnRyb2xsZXIuc2lnblVwKTtcbiAgICBcbiAgICByZXR1cm4gcm91dGVyO1xufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5Eb24ndCBmb3JnZXQgdG8gYWRkIHRoZSBkZXBlbmRlbmNpZXMgdG8geW91ciBgaW52ZXJzaWZ5LmNvbmZpZy50c2A6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG4vLyBBZGQgdGhlc2UgbGluZXMgYWZ0ZXIgdGhlIGV4aXN0aW5nIGJpbmRpbmdzXG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIgfSBmcm9tICcuLi9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyJztcblxuLy8gQmluZCBBdXRoU2VydmljZVxuY29udGFpbmVyLmJpbmQ8QXV0aFNlcnZpY2U+KEF1dGhTZXJ2aWNlKVxuICAgIC50b1NlbGYoKVxuICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbi8vIEJpbmQgQXV0aGVudGljYXRpb25Db250cm9sbGVyXG5jb250YWluZXIuYmluZDxBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI+KEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcilcbiAgICAudG9TZWxmKClcbiAgICAuaW5SZXF1ZXN0U2NvcGUoKTtcbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuQWxzbywgaW5zdGFsbCB0aGUgcmVxdWlyZWQgYmNyeXB0IHBhY2thZ2U6XG5gYGBiYXNoXG5ucG0gaW5zdGFsbCBiY3J5cHRcbm5wbSBpbnN0YWxsIEB0eXBlcy9iY3J5cHQgLS1zYXZlLWRldlxuYGBgXG5cblRoaXMgaW1wbGVtZW50YXRpb246XG4xLiBWYWxpZGF0ZXMgcmVxdWlyZWQgZmllbGRzICh1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkKVxuMi4gVmFsaWRhdGVzIGVtYWlsIGZvcm1hdFxuMy4gVmFsaWRhdGVzIHVzZXJuYW1lIGZvcm1hdCAoYWxwaGFudW1lcmljLCAzLTUwIGNoYXJzKVxuNC4gVmFsaWRhdGVzIHBhc3N3b3JkIGxlbmd0aCAobWluaW11bSA4IGNoYXJzKVxuNS4gQ2hlY2tzIGZvciBleGlzdGluZyB1c2VycyB3aXRoIHRoZSBzYW1lIGVtYWlsIG9yIHVzZXJuYW1lXG42LiBIYXNoZXMgdGhlIHBhc3N3b3JkIGJlZm9yZSBzdG9yaW5nXG43LiBSZW1vdmVzIHRoZSBwYXNzd29yZCBoYXNoIGZyb20gdGhlIHJlc3BvbnNlXG5cblRoZSBzaWdudXAgZW5kcG9pbnQgd2lsbCBiZSBhdmFpbGFibGUgYXQ6IGBQT1NUIC92MS9hcGkvc2lnbnVwYFxuXG5SZXF1ZXN0IGJvZHkgZm9ybWF0OlxuYGBganNvblxue1xuICAgIFwidXNlcm5hbWVcIjogXCJqb2huZG9lXCIsXG4gICAgXCJlbWFpbFwiOiBcImpvaG5AZXhhbXBsZS5jb21cIixcbiAgICBcInBhc3N3b3JkXCI6IFwic2VjdXJlcGFzc3dvcmQxMjNcIlxufVxuYGBgXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHM6MC00MjJcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHM6MC0zNzlcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50czowLTMxMlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjMxMi0xMjQ3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MTI0Ny0xNDc3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MTQ3Ny0yMjkxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MjI5MS0zMjYyXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MzI2Mi0zNDk2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MzQ5Ni00NDY4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHM6MC01ODBcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjAtNzQzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTo3NDMtMTQ2MlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWE6MTQ2Mi0xOTM2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYToxOTM2LTI1NDhcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjI1NDgtMzMwNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWE6MzMwNi00MDgzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTo0MDgzLTQ2ODNcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czowLTQ4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjExNTUtMTk1MFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjI4NjUtMzc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL3VzZXIucm91dGVzLnRzOjAtNzIxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWw6MC03NDhcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbDo3NDgtMTUzNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjE1MzYtMjMzM1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjIzMzMtMjcwNVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjI3MDUtMzM3OFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjMzNzgtNDA5NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjQwOTUtNDg0NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjQ4NDYtNTA0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzOjAtNTM3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjAtNjU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjY1NS0xNDA3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjE0MDctMTc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvZ2l0LmNvbnRyb2xsZXIudHM6MC02ODRcbldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzOjAtNjE4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzOjAtNjY3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzOjE2MzktMjY4OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxODM3MjNfZmlyc3RjaGFuZ2UvbWlncmF0aW9uLnNxbDowLTI5NlxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb246MC02ODZcbmRvY2tlci1jb21wb3NlLnltbDowLTk3NlxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2dpdC5yb3V0ZXMudHM6MC0yNDBcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zL21pZ3JhdGlvbl9sb2NrLnRvbWw6MC0xMjdcbldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC9pbml0R2l0UmVwby5zaDowLTcyM1xuVk9MVU1FUy9yZXBvc2l0b3J5cy9teS1yZXBvLW5hbWUuZ2l0L2hvb2tzL2NvbW1pdC1tc2cuc2FtcGxlOjAtNzUwXG5WT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGU6NzUwLTg5NlxuVk9MVU1FUy9yZXBvc2l0b3J5cy9teS5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGU6MC03NTBcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzOjAtNTg2In1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJJJ2xsIGhlbHAgeW91IGNyZWF0ZSB0aGUgc2lnbnVwIGNvbnRyb2xsZXIuIEJhc2VkIG9uIHlvdXIgc2NoZW1hIGFuZCBleGlzdGluZyBjb2RlLCBJJ2xsIGNyZWF0ZSBhIGNvbXBsZXRlIHNpZ251cCBpbXBsZW1lbnRhdGlvbi5cblxuRmlyc3QsIGxldCdzIHVwZGF0ZSB0aGUgYEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcmA6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50cyBtb2RlPUVESVRcbmltcG9ydCB7UmVxdWVzdCwgUmVzcG9uc2V9IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQge2luamVjdGFibGUsIGluamVjdH0gZnJvbSBcImludmVyc2lmeVwiO1xuaW1wb3J0IHtBdXRoU2VydmljZX0gZnJvbSBcIi4uL3NlcnZpY2VzL2F1dGguc2VydmljZVwiO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25Db250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KEF1dGhTZXJ2aWNlKSBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSkge31cblxuICAgIHNpZ25VcCA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgICAgICAgICAgIC8vIEJhc2ljIHZhbGlkYXRpb25cbiAgICAgICAgICAgIGlmICghdXNlcm5hbWUgfHwgIWVtYWlsIHx8ICFwYXNzd29yZCkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiAnTWlzc2luZyByZXF1aXJlZCBmaWVsZHM6IHVzZXJuYW1lLCBlbWFpbCwgYW5kIHBhc3N3b3JkIGFyZSByZXF1aXJlZCcgXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBFbWFpbCBmb3JtYXQgdmFsaWRhdGlvblxuICAgICAgICAgICAgY29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvO1xuICAgICAgICAgICAgaWYgKCFlbWFpbFJlZ2V4LnRlc3QoZW1haWwpKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0ludmFsaWQgZW1haWwgZm9ybWF0JyB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFVzZXJuYW1lIHZhbGlkYXRpb24gKGFscGhhbnVtZXJpYyBhbmQgYmV0d2VlbiAzLTUwIGNoYXJhY3RlcnMpXG4gICAgICAgICAgICBpZiAoIS9eW2EtekEtWjAtOV17Myw1MH0kLy50ZXN0KHVzZXJuYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiAnVXNlcm5hbWUgbXVzdCBiZSBhbHBoYW51bWVyaWMgYW5kIGJldHdlZW4gMy01MCBjaGFyYWN0ZXJzJyBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFBhc3N3b3JkIHZhbGlkYXRpb24gKG1pbmltdW0gOCBjaGFyYWN0ZXJzKVxuICAgICAgICAgICAgaWYgKHBhc3N3b3JkLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogJ1Bhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzIGxvbmcnIFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5hdXRoU2VydmljZS5zaWduVXAoe1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkX2hhc2g6IHBhc3N3b3JkLCAvLyBOb3RlOiBUaGlzIHdpbGwgYmUgaGFzaGVkIGluIHRoZSBzZXJ2aWNlXG4gICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyBtZXNzYWdlOiAnVXNlciByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseScsIGRhdGE6IHJlc3VsdCB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlci5zaWduVXA6JywgZXJyb3IpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byByZWdpc3RlciB1c2VyJyB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuTm93LCBsZXQncyB1cGRhdGUgdGhlIGBBdXRoU2VydmljZWA6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIG1vZGU9RURJVFxuaW1wb3J0IHtQcmlzbWEsIHVzZXJzfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQge1VzZXJSZXBvc2l0b3J5fSBmcm9tIFwiQC9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5pbXBvcnQge2luamVjdCwgaW5qZWN0YWJsZX0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCAqIGFzIGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2Uge1xuICAgIHByaXZhdGUgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5O1xuXG4gICAgY29uc3RydWN0b3IoQGluamVjdCgnVXNlclJlcG9zaXRvcnknKSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHtcbiAgICAgICAgdGhpcy51c2VyUmVwb3NpdG9yeSA9IHVzZXJSZXBvc2l0b3J5O1xuICAgIH1cblxuICAgIGFzeW5jIHNpZ25VcCh1c2VyOiBQcmlzbWEudXNlcnNDcmVhdGVJbnB1dCk6IFByb21pc2U8dXNlcnM+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHVzZXIgYWxyZWFkeSBleGlzdHNcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkucHJpc21hLnVzZXJzLmZpbmRGaXJzdCh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgT1I6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1haWw6IHVzZXIuZW1haWwgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIG9yIHVzZXJuYW1lIGFscmVhZHkgZXhpc3RzJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEhhc2ggdGhlIHBhc3N3b3JkXG4gICAgICAgICAgICBjb25zdCBzYWx0Um91bmRzID0gMTA7XG4gICAgICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXIucGFzc3dvcmRfaGFzaCwgc2FsdFJvdW5kcyk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBuZXcgdXNlclxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkucHJpc21hLnVzZXJzLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAuLi51c2VyLFxuICAgICAgICAgICAgICAgICAgICBwYXNzd29yZF9oYXNoOiBoYXNoZWRQYXNzd29yZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBSZW1vdmUgcGFzc3dvcmRfaGFzaCBmcm9tIHJlc3BvbnNlXG4gICAgICAgICAgICBjb25zdCB7IHBhc3N3b3JkX2hhc2gsIC4uLnVzZXJXaXRob3V0UGFzc3dvcmQgfSA9IG5ld1VzZXI7XG4gICAgICAgICAgICByZXR1cm4gdXNlcldpdGhvdXRQYXNzd29yZCBhcyB1c2VycztcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEF1dGhTZXJ2aWNlLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuRmluYWxseSwgdXBkYXRlIHRoZSBhdXRoZW50aWNhdGlvbiByb3V0ZXM6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50cyBtb2RlPUVESVRcbmltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7QXV0aGVudGljYXRpb25Db250cm9sbGVyfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlclwiO1xuaW1wb3J0IGNvbnRhaW5lciBmcm9tIFwiLi4vZGkvaW52ZXJzaWZ5LmNvbmZpZ1wiO1xuXG5leHBvcnQgY29uc3QgYXV0aGVudGljYXRpb25Sb3V0ZXMgPSAoKTogUm91dGVyID0+IHtcbiAgICBjb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbiAgICBjb25zdCBhdXRoQ29udHJvbGxlciA9IGNvbnRhaW5lci5nZXQ8QXV0aGVudGljYXRpb25Db250cm9sbGVyPihBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIpO1xuICAgIFxuICAgIHJvdXRlci5wb3N0KFwiL3NpZ251cFwiLCBhdXRoQ29udHJvbGxlci5zaWduVXApO1xuICAgIFxuICAgIHJldHVybiByb3V0ZXI7XG59XG5gYGBgXG5cbkRvbid0IGZvcmdldCB0byBhZGQgdGhlIGRlcGVuZGVuY2llcyB0byB5b3VyIGBpbnZlcnNpZnkuY29uZmlnLnRzYDpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIG1vZGU9RURJVFxuLy8gQWRkIHRoZXNlIGxpbmVzIGFmdGVyIHRoZSBleGlzdGluZyBiaW5kaW5nc1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRpb25Db250cm9sbGVyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlcic7XG5cbi8vIEJpbmQgQXV0aFNlcnZpY2VcbmNvbnRhaW5lci5iaW5kPEF1dGhTZXJ2aWNlPihBdXRoU2VydmljZSlcbiAgICAudG9TZWxmKClcbiAgICAuaW5TaW5nbGV0b25TY29wZSgpO1xuXG4vLyBCaW5kIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlclxuY29udGFpbmVyLmJpbmQ8QXV0aGVudGljYXRpb25Db250cm9sbGVyPihBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIpXG4gICAgLnRvU2VsZigpXG4gICAgLmluUmVxdWVzdFNjb3BlKCk7XG5gYGBgXG5cbkFsc28sIGluc3RhbGwgdGhlIHJlcXVpcmVkIGJjcnlwdCBwYWNrYWdlOlxuYGBgYmFzaFxubnBtIGluc3RhbGwgYmNyeXB0XG5ucG0gaW5zdGFsbCBAdHlwZXMvYmNyeXB0IC0tc2F2ZS1kZXZcbmBgYFxuXG5UaGlzIGltcGxlbWVudGF0aW9uOlxuMS4gVmFsaWRhdGVzIHJlcXVpcmVkIGZpZWxkcyAodXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZClcbjIuIFZhbGlkYXRlcyBlbWFpbCBmb3JtYXRcbjMuIFZhbGlkYXRlcyB1c2VybmFtZSBmb3JtYXQgKGFscGhhbnVtZXJpYywgMy01MCBjaGFycylcbjQuIFZhbGlkYXRlcyBwYXNzd29yZCBsZW5ndGggKG1pbmltdW0gOCBjaGFycylcbjUuIENoZWNrcyBmb3IgZXhpc3RpbmcgdXNlcnMgd2l0aCB0aGUgc2FtZSBlbWFpbCBvciB1c2VybmFtZVxuNi4gSGFzaGVzIHRoZSBwYXNzd29yZCBiZWZvcmUgc3RvcmluZ1xuNy4gUmVtb3ZlcyB0aGUgcGFzc3dvcmQgaGFzaCBmcm9tIHRoZSByZXNwb25zZVxuXG5UaGUgc2lnbnVwIGVuZHBvaW50IHdpbGwgYmUgYXZhaWxhYmxlIGF0OiBgUE9TVCAvdjEvYXBpL3NpZ251cGBcblxuUmVxdWVzdCBib2R5IGZvcm1hdDpcbmBgYGpzb25cbntcbiAgICBcInVzZXJuYW1lXCI6IFwiam9obmRvZVwiLFxuICAgIFwiZW1haWxcIjogXCJqb2huQGV4YW1wbGUuY29tXCIsXG4gICAgXCJwYXNzd29yZFwiOiBcInNlY3VyZXBhc3N3b3JkMTIzXCJcbn1cbmBgYFxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDIyIiwiYmxvYl9uYW1lIjoiODhkN2NhMTQxZmRkZWRkMGU2OGZkM2ZmYmZjZWFiZmMzYTY4MDA2ZWFkNmQwMjVmNjM1MDQzNTM0NmY2MzUwZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzEyIiwiYmxvYl9uYW1lIjoiYzY3NjQ4YWJjMWFkYjc0NmU3YzE1NDk4MTE1ZTVmOTFkM2Q3YWZlZTE0MmVlYzY4ZDVjZDgzM2U5MTJjNzZhMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIzMTIiLCJjaGFyX2VuZCI6IjEyNDciLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjEyNDciLCJjaGFyX2VuZCI6IjE0NzciLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjE0NzciLCJjaGFyX2VuZCI6IjIyOTEiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjIyOTEiLCJjaGFyX2VuZCI6IjMyNjIiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjMyNjIiLCJjaGFyX2VuZCI6IjM0OTYiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjM0OTYiLCJjaGFyX2VuZCI6IjQ0NjgiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU4MCIsImJsb2JfbmFtZSI6Ijc0ZDkzZjBkNTVkZmY5ODg5ZDgwYmYyNWYyODhjMDk4MmViN2FjNzFlMmM3OGY2YzFkZDJmMjUxZWRjZDlmNmUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzQzIiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6Ijc0MyIsImNoYXJfZW5kIjoiMTQ2MiIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIxNDYyIiwiY2hhcl9lbmQiOiIxOTM2IiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjE5MzYiLCJjaGFyX2VuZCI6IjI1NDgiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMjU0OCIsImNoYXJfZW5kIjoiMzMwNiIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIzMzA2IiwiY2hhcl9lbmQiOiI0MDgzIiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjQwODMiLCJjaGFyX2VuZCI6IjQ2ODMiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDg2IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxMTU1IiwiY2hhcl9lbmQiOiIxOTUwIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyODY1IiwiY2hhcl9lbmQiOiIzNzQxIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MjEiLCJibG9iX25hbWUiOiI5M2U0ZDYxNGYzYjA1M2YxMzdlNTk1M2E2ZDI5Y2E3ZWYzNTEyYjcwOTMwMzkwMzdmNjNlODBlYTZjNWM5MDg2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL3VzZXIucm91dGVzLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0OCIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiNzQ4IiwiY2hhcl9lbmQiOiIxNTM2IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIxNTM2IiwiY2hhcl9lbmQiOiIyMzMzIiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIyMzMzIiwiY2hhcl9lbmQiOiIyNzA1IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIyNzA1IiwiY2hhcl9lbmQiOiIzMzc4IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIzMzc4IiwiY2hhcl9lbmQiOiI0MDk1IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiI0MDk1IiwiY2hhcl9lbmQiOiI0ODQ2IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiI0ODQ2IiwiY2hhcl9lbmQiOiI1MDQxIiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1MzciLCJibG9iX25hbWUiOiJlYTI2NGUxYzkyZDQ0NTU0YTQzZjI1YjJiOGIyNTI2NzI3MzUxNGFiM2U0MGI4ZDI0ZTc0ODQ2YThmNmU2YWMyIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY1NSIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjY1NSIsImNoYXJfZW5kIjoiMTQwNyIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjE0MDciLCJjaGFyX2VuZCI6IjE3NDEiLCJibG9iX25hbWUiOiJjZGJmZmQzNDc1MjNlYTdhMjY4MzZhZGM5YWYzYTc3N2U1NmY5ZWU2ZTgyZDhkYjk4N2Y2MjhmOTAzMzQ1YmQzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2ODQiLCJibG9iX25hbWUiOiIwMDc2NDQ0NTRiNzk3NzdmODg1OTQzYmVlOTM5YmE2NmMwZDAxY2FiZTNmM2Y0NjJjMzNkNDg3ZTdhZjc2NDE3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvZ2l0LmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjE2MzkiLCJjaGFyX2VuZCI6IjI2ODkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIyOTYiLCJibG9iX25hbWUiOiJmODIxNDZlMTM3NWY1ODAxZGM3OTdkZWJjZThjNjUyNGU2NTk4ODVmNzNlMjBmZDc4YzRjMjM1NjZlMTZiMTFmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxODM3MjNfZmlyc3RjaGFuZ2UvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2ODYiLCJibG9iX25hbWUiOiJkN2I4YmUxNDQ2NzlhMmVmYzFlNmY2Yjc3ZjI5Zjc4Y2VmZDdiOTBmMjNiNTg1NGI5NGFmMmFiYzUwMjQxNWU5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTc2IiwiYmxvYl9uYW1lIjoiMjkwODliOGU2NDA1YmRmODJlOTYwMjI3YmYwMDNiYTExNjg3NjI0YTdhYmQyYmVjYjM3NzgzNjgzYzdjOGIzMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRvY2tlci1jb21wb3NlLnltbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjYiLCJibG9iX25hbWUiOiIxOTQxYjZlYjQwMmE5NzVmZjZjNjlmMWI5OGI2NGIzN2NmZWYzNDRmNjc5NGFiYTA3ZDMwMTUzNmVjMGY1NjU2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIyNDAiLCJibG9iX25hbWUiOiJjNTQ5ODY5OWRiNGRhYTZiNmQyYzVmMDQ4M2FmZWFlNGY2YzRjNTU5Mjg0Y2M3NzEyOGYwM2FjNzdiNTE5Mjg3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2dpdC5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTI3IiwiYmxvYl9uYW1lIjoiY2Q4ZjgzZWYxNTg5ZWY4NzgzMjY0OGFhYWEzMzZjYmExODllNzQ1MTA2MWRhY2FiY2RlNmQ0NWQ2MzgzMjFkZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zL21pZ3JhdGlvbl9sb2NrLnRvbWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzIzIiwiYmxvYl9uYW1lIjoiNmMzMjUyOTk5Mzg5ZGVhM2YwNDkxMDVkZDVkZjQyZDc0OTk4MzRmZWUyMmE2MTVmYjdkZjE1NzExNjFmODhjMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC9pbml0R2l0UmVwby5zaCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NTAiLCJibG9iX25hbWUiOiI2ZDRiMzljZGVkNjIxNWZiM2YyZmFiNmRlZTM2MzM2YWQxYjA1MWMyNzI1NzU2Y2RjOWFjNWVjY2QwZjMxOWE4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy9teS1yZXBvLW5hbWUuZ2l0L2hvb2tzL2NvbW1pdC1tc2cuc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6Ijc1MCIsImNoYXJfZW5kIjoiODk2IiwiYmxvYl9uYW1lIjoiNmQ0YjM5Y2RlZDYyMTVmYjNmMmZhYjZkZWUzNjMzNmFkMWIwNTFjMjcyNTc1NmNkYzlhYzVlY2NkMGYzMTlhOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvbXktcmVwby1uYW1lLmdpdC9ob29rcy9jb21taXQtbXNnLnNhbXBsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NTAiLCJibG9iX25hbWUiOiJiOWM0ODc5N2UxNWU4NzAyY2VkNmQ2OTM1ZWZjM2I5OGZiMTRkYzNlYTY3NWFmMzlhODAyMDgyNmQ3NzhhYWFjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy9teS5naXQvaG9va3MvY29tbWl0LW1zZy5zYW1wbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTg2IiwiYmxvYl9uYW1lIjoiNDdjNjE5MTQxMGZlMGRmM2U3MWJjYWVlNTcyMTZjMjkzNDFmOGZjYTliNDllNDVhMTQzNTFmNWYyYjQ2YmQ1NyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzIn19XX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImY5OTFkOTFmLTE1NmUtNGE1Zi04NWYxLTZkN2M0NmJmNzNiYyIsInJlcXVlc3RfbWVzc2FnZSI6IndlIGFsd3lzIHVzZXIgYXN5bmMgZnVuY3Rpb24gb25seSA/IiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IndlIGFsd3lzIHVzZXIgYXN5bmMgZnVuY3Rpb24gb25seSA/In1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJObywgd2UgZG9uJ3QgYWx3YXlzIG5lZWQgdG8gdXNlIGFzeW5jIGZ1bmN0aW9ucy4gV2UgdXNlIGFzeW5jIGZ1bmN0aW9ucyB3aGVuOlxuXG4xLiBXZSdyZSBkZWFsaW5nIHdpdGggb3BlcmF0aW9ucyB0aGF0IHJldHVybiBQcm9taXNlcywgbGlrZTpcbiAgIC0gRGF0YWJhc2Ugb3BlcmF0aW9ucyAoUHJpc21hIHF1ZXJpZXMpXG4gICAtIEZpbGUgb3BlcmF0aW9uc1xuICAgLSBBUEkgY2FsbHNcbiAgIC0gQW55IG9wZXJhdGlvbiB0aGF0IHRha2VzIHRpbWUgdG8gY29tcGxldGVcblxuSGVyZSdzIGFuIGV4YW1wbGUgc2hvd2luZyBib3RoIGFzeW5jIGFuZCBub24tYXN5bmMgZnVuY3Rpb25zOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5pbXBvcnQge1ByaXNtYSwgdXNlcnN9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcbmltcG9ydCB7VXNlclJlcG9zaXRvcnl9IGZyb20gXCJAL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnlcIjtcbmltcG9ydCB7aW5qZWN0LCBpbmplY3RhYmxlfSBmcm9tICdpbnZlcnNpZnknO1xuaW1wb3J0ICogYXMgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSB7XG4gICAgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnk7XG5cbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KCdVc2VyUmVwb3NpdG9yeScpIHVzZXJSZXBvc2l0b3J5OiBVc2VyUmVwb3NpdG9yeSkge1xuICAgICAgICB0aGlzLnVzZXJSZXBvc2l0b3J5ID0gdXNlclJlcG9zaXRvcnk7XG4gICAgfVxuXG4gICAgLy8gTm9uLWFzeW5jIGZ1bmN0aW9uIC0gc2ltcGxlIHZhbGlkYXRpb25cbiAgICB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHBhc3N3b3JkLmxlbmd0aCA+PSA4O1xuICAgIH1cblxuICAgIC8vIE5vbi1hc3luYyBmdW5jdGlvbiAtIGVtYWlsIHZhbGlkYXRpb25cbiAgICB2YWxpZGF0ZUVtYWlsKGVtYWlsOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvO1xuICAgICAgICByZXR1cm4gZW1haWxSZWdleC50ZXN0KGVtYWlsKTtcbiAgICB9XG5cbiAgICAvLyBBc3luYyBmdW5jdGlvbiAtIGJlY2F1c2UgaXQgaW52b2x2ZXMgZGF0YWJhc2Ugb3BlcmF0aW9uc1xuICAgIGFzeW5jIHNpZ25VcCh1c2VyOiBQcmlzbWEudXNlcnNDcmVhdGVJbnB1dCk6IFByb21pc2U8dXNlcnM+IHtcbiAgICAgICAgLy8gVXNlIG5vbi1hc3luYyB2YWxpZGF0aW9uIGZ1bmN0aW9uc1xuICAgICAgICBpZiAoIXRoaXMudmFsaWRhdGVQYXNzd29yZCh1c2VyLnBhc3N3b3JkX2hhc2gpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcGFzc3dvcmQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghdGhpcy52YWxpZGF0ZUVtYWlsKHVzZXIuZW1haWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW1haWwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBBc3luYyBvcGVyYXRpb25zXG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LnByaXNtYS51c2Vycy5maW5kRmlyc3Qoe1xuICAgICAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiB1c2VyLmVtYWlsIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIGFscmVhZHkgZXhpc3RzJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2godXNlci5wYXNzd29yZF9oYXNoLCAxMCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgLi4udXNlcixcbiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogaGFzaGVkUGFzc3dvcmRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5LZXkgcG9pbnRzOlxuLSBVc2UgYXN5bmMvYXdhaXQgd2hlbiB3b3JraW5nIHdpdGggUHJvbWlzZXNcbi0gUmVndWxhciBzeW5jaHJvbm91cyBvcGVyYXRpb25zIGRvbid0IG5lZWQgYXN5bmNcbi0gVmFsaWRhdGlvbiwgY2FsY3VsYXRpb25zLCBhbmQgZGF0YSB0cmFuc2Zvcm1hdGlvbnMgY2FuIG9mdGVuIGJlIHN5bmNocm9ub3VzXG4tIERhdGFiYXNlIG9wZXJhdGlvbnMsIEhUVFAgcmVxdWVzdHMsIGFuZCBmaWxlIG9wZXJhdGlvbnMgc2hvdWxkIGJlIGFzeW5jXG5cblRoZSBydWxlIG9mIHRodW1iIGlzOlxuLSBJZiB0aGUgZnVuY3Rpb24gdXNlcyBgYXdhaXRgLCBpdCBtdXN0IGJlIGBhc3luY2Bcbi0gSWYgdGhlIGZ1bmN0aW9uIGRvZXNuJ3QgdXNlIGFueSBhc3luY2hyb25vdXMgb3BlcmF0aW9ucywgaXQgZG9lc24ndCBuZWVkIHRvIGJlIGBhc3luY2BcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNTgwXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MC00ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czo0ODYtMTE1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjExNTUtMTk1MFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjE5NTAtMjg2NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjI4NjUtMzc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6MC01ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzOjU4Ni05NDNcbldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzOjAtNjE4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTowLTc0M1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY2N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NjctMTYzOVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czoxNjM5LTI2ODlcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MjY4OS0zMDg5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzOjAtNDIyXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8udHM6MC04MDNcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50czozMTItMTI0N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzOjAtNTM3XG5XRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL3NyYy9BcHAuanN4OjAtOTAzXG5XRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UuanNvbjowLTY4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL3VzZXIucm91dGVzLnRzOjAtNzIxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvYXV0aGVudGljYXRpb24ucm91dGVzLnRzOjAtMzc5XG5XRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb246MC01NzlcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvc3JjL21haW4uanN4OjAtMjI5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjAtNjU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjY1NS0xNDA3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvdXRpbHMvaW5pdEdpdFJlcG8uc2g6MC03MjdcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvdml0ZS5jb25maWcuanM6MC0xNjFcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvZXNsaW50LmNvbmZpZy5qczoyMDQtMTAwM1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnNoOjAtNzIzXG5WT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvZnNtb25pdG9yLXdhdGNobWFuLnNhbXBsZTo3NDAtMTIzOFxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9wYWNrYWdlLWxvY2suanNvbjo5NzQ0NS05ODExMlxuVk9MVU1FUy9yZXBvc2l0b3J5cy9yZXBvY3JlYXRlZHZpYWh0dHAuZ2l0L2hvb2tzL2ZzbW9uaXRvci13YXRjaG1hbi5zYW1wbGU6NzQwLTEyMzhcblZPTFVNRVMvcmVwb3NpdG9yeXMvbXkuZ2l0L2hvb2tzL2ZzbW9uaXRvci13YXRjaG1hbi5zYW1wbGU6NzQwLTEyMzgifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6Ik5vLCB3ZSBkb24ndCBhbHdheXMgbmVlZCB0byB1c2UgYXN5bmMgZnVuY3Rpb25zLiBXZSB1c2UgYXN5bmMgZnVuY3Rpb25zIHdoZW46XG5cbjEuIFdlJ3JlIGRlYWxpbmcgd2l0aCBvcGVyYXRpb25zIHRoYXQgcmV0dXJuIFByb21pc2VzLCBsaWtlOlxuICAgLSBEYXRhYmFzZSBvcGVyYXRpb25zIChQcmlzbWEgcXVlcmllcylcbiAgIC0gRmlsZSBvcGVyYXRpb25zXG4gICAtIEFQSSBjYWxsc1xuICAgLSBBbnkgb3BlcmF0aW9uIHRoYXQgdGFrZXMgdGltZSB0byBjb21wbGV0ZVxuXG5IZXJlJ3MgYW4gZXhhbXBsZSBzaG93aW5nIGJvdGggYXN5bmMgYW5kIG5vbi1hc3luYyBmdW5jdGlvbnM6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIG1vZGU9RURJVFxuaW1wb3J0IHtQcmlzbWEsIHVzZXJzfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5pbXBvcnQge1VzZXJSZXBvc2l0b3J5fSBmcm9tIFwiQC9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5XCI7XG5pbXBvcnQge2luamVjdCwgaW5qZWN0YWJsZX0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCAqIGFzIGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2Uge1xuICAgIHByaXZhdGUgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5O1xuXG4gICAgY29uc3RydWN0b3IoQGluamVjdCgnVXNlclJlcG9zaXRvcnknKSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHtcbiAgICAgICAgdGhpcy51c2VyUmVwb3NpdG9yeSA9IHVzZXJSZXBvc2l0b3J5O1xuICAgIH1cblxuICAgIC8vIE5vbi1hc3luYyBmdW5jdGlvbiAtIHNpbXBsZSB2YWxpZGF0aW9uXG4gICAgdmFsaWRhdGVQYXNzd29yZChwYXNzd29yZDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBwYXNzd29yZC5sZW5ndGggPj0gODtcbiAgICB9XG5cbiAgICAvLyBOb24tYXN5bmMgZnVuY3Rpb24gLSBlbWFpbCB2YWxpZGF0aW9uXG4gICAgdmFsaWRhdGVFbWFpbChlbWFpbDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIGNvbnN0IGVtYWlsUmVnZXggPSAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLztcbiAgICAgICAgcmV0dXJuIGVtYWlsUmVnZXgudGVzdChlbWFpbCk7XG4gICAgfVxuXG4gICAgLy8gQXN5bmMgZnVuY3Rpb24gLSBiZWNhdXNlIGl0IGludm9sdmVzIGRhdGFiYXNlIG9wZXJhdGlvbnNcbiAgICBhc3luYyBzaWduVXAodXNlcjogUHJpc21hLnVzZXJzQ3JlYXRlSW5wdXQpOiBQcm9taXNlPHVzZXJzPiB7XG4gICAgICAgIC8vIFVzZSBub24tYXN5bmMgdmFsaWRhdGlvbiBmdW5jdGlvbnNcbiAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlUGFzc3dvcmQodXNlci5wYXNzd29yZF9oYXNoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHBhc3N3b3JkJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMudmFsaWRhdGVFbWFpbCh1c2VyLmVtYWlsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVtYWlsJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQXN5bmMgb3BlcmF0aW9uc1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5wcmlzbWEudXNlcnMuZmluZEZpcnN0KHtcbiAgICAgICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlci5lbWFpbCB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGV4aXN0aW5nVXNlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVXNlciBhbHJlYWR5IGV4aXN0cycpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXIucGFzc3dvcmRfaGFzaCwgMTApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5wcmlzbWEudXNlcnMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnVzZXIsXG4gICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkX2hhc2g6IGhhc2hlZFBhc3N3b3JkXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuS2V5IHBvaW50czpcbi0gVXNlIGFzeW5jL2F3YWl0IHdoZW4gd29ya2luZyB3aXRoIFByb21pc2VzXG4tIFJlZ3VsYXIgc3luY2hyb25vdXMgb3BlcmF0aW9ucyBkb24ndCBuZWVkIGFzeW5jXG4tIFZhbGlkYXRpb24sIGNhbGN1bGF0aW9ucywgYW5kIGRhdGEgdHJhbnNmb3JtYXRpb25zIGNhbiBvZnRlbiBiZSBzeW5jaHJvbm91c1xuLSBEYXRhYmFzZSBvcGVyYXRpb25zLCBIVFRQIHJlcXVlc3RzLCBhbmQgZmlsZSBvcGVyYXRpb25zIHNob3VsZCBiZSBhc3luY1xuXG5UaGUgcnVsZSBvZiB0aHVtYiBpczpcbi0gSWYgdGhlIGZ1bmN0aW9uIHVzZXMgYGF3YWl0YCwgaXQgbXVzdCBiZSBgYXN5bmNgXG4tIElmIHRoZSBmdW5jdGlvbiBkb2Vzbid0IHVzZSBhbnkgYXN5bmNocm9ub3VzIG9wZXJhdGlvbnMsIGl0IGRvZXNuJ3QgbmVlZCB0byBiZSBgYXN5bmNgXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1ODAiLCJibG9iX25hbWUiOiI3NGQ5M2YwZDU1ZGZmOTg4OWQ4MGJmMjVmMjg4YzA5ODJlYjdhYzcxZTJjNzhmNmMxZGQyZjI1MWVkY2Q5ZjZlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQ4NiIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiNDg2IiwiY2hhcl9lbmQiOiIxMTU1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxMTU1IiwiY2hhcl9lbmQiOiIxOTUwIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxOTUwIiwiY2hhcl9lbmQiOiIyODY1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyODY1IiwiY2hhcl9lbmQiOiIzNzQxIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1ODYiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiNTg2IiwiY2hhcl9lbmQiOiI5NDMiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0MyIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2NjciLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiI2NjciLCJjaGFyX2VuZCI6IjE2MzkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxNjM5IiwiY2hhcl9lbmQiOiIyNjg5IiwiYmxvYl9uYW1lIjoiMmJkNDY2NzJlYjA2YjdhYWM5NTUzODU3YWNlZTY4NmUxOTA1MzljMzA2ODYwM2M5ODFmNGJiN2JhOTgyMWM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiMjY4OSIsImNoYXJfZW5kIjoiMzA4OSIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQyMiIsImJsb2JfbmFtZSI6Ijg4ZDdjYTE0MWZkZGVkZDBlNjhmZDNmZmJmY2VhYmZjM2E2ODAwNmVhZDZkMDI1ZjYzNTA0MzUzNDZmNjM1MGUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgwMyIsImJsb2JfbmFtZSI6IjllZjJhOTRlZmI1NTg3YmRjNDJiY2VlNzcwMjhmMDIxYzA2ZTM5NWFlNTA4ZTYyNTZiMTg5MGEzY2IyZDhkOWMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8udHMifX0seyJjaGFyX3N0YXJ0IjoiMzEyIiwiY2hhcl9lbmQiOiIxMjQ3IiwiYmxvYl9uYW1lIjoiYzY3NjQ4YWJjMWFkYjc0NmU3YzE1NDk4MTE1ZTVmOTFkM2Q3YWZlZTE0MmVlYzY4ZDVjZDgzM2U5MTJjNzZhMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxNDc3IiwiY2hhcl9lbmQiOiIyMjkxIiwiYmxvYl9uYW1lIjoiYzY3NjQ4YWJjMWFkYjc0NmU3YzE1NDk4MTE1ZTVmOTFkM2Q3YWZlZTE0MmVlYzY4ZDVjZDgzM2U5MTJjNzZhMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1MzciLCJibG9iX25hbWUiOiJlYTI2NGUxYzkyZDQ0NTU0YTQzZjI1YjJiOGIyNTI2NzI3MzUxNGFiM2U0MGI4ZDI0ZTc0ODQ2YThmNmU2YWMyIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkwMyIsImJsb2JfbmFtZSI6ImM1NWZhNjEwMGJmZDRlOGQxMTc1YTZiYjZkMjg4ZWFlNjg1MWRiNDY5MTAwMTQ3NTE0ZTgyZDZmMDJiODE5MjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL3NyYy9BcHAuanN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY4NiIsImJsb2JfbmFtZSI6ImQ3YjhiZTE0NDY3OWEyZWZjMWU2ZjZiNzdmMjlmNzhjZWZkN2I5MGYyM2I1ODU0Yjk0YWYyYWJjNTAyNDE1ZTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MjEiLCJibG9iX25hbWUiOiI5M2U0ZDYxNGYzYjA1M2YxMzdlNTk1M2E2ZDI5Y2E3ZWYzNTEyYjcwOTMwMzkwMzdmNjNlODBlYTZjNWM5MDg2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL3VzZXIucm91dGVzLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM3OSIsImJsb2JfbmFtZSI6IjQ0MTJiYTBkN2EyZTZiZTdmNzg4YmJlZjI3NzFhMmIwMmZhMDQ5NDkwNTJmYzZmNDlmMWRjMDJmYTRjZGViN2QiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvYXV0aGVudGljYXRpb24ucm91dGVzLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU3OSIsImJsb2JfbmFtZSI6IjAxNGJhMTA0NGQ0N2U1MWI1YzVmNjIyN2ZlNTM3NjhmYmMzZWRhYmFkMDE2NDY0NjIwYjdjNGYzYmQ4YjNmNTMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMjI5IiwiYmxvYl9uYW1lIjoiMjEyNzM0Y2ZmZjBlMzAxMWM2MDMwMWMyNGQ2YWRiNzNiYjI2MDM0NTJmOTY2Njk3ZjJkZjYxMmZiY2QwMGZkNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvc3JjL21haW4uanN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY1NSIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjY1NSIsImNoYXJfZW5kIjoiMTQwNyIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjcyNyIsImJsb2JfbmFtZSI6ImYxYTk2YTI3MDY4YjBkNGFmNTc3YzVjMTRiZGVmYmI5YzU3ODIyODIwYjQ1NWQxMWNlYjQ3MTA4ZGVjYmUxODkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvdXRpbHMvaW5pdEdpdFJlcG8uc2gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTYxIiwiYmxvYl9uYW1lIjoiODFjOWYwMDk2OGE4ODBiODgyZjUzMjA3NDI4NmE2M2U3NGVkZDIwMDE1YmVhYWIyYTE4NjBmZGY3YTE3NzM5ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvdml0ZS5jb25maWcuanMifX0seyJjaGFyX3N0YXJ0IjoiMjA0IiwiY2hhcl9lbmQiOiIxMDAzIiwiYmxvYl9uYW1lIjoiYmU2MjhjODZkZWRhZjZhODVkY2RjNDJhMjNmZTI4NGMyNjUxODc0YWY0YmUwYjc2MmIzNzRmMTUzZmUwOTMwZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvZXNsaW50LmNvbmZpZy5qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MjMiLCJibG9iX25hbWUiOiI2YzMyNTI5OTkzODlkZWEzZjA0OTEwNWRkNWRmNDJkNzQ5OTgzNGZlZTIyYTYxNWZiN2RmMTU3MTE2MWY4OGMxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnNoIn19LHsiY2hhcl9zdGFydCI6Ijc0MCIsImNoYXJfZW5kIjoiMTIzOCIsImJsb2JfbmFtZSI6IjdjYjk5YjU5NGQwMTg1N2M3NjdlNTg2MDU1ODM0YjU0ZjIxNDc2NWExMDg1OGU1ZTBlNGY3YWU2MjZhMzg4NDgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvZnNtb25pdG9yLXdhdGNobWFuLnNhbXBsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjYiLCJibG9iX25hbWUiOiIxOTQxYjZlYjQwMmE5NzVmZjZjNjlmMWI5OGI2NGIzN2NmZWYzNDRmNjc5NGFiYTA3ZDMwMTUzNmVjMGY1NjU2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiI5NzQ0NSIsImNoYXJfZW5kIjoiOTgxMTIiLCJibG9iX25hbWUiOiI4YmE0YWMwMjNiYWQ5ZTU3OGQ2M2MyNGQ2NDJmMzRhN2U2ZTU1YzhmNTVkNDcwYzA4MDE3ZGMxM2JjZDU2MWVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9wYWNrYWdlLWxvY2suanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiI3NDAiLCJjaGFyX2VuZCI6IjEyMzgiLCJibG9iX25hbWUiOiIzM2YxMzBjYzNmNWUzMTU2MDllYTQ5NDNmZDE4ZmVmMmI2NGRjYjExOThmZWNmZmMwYzUzODM4ZjVjNWNkNjQ3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiVk9MVU1FUy9yZXBvc2l0b3J5cy9yZXBvY3JlYXRlZHZpYWh0dHAuZ2l0L2hvb2tzL2ZzbW9uaXRvci13YXRjaG1hbi5zYW1wbGUifX0seyJjaGFyX3N0YXJ0IjoiNzQwIiwiY2hhcl9lbmQiOiIxMjM4IiwiYmxvYl9uYW1lIjoiZmQyN2NjMjFkYzYzODRmZTQzYWNjNzZmM2MwYWY3MzZlYzgxODI5ZGEzYWRlYzEzZDMzNmFiMTE1ZDg1NjM4YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvbXkuZ2l0L2hvb2tzL2ZzbW9uaXRvci13YXRjaG1hbi5zYW1wbGUifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNzQzOGZmMDktMzQwNC00MDM4LWJmNGQtZTc1YmM5NmNiMmUyIiwicmVxdWVzdF9tZXNzYWdlIjoib2sgIGkgd2FudCB0byBjcmVhdGUgYSBkdG8gdGhhdCBpIHdpbGwgdXNlIGluIG15IHdob2xlIHByb2plY3Qgd2hlcmUgaXQgY29udGFpbiB0aGUgaHR0cCBzdGF0dWUgY29kZSAgLCBtZXNzYWdlICBvZiB0eXBlIHN0cmluZyBhbmQgICBhbmQgb2JqZWN0IG9mIHR5cGUgYW55IHdoZXJlIGkgd2lsbCBhc3NpbmcgaXQgdGhlIG9iZWpjdCB0eXBlIHRoYXQgaSB3bmF0IHRvIHJldHJ1biB0byB0aGUgZW5kIHVzZXIgZWFjaCB0aW1lIFxuIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6Im9rICBpIHdhbnQgdG8gY3JlYXRlIGEgZHRvIHRoYXQgaSB3aWxsIHVzZSBpbiBteSB3aG9sZSBwcm9qZWN0IHdoZXJlIGl0IGNvbnRhaW4gdGhlIGh0dHAgc3RhdHVlIGNvZGUgICwgbWVzc2FnZSAgb2YgdHlwZSBzdHJpbmcgYW5kICAgYW5kIG9iamVjdCBvZiB0eXBlIGFueSB3aGVyZSBpIHdpbGwgYXNzaW5nIGl0IHRoZSBvYmVqY3QgdHlwZSB0aGF0IGkgd25hdCB0byByZXRydW4gdG8gdGhlIGVuZCB1c2VyIGVhY2ggdGltZSAifSx7InR5cGUiOiJoYXJkQnJlYWsifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgaGVscCB5b3UgY3JlYXRlIGEgc3RhbmRhcmRpemVkIFJlc3BvbnNlIERUTyBmb3IgeW91ciBwcm9qZWN0LiBMZXQncyBjcmVhdGUgaXQgaW4gYSBuZXcgZGlyZWN0b3J5IGNhbGxlZCBgZHRvYCBvciBgdHlwZXNgOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9hcGktcmVzcG9uc2UuZHRvLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmV4cG9ydCBpbnRlcmZhY2UgQXBpUmVzcG9uc2U8VCA9IGFueT4ge1xuICAgIHN0YXR1c0NvZGU6IG51bWJlcjtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgZGF0YT86IFQ7XG4gICAgZXJyb3I/OiBzdHJpbmc7XG59XG5cbi8vIFByZWRlZmluZWQgc3RhdHVzIGNvZGVzIGZvciBjb25zaXN0ZW5jeVxuZXhwb3J0IGNvbnN0IEh0dHBTdGF0dXMgPSB7XG4gICAgT0s6IDIwMCxcbiAgICBDUkVBVEVEOiAyMDEsXG4gICAgQkFEX1JFUVVFU1Q6IDQwMCxcbiAgICBVTkFVVEhPUklaRUQ6IDQwMSxcbiAgICBGT1JCSURERU46IDQwMyxcbiAgICBOT1RfRk9VTkQ6IDQwNCxcbiAgICBDT05GTElDVDogNDA5LFxuICAgIElOVEVSTkFMX1NFUlZFUl9FUlJPUjogNTAwLFxufSBhcyBjb25zdDtcblxuLy8gSGVscGVyIGNsYXNzIHRvIGNyZWF0ZSBjb25zaXN0ZW50IHJlc3BvbnNlc1xuZXhwb3J0IGNsYXNzIEFwaVJlc3BvbnNlQnVpbGRlciB7XG4gICAgc3RhdGljIHN1Y2Nlc3M8VD4oZGF0YTogVCwgbWVzc2FnZTogc3RyaW5nID0gJ1N1Y2Nlc3MnLCBzdGF0dXNDb2RlOiBudW1iZXIgPSBIdHRwU3RhdHVzLk9LKTogQXBpUmVzcG9uc2U8VD4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzQ29kZSxcbiAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICBkYXRhXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgc3RhdHVzQ29kZTogbnVtYmVyID0gSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsIGVycm9yPzogc3RyaW5nKTogQXBpUmVzcG9uc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzQ29kZSxcbiAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICBlcnJvclxuICAgICAgICB9O1xuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTm93IGxldCdzIHVwZGF0ZSB0aGUgYEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcmAgdG8gdXNlIHRoaXMgbmV3IERUTzpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2F1dGguc2VydmljZVwiO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2VCdWlsZGVyLCBIdHRwU3RhdHVzIH0gZnJvbSBcIi4uL2R0by9hcGktcmVzcG9uc2UuZHRvXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoQXV0aFNlcnZpY2UpIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgc2lnblVwID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgLy8gQmFzaWMgdmFsaWRhdGlvblxuICAgICAgICAgICAgaWYgKCF1c2VybmFtZSB8fCAhZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkJBRF9SRVFVRVNUKS5qc29uKFxuICAgICAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAnTWlzc2luZyByZXF1aXJlZCBmaWVsZHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5CQURfUkVRVUVTVCxcbiAgICAgICAgICAgICAgICAgICAgICAgICd1c2VybmFtZSwgZW1haWwsIGFuZCBwYXNzd29yZCBhcmUgcmVxdWlyZWQnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRW1haWwgZm9ybWF0IHZhbGlkYXRpb25cbiAgICAgICAgICAgIGNvbnN0IGVtYWlsUmVnZXggPSAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLztcbiAgICAgICAgICAgIGlmICghZW1haWxSZWdleC50ZXN0KGVtYWlsKSkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5CQURfUkVRVUVTVCkuanNvbihcbiAgICAgICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0ludmFsaWQgZW1haWwgZm9ybWF0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuQkFEX1JFUVVFU1RcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcCh7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkNSRUFURUQpLmpzb24oXG4gICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLnN1Y2Nlc3MoXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgJ1VzZXIgcmVnaXN0ZXJlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgICAgICAgICBIdHRwU3RhdHVzLkNSRUFURURcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aGVudGljYXRpb25Db250cm9sbGVyLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSAnVXNlciBhbHJlYWR5IGV4aXN0cycpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuQ09ORkxJQ1QpLmpzb24oXG4gICAgICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdSZWdpc3RyYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuQ09ORkxJQ1QsXG4gICAgICAgICAgICAgICAgICAgICAgICAnVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHMnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuanNvbihcbiAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICdSZWdpc3RyYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgICAgICAgICAgICAgICAgICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTGV0J3MgYWxzbyB1cGRhdGUgdGhlIGBVc2VyQ29udHJvbGxlcmAgdG8gdXNlIHRoZSBzYW1lIHBhdHRlcm4gKHNob3dpbmcgb25lIG1ldGhvZCBhcyBleGFtcGxlKTpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3VzZXIuc2VydmljZSc7XG5pbXBvcnQgeyBBcGlSZXNwb25zZUJ1aWxkZXIsIEh0dHBTdGF0dXMgfSBmcm9tICcuLi9kdG8vYXBpLXJlc3BvbnNlLmR0byc7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVc2VyQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoQGluamVjdChVc2VyU2VydmljZSkgcHJpdmF0ZSB1c2VyU2VydmljZTogVXNlclNlcnZpY2UpIHt9XG5cbiAgICBnZXRVc2VyQnlJZCA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHBhcnNlSW50KHJlcS5wYXJhbXMuaWQsIDEwKTtcblxuICAgICAgICAgICAgaWYgKGlzTmFOKHVzZXJJZCkpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuQkFEX1JFUVVFU1QpLmpzb24oXG4gICAgICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdJbnZhbGlkIHVzZXIgSUQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5CQURfUkVRVUVTVFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCByZWxhdGlvbnM6IHN0cmluZ1tdIHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgaWYgKHJlcS5xdWVyeS5yZWxhdGlvbnMgJiYgdHlwZW9mIHJlcS5xdWVyeS5yZWxhdGlvbnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb25zID0gcmVxLnF1ZXJ5LnJlbGF0aW9ucy5zcGxpdCgnLCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy51c2VyU2VydmljZS5nZXRVc2VyQnlJZCh1c2VySWQsIHJlbGF0aW9ucyk7XG5cbiAgICAgICAgICAgIGlmICghdXNlcikge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5OT1RfRk9VTkQpLmpzb24oXG4gICAgICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdVc2VyIG5vdCBmb3VuZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBIdHRwU3RhdHVzLk5PVF9GT1VORFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5PSykuanNvbihcbiAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuc3VjY2VzcyhcbiAgICAgICAgICAgICAgICAgICAgdXNlcixcbiAgICAgICAgICAgICAgICAgICAgJ1VzZXIgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseSdcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gVXNlckNvbnRyb2xsZXIuZ2V0VXNlckJ5SWQ6JywgZXJyb3IpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuanNvbihcbiAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICdGYWlsZWQgdG8gcmV0cmlldmUgdXNlcicsXG4gICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTm93IHlvdXIgQVBJIHdpbGwgcmV0dXJuIGNvbnNpc3RlbnQgcmVzcG9uc2VzIGluIHRoaXMgZm9ybWF0OlxuXG5TdWNjZXNzIHJlc3BvbnNlIGV4YW1wbGU6XG5gYGBqc29uXG57XG4gICAgXCJzdGF0dXNDb2RlXCI6IDIwMCxcbiAgICBcIm1lc3NhZ2VcIjogXCJVc2VyIHJldHJpZXZlZCBzdWNjZXNzZnVsbHlcIixcbiAgICBcImRhdGFcIjoge1xuICAgICAgICBcImlkXCI6IDEsXG4gICAgICAgIFwidXNlcm5hbWVcIjogXCJqb2huX2RvZVwiLFxuICAgICAgICBcImVtYWlsXCI6IFwiam9obkBleGFtcGxlLmNvbVwiXG4gICAgfVxufVxuYGBgXG5cbkVycm9yIHJlc3BvbnNlIGV4YW1wbGU6XG5gYGBqc29uXG57XG4gICAgXCJzdGF0dXNDb2RlXCI6IDQwMCxcbiAgICBcIm1lc3NhZ2VcIjogXCJJbnZhbGlkIHJlcXVlc3RcIixcbiAgICBcImVycm9yXCI6IFwidXNlcm5hbWUsIGVtYWlsLCBhbmQgcGFzc3dvcmQgYXJlIHJlcXVpcmVkXCJcbn1cbmBgYFxuXG5UaGlzIHN0YW5kYXJkaXplZCByZXNwb25zZSBmb3JtYXQgd2lsbCBtYWtlIGl0IGVhc2llciB0bzpcbjEuIEhhbmRsZSByZXNwb25zZXMgb24gdGhlIGZyb250ZW5kXG4yLiBNYWludGFpbiBjb25zaXN0ZW5jeSBhY3Jvc3MgeW91ciBBUElcbjMuIERlYnVnIGlzc3Vlc1xuNC4gRG9jdW1lbnQgeW91ciBBUElcbjUuIEltcGxlbWVudCBlcnJvciBoYW5kbGluZyBtaWRkbGV3YXJlXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czowLTQ4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjQ4Ni0xMTU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MTE1NS0xOTUwXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MTk1MC0yODY1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6Mjg2NS0zNzQxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MC0zMTJcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50czozMTItMTI0N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjEyNDctMTQ3N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjIyOTEtMzI2MlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjMyNjItMzQ5NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjM0OTYtNDQ2OFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvaW5kZXgudHM6MC02MThcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHM6MC00MjJcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MC02NjdcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6NjY3LTE2MzlcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MTYzOS0yNjg5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzOjI2ODktMzA4OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvZ2l0LmNvbnRyb2xsZXIudHM6MC02ODRcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50czowLTUzN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNjIzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjAtNjU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjY1NS0xNDA3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzOjE0MDctMTc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL3VzZXIucm91dGVzLnRzOjAtNzIxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50czowLTU4NlxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb246MC02ODZcbldFQi9CQUNLRU5EL0NPREUvdHNjb25maWcuanNvbjowLTU3OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWE6MC03NDNcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjI1NDgtMzMwNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50czowLTM3OVxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9zcmMvQXBwLmpzeDowLTkwM1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjc0OC0xNTM2XG5WT0xVTUVTL3JlcG9zaXRvcnlzL3JlcG9jcmVhdGVkdmlhaHR0cC5naXQvZGVzY3JpcHRpb246MC03MyJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSSdsbCBoZWxwIHlvdSBjcmVhdGUgYSBzdGFuZGFyZGl6ZWQgUmVzcG9uc2UgRFRPIGZvciB5b3VyIHByb2plY3QuIExldCdzIGNyZWF0ZSBpdCBpbiBhIG5ldyBkaXJlY3RvcnkgY2FsbGVkIGBkdG9gIG9yIGB0eXBlc2A6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvZHRvL2FwaS1yZXNwb25zZS5kdG8udHMgbW9kZT1FRElUXG5leHBvcnQgaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXNDb2RlOiBudW1iZXI7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUO1xuICAgIGVycm9yPzogc3RyaW5nO1xufVxuXG4vLyBQcmVkZWZpbmVkIHN0YXR1cyBjb2RlcyBmb3IgY29uc2lzdGVuY3lcbmV4cG9ydCBjb25zdCBIdHRwU3RhdHVzID0ge1xuICAgIE9LOiAyMDAsXG4gICAgQ1JFQVRFRDogMjAxLFxuICAgIEJBRF9SRVFVRVNUOiA0MDAsXG4gICAgVU5BVVRIT1JJWkVEOiA0MDEsXG4gICAgRk9SQklEREVOOiA0MDMsXG4gICAgTk9UX0ZPVU5EOiA0MDQsXG4gICAgQ09ORkxJQ1Q6IDQwOSxcbiAgICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IDUwMCxcbn0gYXMgY29uc3Q7XG5cbi8vIEhlbHBlciBjbGFzcyB0byBjcmVhdGUgY29uc2lzdGVudCByZXNwb25zZXNcbmV4cG9ydCBjbGFzcyBBcGlSZXNwb25zZUJ1aWxkZXIge1xuICAgIHN0YXRpYyBzdWNjZXNzPFQ+KGRhdGE6IFQsIG1lc3NhZ2U6IHN0cmluZyA9ICdTdWNjZXNzJywgc3RhdHVzQ29kZTogbnVtYmVyID0gSHR0cFN0YXR1cy5PSyk6IEFwaVJlc3BvbnNlPFQ+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1c0NvZGUsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgZGF0YVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlOiBzdHJpbmcsIHN0YXR1c0NvZGU6IG51bWJlciA9IEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SLCBlcnJvcj86IHN0cmluZyk6IEFwaVJlc3BvbnNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1c0NvZGUsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICB9XG59XG5gYGBgXG5cbk5vdyBsZXQncyB1cGRhdGUgdGhlIGBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJgIHRvIHVzZSB0aGlzIG5ldyBEVE86XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50cyBtb2RlPUVESVRcbmltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2F1dGguc2VydmljZVwiO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2VCdWlsZGVyLCBIdHRwU3RhdHVzIH0gZnJvbSBcIi4uL2R0by9hcGktcmVzcG9uc2UuZHRvXCI7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoQXV0aFNlcnZpY2UpIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgc2lnblVwID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgLy8gQmFzaWMgdmFsaWRhdGlvblxuICAgICAgICAgICAgaWYgKCF1c2VybmFtZSB8fCAhZW1haWwgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkJBRF9SRVFVRVNUKS5qc29uKFxuICAgICAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAnTWlzc2luZyByZXF1aXJlZCBmaWVsZHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5CQURfUkVRVUVTVCxcbiAgICAgICAgICAgICAgICAgICAgICAgICd1c2VybmFtZSwgZW1haWwsIGFuZCBwYXNzd29yZCBhcmUgcmVxdWlyZWQnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRW1haWwgZm9ybWF0IHZhbGlkYXRpb25cbiAgICAgICAgICAgIGNvbnN0IGVtYWlsUmVnZXggPSAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLztcbiAgICAgICAgICAgIGlmICghZW1haWxSZWdleC50ZXN0KGVtYWlsKSkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5CQURfUkVRVUVTVCkuanNvbihcbiAgICAgICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0ludmFsaWQgZW1haWwgZm9ybWF0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuQkFEX1JFUVVFU1RcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcCh7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkNSRUFURUQpLmpzb24oXG4gICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLnN1Y2Nlc3MoXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgJ1VzZXIgcmVnaXN0ZXJlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgICAgICAgICBIdHRwU3RhdHVzLkNSRUFURURcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQXV0aGVudGljYXRpb25Db250cm9sbGVyLnNpZ25VcDonLCBlcnJvcik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChlcnJvci5tZXNzYWdlID09PSAnVXNlciBhbHJlYWR5IGV4aXN0cycpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuQ09ORkxJQ1QpLmpzb24oXG4gICAgICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdSZWdpc3RyYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuQ09ORkxJQ1QsXG4gICAgICAgICAgICAgICAgICAgICAgICAnVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHMnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuanNvbihcbiAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICdSZWdpc3RyYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IsXG4gICAgICAgICAgICAgICAgICAgICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuTGV0J3MgYWxzbyB1cGRhdGUgdGhlIGBVc2VyQ29udHJvbGxlcmAgdG8gdXNlIHRoZSBzYW1lIHBhdHRlcm4gKHNob3dpbmcgb25lIG1ldGhvZCBhcyBleGFtcGxlKTpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMgbW9kZT1FRElUXG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvdXNlci5zZXJ2aWNlJztcbmltcG9ydCB7IEFwaVJlc3BvbnNlQnVpbGRlciwgSHR0cFN0YXR1cyB9IGZyb20gJy4uL2R0by9hcGktcmVzcG9uc2UuZHRvJztcblxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVzZXJDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KFVzZXJTZXJ2aWNlKSBwcml2YXRlIHVzZXJTZXJ2aWNlOiBVc2VyU2VydmljZSkge31cblxuICAgIGdldFVzZXJCeUlkID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlcklkID0gcGFyc2VJbnQocmVxLnBhcmFtcy5pZCwgMTApO1xuXG4gICAgICAgICAgICBpZiAoaXNOYU4odXNlcklkKSkge1xuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5CQURfUkVRVUVTVCkuanNvbihcbiAgICAgICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0ludmFsaWQgdXNlciBJRCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBIdHRwU3RhdHVzLkJBRF9SRVFVRVNUXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IHJlbGF0aW9uczogc3RyaW5nW10gfCB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpZiAocmVxLnF1ZXJ5LnJlbGF0aW9ucyAmJiB0eXBlb2YgcmVxLnF1ZXJ5LnJlbGF0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICByZWxhdGlvbnMgPSByZXEucXVlcnkucmVsYXRpb25zLnNwbGl0KCcsJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLmdldFVzZXJCeUlkKHVzZXJJZCwgcmVsYXRpb25zKTtcblxuICAgICAgICAgICAgaWYgKCF1c2VyKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLk5PVF9GT1VORCkuanNvbihcbiAgICAgICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ1VzZXIgbm90IGZvdW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBTdGF0dXMuTk9UX0ZPVU5EXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhIdHRwU3RhdHVzLk9LKS5qc29uKFxuICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5zdWNjZXNzKFxuICAgICAgICAgICAgICAgICAgICB1c2VyLFxuICAgICAgICAgICAgICAgICAgICAnVXNlciByZXRyaWV2ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBVc2VyQ29udHJvbGxlci5nZXRVc2VyQnlJZDonLCBlcnJvcik7XG4gICAgICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SKS5qc29uKFxuICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcihcbiAgICAgICAgICAgICAgICAgICAgJ0ZhaWxlZCB0byByZXRyaWV2ZSB1c2VyJyxcbiAgICAgICAgICAgICAgICAgICAgSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1JcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgYFxuXG5Ob3cgeW91ciBBUEkgd2lsbCByZXR1cm4gY29uc2lzdGVudCByZXNwb25zZXMgaW4gdGhpcyBmb3JtYXQ6XG5cblN1Y2Nlc3MgcmVzcG9uc2UgZXhhbXBsZTpcbmBgYGpzb25cbntcbiAgICBcInN0YXR1c0NvZGVcIjogMjAwLFxuICAgIFwibWVzc2FnZVwiOiBcIlVzZXIgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgIFwiZGF0YVwiOiB7XG4gICAgICAgIFwiaWRcIjogMSxcbiAgICAgICAgXCJ1c2VybmFtZVwiOiBcImpvaG5fZG9lXCIsXG4gICAgICAgIFwiZW1haWxcIjogXCJqb2huQGV4YW1wbGUuY29tXCJcbiAgICB9XG59XG5gYGBcblxuRXJyb3IgcmVzcG9uc2UgZXhhbXBsZTpcbmBgYGpzb25cbntcbiAgICBcInN0YXR1c0NvZGVcIjogNDAwLFxuICAgIFwibWVzc2FnZVwiOiBcIkludmFsaWQgcmVxdWVzdFwiLFxuICAgIFwiZXJyb3JcIjogXCJ1c2VybmFtZSwgZW1haWwsIGFuZCBwYXNzd29yZCBhcmUgcmVxdWlyZWRcIlxufVxuYGBgXG5cblRoaXMgc3RhbmRhcmRpemVkIHJlc3BvbnNlIGZvcm1hdCB3aWxsIG1ha2UgaXQgZWFzaWVyIHRvOlxuMS4gSGFuZGxlIHJlc3BvbnNlcyBvbiB0aGUgZnJvbnRlbmRcbjIuIE1haW50YWluIGNvbnNpc3RlbmN5IGFjcm9zcyB5b3VyIEFQSVxuMy4gRGVidWcgaXNzdWVzXG40LiBEb2N1bWVudCB5b3VyIEFQSVxuNS4gSW1wbGVtZW50IGVycm9yIGhhbmRsaW5nIG1pZGRsZXdhcmVcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQ4NiIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiNDg2IiwiY2hhcl9lbmQiOiIxMTU1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxMTU1IiwiY2hhcl9lbmQiOiIxOTUwIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxOTUwIiwiY2hhcl9lbmQiOiIyODY1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyODY1IiwiY2hhcl9lbmQiOiIzNzQxIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzMTIiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjMxMiIsImNoYXJfZW5kIjoiMTI0NyIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMTI0NyIsImNoYXJfZW5kIjoiMTQ3NyIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMTQ3NyIsImNoYXJfZW5kIjoiMjI5MSIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMjI5MSIsImNoYXJfZW5kIjoiMzI2MiIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMzI2MiIsImNoYXJfZW5kIjoiMzQ5NiIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMzQ5NiIsImNoYXJfZW5kIjoiNDQ2OCIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQyMiIsImJsb2JfbmFtZSI6Ijg4ZDdjYTE0MWZkZGVkZDBlNjhmZDNmZmJmY2VhYmZjM2E2ODAwNmVhZDZkMDI1ZjYzNTA0MzUzNDZmNjM1MGUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjY2NyIsImNoYXJfZW5kIjoiMTYzOSIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjE2MzkiLCJjaGFyX2VuZCI6IjI2ODkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyNjg5IiwiY2hhcl9lbmQiOiIzMDg5IiwiYmxvYl9uYW1lIjoiMmJkNDY2NzJlYjA2YjdhYWM5NTUzODU3YWNlZTY4NmUxOTA1MzljMzA2ODYwM2M5ODFmNGJiN2JhOTgyMWM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjg0IiwiYmxvYl9uYW1lIjoiMDA3NjQ0NDU0Yjc5Nzc3Zjg4NTk0M2JlZTkzOWJhNjZjMGQwMWNhYmUzZjNmNDYyYzMzZDQ4N2U3YWY3NjQxNyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2dpdC5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjUzNyIsImJsb2JfbmFtZSI6ImVhMjY0ZTFjOTJkNDQ1NTRhNDNmMjViMmI4YjI1MjY3MjczNTE0YWIzZTQwYjhkMjRlNzQ4NDZhOGY2ZTZhYzIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvaW5kZXgudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjIzIiwiYmxvYl9uYW1lIjoiNjAyNzA5NDQ4YWMyNzAyN2Q0ZTk5MTBjOTk4ZTRjZDFlNDQ5MzJmYzdlYjA3ZTliZjg5OThhNjRiNDJmMTVlMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2NTUiLCJibG9iX25hbWUiOiJjZGJmZmQzNDc1MjNlYTdhMjY4MzZhZGM5YWYzYTc3N2U1NmY5ZWU2ZTgyZDhkYjk4N2Y2MjhmOTAzMzQ1YmQzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiI2NTUiLCJjaGFyX2VuZCI6IjE0MDciLCJibG9iX25hbWUiOiJjZGJmZmQzNDc1MjNlYTdhMjY4MzZhZGM5YWYzYTc3N2U1NmY5ZWU2ZTgyZDhkYjk4N2Y2MjhmOTAzMzQ1YmQzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxNDA3IiwiY2hhcl9lbmQiOiIxNzQxIiwiYmxvYl9uYW1lIjoiY2RiZmZkMzQ3NTIzZWE3YTI2ODM2YWRjOWFmM2E3NzdlNTZmOWVlNmU4MmQ4ZGI5ODdmNjI4ZjkwMzM0NWJkMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2RpL2ludmVyc2lmeS5jb25maWcudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzIxIiwiYmxvYl9uYW1lIjoiOTNlNGQ2MTRmM2IwNTNmMTM3ZTU5NTNhNmQyOWNhN2VmMzUxMmI3MDkzMDM5MDM3ZjYzZTgwZWE2YzVjOTA4NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy91c2VyLnJvdXRlcy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1ODYiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjg2IiwiYmxvYl9uYW1lIjoiZDdiOGJlMTQ0Njc5YTJlZmMxZTZmNmI3N2YyOWY3OGNlZmQ3YjkwZjIzYjU4NTRiOTRhZjJhYmM1MDI0MTVlOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU3OSIsImJsb2JfbmFtZSI6IjAxNGJhMTA0NGQ0N2U1MWI1YzVmNjIyN2ZlNTM3NjhmYmMzZWRhYmFkMDE2NDY0NjIwYjdjNGYzYmQ4YjNmNTMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzQzIiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjI1NDgiLCJjaGFyX2VuZCI6IjMzMDYiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjI2IiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTAzIiwiYmxvYl9uYW1lIjoiYzU1ZmE2MTAwYmZkNGU4ZDExNzVhNmJiNmQyODhlYWU2ODUxZGI0NjkxMDAxNDc1MTRlODJkNmYwMmI4MTkyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvc3JjL0FwcC5qc3gifX0seyJjaGFyX3N0YXJ0IjoiNzQ4IiwiY2hhcl9lbmQiOiIxNTM2IiwiYmxvYl9uYW1lIjoiYjA5YmJjNzdiZmRlN2QyNmE3NDE0NzJiOTdhZDY3ODE2MzFhY2EzMTFlZjRjOTA5MGJkYjg1NjUxNGFhNDM3MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MyIsImJsb2JfbmFtZSI6ImJlZjlkMTFhMGFjNWUxZDE0ZTMzYmVkNmE2NzllMDQxODZlZjk4NGMxOGMwZDQyODZlY2UwYjFlMTRhYTJlNDgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL3JlcG9jcmVhdGVkdmlhaHR0cC5naXQvZGVzY3JpcHRpb24ifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiYTRlMjFlOWItN2VkMy00ODU4LThlMWItZDM1YjA0M2E1NWNiIiwicmVxdWVzdF9tZXNzYWdlIjoiYWN0YXVsbHkgaSB3YW50IHRoZSBkdG8gaW4gYWxsIGxheWVzIG9mIG15IHByb2plY3QgaSAgaW4gdGhlIHJlcG8gdG8gdGhlIHNlcnZpY2UgdG8gdGhlIGNvbnRyb2xsZXIgXG5zbyBmb3IgZXhhbXBsZSBpbiB0aGUgcmVvcG9zaXR5cm8gaWYgaXQgZmluZCB0aGUgb2JqZWN0IGl0IHdpbGwgYXNzaWduIHRoZSBvYmplY3QgKHVzZXIgZm9yIGV4YW1wbGUgKSBhbmQgICBpdCB3aWxsIHNldCB0aGUgc3RhdHVlIHN1Y2Nlc3MgXG5hbmQgdGVobiB0aGUgY29udHJvbGxlciB3aWxsIHNldCB0aGUgaHR0cCBjb2RlIHRvIDIwMCBcbmJ1dCBpZiBpdCBmYWlsIGluIHRoZSB0aGUgc2VydmljZSBsYXllciAsIHRoZSBzZXJ2aWNlIHdpbGwgYXNzaWduICBcImZhaWxlZCBcIiB0byB0aGUgc3RhdHVzICwgYW5kICAgdGhlbiAgYXNzaW5nIHRoZSBlcnJvciBtZXNzYWdlIHRvIHRoZSBtZXNzYWdlIChlbWFpbCBmb3JtIGludmFsaWQgZnJvIGV4YW1wbGUgKSBcbmFuZCB0aGUgcmVvcG9zaXJvdHkgd2lsbCB0aGUgc2V0IHRoZSBodHRwIGNvZGUgdG8gNTAwIHdoZW4gaXQgZmluZCBhbmQgZXJyb3IgY29taW5nIGZyb20gdGhlIHNlcnZpY2UgbGF5ZXIgYW5kIHNvIG9uIFxucGxlYXNlIHRyeSB0byB1bmRlcnN0YW5kIHdhaHQgaXQgd2FudCB0byBkbyB0aGVuIGdpdmUgbWUgZXhhbXBsZSBmb3Igd2hhdCB5b3UgdW5kZXJzdGFuZCB0aGVuIGFzayBtZSBmb3IgY2xhcmlmaWFjdGlvbnMgIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6ImFjdGF1bGx5IGkgd2FudCB0aGUgZHRvIGluIGFsbCBsYXllcyBvZiBteSBwcm9qZWN0IGkgIGluIHRoZSByZXBvIHRvIHRoZSBzZXJ2aWNlIHRvIHRoZSBjb250cm9sbGVyICJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0Ijoic28gZm9yIGV4YW1wbGUgaW4gdGhlIHJlb3Bvc2l0eXJvIGlmIGl0IGZpbmQgdGhlIG9iamVjdCBpdCB3aWxsIGFzc2lnbiB0aGUgb2JqZWN0ICh1c2VyIGZvciBleGFtcGxlICkgYW5kICAgaXQgd2lsbCBzZXQgdGhlIHN0YXR1ZSBzdWNjZXNzICJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiYW5kIHRlaG4gdGhlIGNvbnRyb2xsZXIgd2lsbCBzZXQgdGhlIGh0dHAgY29kZSB0byAyMDAgIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJidXQgaWYgaXQgZmFpbCBpbiB0aGUgdGhlIHNlcnZpY2UgbGF5ZXIgLCB0aGUgc2VydmljZSB3aWxsIGFzc2lnbiAgXCJmYWlsZWQgXCIgdG8gdGhlIHN0YXR1cyAsIGFuZCAgIHRoZW4gIGFzc2luZyB0aGUgZXJyb3IgbWVzc2FnZSB0byB0aGUgbWVzc2FnZSAoZW1haWwgZm9ybSBpbnZhbGlkIGZybyBleGFtcGxlICkgIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJhbmQgdGhlIHJlb3Bvc2lyb3R5IHdpbGwgdGhlIHNldCB0aGUgaHR0cCBjb2RlIHRvIDUwMCB3aGVuIGl0IGZpbmQgYW5kIGVycm9yIGNvbWluZyBmcm9tIHRoZSBzZXJ2aWNlIGxheWVyIGFuZCBzbyBvbiAifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6InBsZWFzZSB0cnkgdG8gdW5kZXJzdGFuZCB3YWh0IGl0IHdhbnQgdG8gZG8gdGhlbiBnaXZlIG1lIGV4YW1wbGUgZm9yIHdoYXQgeW91IHVuZGVyc3RhbmQgdGhlbiBhc2sgbWUgZm9yIGNsYXJpZmlhY3Rpb25zICJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSB0aGluayBJIHVuZGVyc3RhbmQgLSB5b3Ugd2FudCBhIGNvbnNpc3RlbnQgRFRPIHRoYXQgZmxvd3MgdGhyb3VnaCBhbGwgbGF5ZXJzLCB3aGVyZSBlYWNoIGxheWVyIGNvbnRyaWJ1dGVzIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgcmVzcG9uc2UuIExldCBtZSBjcmVhdGUgYW4gZXhhbXBsZSBhbmQgeW91IGNhbiB0ZWxsIG1lIGlmIHRoaXMgbWF0Y2hlcyB5b3VyIGludGVudDpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9kdG8vYXBpLXJlc3BvbnNlLmR0by50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5leHBvcnQgZW51bSBSZXNwb25zZVN0YXR1cyB7XG4gICAgU1VDQ0VTUyA9ICdzdWNjZXNzJyxcbiAgICBGQUlMRUQgPSAnZmFpbGVkJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZpY2VSZXNwb25zZTxUID0gYW55PiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgZGF0YT86IFQ7XG4gICAgZXJyb3I/OiBzdHJpbmc7XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkhlcmUncyBob3cgaXQgd291bGQgZmxvdyB0aHJvdWdoIHRoZSBsYXllcnM6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5hc3luYyBmaW5kQnlJZChpZDogbnVtYmVyKTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgd2hlcmU6IHsgaWQgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGZvdW5kIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogdXNlclxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGF0YWJhc2UgZXJyb3JcIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5hc3luYyBnZXRVc2VyQnlJZChpZDogbnVtYmVyKTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVwb1Jlc3BvbnNlID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlJZChpZCk7XG4gICAgICAgIFxuICAgICAgICBpZiAocmVwb1Jlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuRkFJTEVEKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVwb1Jlc3BvbnNlOyAvLyBGb3J3YXJkIHRoZSBlcnJvciBmcm9tIHJlcG9zaXRvcnlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghcmVwb1Jlc3BvbnNlLmRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIG5vdCBmb3VuZFwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogcmVwb1Jlc3BvbnNlLmRhdGFcbiAgICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlNlcnZpY2UgZXJyb3JcIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5nZXRVc2VyQnlJZCA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCB1c2VySWQgPSBwYXJzZUludChyZXEucGFyYW1zLmlkLCAxMCk7XG5cbiAgICBpZiAoaXNOYU4odXNlcklkKSkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCB1c2VyIElEIGZvcm1hdFwiXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc2VydmljZVJlc3BvbnNlID0gYXdhaXQgdGhpcy51c2VyU2VydmljZS5nZXRVc2VyQnlJZCh1c2VySWQpO1xuXG4gICAgLy8gTWFwIHNlcnZpY2UgcmVzcG9uc2Ugc3RhdHVzIHRvIEhUVFAgc3RhdHVzIGNvZGVcbiAgICBjb25zdCBodHRwU3RhdHVzID0gc2VydmljZVJlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyA/IDIwMCA6XG4gICAgICAgIHNlcnZpY2VSZXNwb25zZS5tZXNzYWdlID09PSBcIlVzZXIgbm90IGZvdW5kXCIgPyA0MDQgOiA1MDA7XG5cbiAgICByZXMuc3RhdHVzKGh0dHBTdGF0dXMpLmpzb24oc2VydmljZVJlc3BvbnNlKTtcbn07XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkluIHRoaXMgZXhhbXBsZTpcbjEuIFJlcG9zaXRvcnkgbGF5ZXIgc2V0cyBpbml0aWFsIHN1Y2Nlc3MvZmFpbHVyZSBhbmQgZGF0YVxuMi4gU2VydmljZSBsYXllciBjYW46XG4gICAtIEZvcndhcmQgcmVwb3NpdG9yeSBlcnJvcnNcbiAgIC0gQWRkIGl0cyBvd24gdmFsaWRhdGlvbi9idXNpbmVzcyBsb2dpYyBlcnJvcnNcbiAgIC0gVHJhbnNmb3JtIHRoZSBkYXRhIGlmIG5lZWRlZFxuMy4gQ29udHJvbGxlciBsYXllcjpcbiAgIC0gTWFwcyB0aGUgc2VydmljZSByZXNwb25zZSBzdGF0dXMgdG8gSFRUUCBjb2Rlc1xuICAgLSBTZW5kcyB0aGUgZmluYWwgcmVzcG9uc2VcblxuSXMgdGhpcyBjbG9zZSB0byB3aGF0IHlvdSB3ZXJlIHRoaW5raW5nPyBPciB3b3VsZCB5b3UgbGlrZSBtZSB0byBhZGp1c3Qgc29tZXRoaW5nP1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MC00ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czo0ODYtMTE1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjExNTUtMTk1MFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjE5NTAtMjg2NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjI4NjUtMzc0MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY2N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NjctMTYzOVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czoxNjM5LTI2ODlcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MjY4OS0zMDg5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHM6MC0zMTJcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50czozMTItMTI0N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjEyNDctMTQ3N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjIyOTEtMzI2MlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjMyNjItMzQ5NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjM0OTYtNDQ2OFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50czowLTQyMlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNjIzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9naXQuY29udHJvbGxlci50czowLTY4NFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czowLTY1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czo2NTUtMTQwN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czoxNDA3LTE3NDFcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy91c2VyLnJvdXRlcy50czowLTcyMVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50czowLTM3OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvaW5kZXgudHM6MC02MThcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50czowLTUzN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6MC01ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjAtNzQzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYToxNDYyLTE5MzZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjI1NDgtMzMwNlxuZG9ja2VyLWNvbXBvc2UueW1sOjAtOTc2XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWw6MC03NDhcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbDo3NDgtMTUzNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjQ4NDYtNTA0MVxuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9zcmMvQXBwLmpzeDowLTkwMyJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSSB0aGluayBJIHVuZGVyc3RhbmQgLSB5b3Ugd2FudCBhIGNvbnNpc3RlbnQgRFRPIHRoYXQgZmxvd3MgdGhyb3VnaCBhbGwgbGF5ZXJzLCB3aGVyZSBlYWNoIGxheWVyIGNvbnRyaWJ1dGVzIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgcmVzcG9uc2UuIExldCBtZSBjcmVhdGUgYW4gZXhhbXBsZSBhbmQgeW91IGNhbiB0ZWxsIG1lIGlmIHRoaXMgbWF0Y2hlcyB5b3VyIGludGVudDpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kdG8vYXBpLXJlc3BvbnNlLmR0by50cyBtb2RlPUVESVRcbmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmljZVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBkYXRhPzogVDtcbiAgICBlcnJvcj86IHN0cmluZztcbn1cbmBgYGBcblxuSGVyZSdzIGhvdyBpdCB3b3VsZCBmbG93IHRocm91Z2ggdGhlIGxheWVyczpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIG1vZGU9RURJVFxuYXN5bmMgZmluZEJ5SWQoaWQ6IG51bWJlcik6IFByb21pc2U8U2VydmljZVJlc3BvbnNlPHVzZXJzPj4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBmb3VuZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgIGRhdGE6IHVzZXJcbiAgICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIkRhdGFiYXNlIGVycm9yXCIsXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICB9O1xuICAgIH1cbn1cbmBgYGBcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMgbW9kZT1FRElUXG5hc3luYyBnZXRVc2VyQnlJZChpZDogbnVtYmVyKTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVwb1Jlc3BvbnNlID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlJZChpZCk7XG4gICAgICAgIFxuICAgICAgICBpZiAocmVwb1Jlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuRkFJTEVEKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVwb1Jlc3BvbnNlOyAvLyBGb3J3YXJkIHRoZSBlcnJvciBmcm9tIHJlcG9zaXRvcnlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghcmVwb1Jlc3BvbnNlLmRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIG5vdCBmb3VuZFwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogcmVwb1Jlc3BvbnNlLmRhdGFcbiAgICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlNlcnZpY2UgZXJyb3JcIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgYFxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50cyBtb2RlPUVESVRcbmdldFVzZXJCeUlkID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGNvbnN0IHVzZXJJZCA9IHBhcnNlSW50KHJlcS5wYXJhbXMuaWQsIDEwKTtcblxuICAgIGlmIChpc05hTih1c2VySWQpKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIHVzZXIgSUQgZm9ybWF0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBzZXJ2aWNlUmVzcG9uc2UgPSBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLmdldFVzZXJCeUlkKHVzZXJJZCk7XG5cbiAgICAvLyBNYXAgc2VydmljZSByZXNwb25zZSBzdGF0dXMgdG8gSFRUUCBzdGF0dXMgY29kZVxuICAgIGNvbnN0IGh0dHBTdGF0dXMgPSBzZXJ2aWNlUmVzcG9uc2Uuc3RhdHVzID09PSBSZXNwb25zZVN0YXR1cy5TVUNDRVNTID8gMjAwIDpcbiAgICAgICAgc2VydmljZVJlc3BvbnNlLm1lc3NhZ2UgPT09IFwiVXNlciBub3QgZm91bmRcIiA/IDQwNCA6IDUwMDtcblxuICAgIHJlcy5zdGF0dXMoaHR0cFN0YXR1cykuanNvbihzZXJ2aWNlUmVzcG9uc2UpO1xufTtcbmBgYGBcblxuSW4gdGhpcyBleGFtcGxlOlxuMS4gUmVwb3NpdG9yeSBsYXllciBzZXRzIGluaXRpYWwgc3VjY2Vzcy9mYWlsdXJlIGFuZCBkYXRhXG4yLiBTZXJ2aWNlIGxheWVyIGNhbjpcbiAgIC0gRm9yd2FyZCByZXBvc2l0b3J5IGVycm9yc1xuICAgLSBBZGQgaXRzIG93biB2YWxpZGF0aW9uL2J1c2luZXNzIGxvZ2ljIGVycm9yc1xuICAgLSBUcmFuc2Zvcm0gdGhlIGRhdGEgaWYgbmVlZGVkXG4zLiBDb250cm9sbGVyIGxheWVyOlxuICAgLSBNYXBzIHRoZSBzZXJ2aWNlIHJlc3BvbnNlIHN0YXR1cyB0byBIVFRQIGNvZGVzXG4gICAtIFNlbmRzIHRoZSBmaW5hbCByZXNwb25zZVxuXG5JcyB0aGlzIGNsb3NlIHRvIHdoYXQgeW91IHdlcmUgdGhpbmtpbmc/IE9yIHdvdWxkIHlvdSBsaWtlIG1lIHRvIGFkanVzdCBzb21ldGhpbmc/XG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0ODYiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjQ4NiIsImNoYXJfZW5kIjoiMTE1NSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMTE1NSIsImNoYXJfZW5kIjoiMTk1MCIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMTk1MCIsImNoYXJfZW5kIjoiMjg2NSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMjg2NSIsImNoYXJfZW5kIjoiMzc0MSIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjY3IiwiYmxvYl9uYW1lIjoiMmJkNDY2NzJlYjA2YjdhYWM5NTUzODU3YWNlZTY4NmUxOTA1MzljMzA2ODYwM2M5ODFmNGJiN2JhOTgyMWM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiNjY3IiwiY2hhcl9lbmQiOiIxNjM5IiwiYmxvYl9uYW1lIjoiMmJkNDY2NzJlYjA2YjdhYWM5NTUzODU3YWNlZTY4NmUxOTA1MzljMzA2ODYwM2M5ODFmNGJiN2JhOTgyMWM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiMTYzOSIsImNoYXJfZW5kIjoiMjY4OSIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjI2ODkiLCJjaGFyX2VuZCI6IjMwODkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzMTIiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjMxMiIsImNoYXJfZW5kIjoiMTI0NyIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMTI0NyIsImNoYXJfZW5kIjoiMTQ3NyIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMTQ3NyIsImNoYXJfZW5kIjoiMjI5MSIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMjI5MSIsImNoYXJfZW5kIjoiMzI2MiIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMzI2MiIsImNoYXJfZW5kIjoiMzQ5NiIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMzQ5NiIsImNoYXJfZW5kIjoiNDQ2OCIsImJsb2JfbmFtZSI6ImM2NzY0OGFiYzFhZGI3NDZlN2MxNTQ5ODExNWU1ZjkxZDNkN2FmZWUxNDJlZWM2OGQ1Y2Q4MzNlOTEyYzc2YTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDIyIiwiYmxvYl9uYW1lIjoiODhkN2NhMTQxZmRkZWRkMGU2OGZkM2ZmYmZjZWFiZmMzYTY4MDA2ZWFkNmQwMjVmNjM1MDQzNTM0NmY2MzUwZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjIzIiwiYmxvYl9uYW1lIjoiNjAyNzA5NDQ4YWMyNzAyN2Q0ZTk5MTBjOTk4ZTRjZDFlNDQ5MzJmYzdlYjA3ZTliZjg5OThhNjRiNDJmMTVlMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2ODQiLCJibG9iX25hbWUiOiIwMDc2NDQ0NTRiNzk3NzdmODg1OTQzYmVlOTM5YmE2NmMwZDAxY2FiZTNmM2Y0NjJjMzNkNDg3ZTdhZjc2NDE3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvZ2l0LmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjU1IiwiYmxvYl9uYW1lIjoiY2RiZmZkMzQ3NTIzZWE3YTI2ODM2YWRjOWFmM2E3NzdlNTZmOWVlNmU4MmQ4ZGI5ODdmNjI4ZjkwMzM0NWJkMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2RpL2ludmVyc2lmeS5jb25maWcudHMifX0seyJjaGFyX3N0YXJ0IjoiNjU1IiwiY2hhcl9lbmQiOiIxNDA3IiwiYmxvYl9uYW1lIjoiY2RiZmZkMzQ3NTIzZWE3YTI2ODM2YWRjOWFmM2E3NzdlNTZmOWVlNmU4MmQ4ZGI5ODdmNjI4ZjkwMzM0NWJkMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2RpL2ludmVyc2lmeS5jb25maWcudHMifX0seyJjaGFyX3N0YXJ0IjoiMTQwNyIsImNoYXJfZW5kIjoiMTc0MSIsImJsb2JfbmFtZSI6ImNkYmZmZDM0NzUyM2VhN2EyNjgzNmFkYzlhZjNhNzc3ZTU2ZjllZTZlODJkOGRiOTg3ZjYyOGY5MDMzNDViZDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9kaS9pbnZlcnNpZnkuY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjcyMSIsImJsb2JfbmFtZSI6IjkzZTRkNjE0ZjNiMDUzZjEzN2U1OTUzYTZkMjljYTdlZjM1MTJiNzA5MzAzOTAzN2Y2M2U4MGVhNmM1YzkwODYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvdXNlci5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjUzNyIsImJsb2JfbmFtZSI6ImVhMjY0ZTFjOTJkNDQ1NTRhNDNmMjViMmI4YjI1MjY3MjczNTE0YWIzZTQwYjhkMjRlNzQ4NDZhOGY2ZTZhYzIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvaW5kZXgudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTg2IiwiYmxvYl9uYW1lIjoiNDdjNjE5MTQxMGZlMGRmM2U3MWJjYWVlNTcyMTZjMjkzNDFmOGZjYTliNDllNDVhMTQzNTFmNWYyYjQ2YmQ1NyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0MyIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIxNDYyIiwiY2hhcl9lbmQiOiIxOTM2IiwiYmxvYl9uYW1lIjoiMDlkOWU1YTU2MzY2MDQxNWUxMDA4YzZkM2U4YjMzMDIwOWQ0Yzc0ODRlMjQzZDdlMzllZGY3ZjdhMTFiYzVmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hIn19LHsiY2hhcl9zdGFydCI6IjI1NDgiLCJjaGFyX2VuZCI6IjMzMDYiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTc2IiwiYmxvYl9uYW1lIjoiMjkwODliOGU2NDA1YmRmODJlOTYwMjI3YmYwMDNiYTExNjg3NjI0YTdhYmQyYmVjYjM3NzgzNjgzYzdjOGIzMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRvY2tlci1jb21wb3NlLnltbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NDgiLCJibG9iX25hbWUiOiJiMDliYmM3N2JmZGU3ZDI2YTc0MTQ3MmI5N2FkNjc4MTYzMWFjYTMxMWVmNGM5MDkwYmRiODU2NTE0YWE0MzcxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsIn19LHsiY2hhcl9zdGFydCI6Ijc0OCIsImNoYXJfZW5kIjoiMTUzNiIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiNDg0NiIsImNoYXJfZW5kIjoiNTA0MSIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTAzIiwiYmxvYl9uYW1lIjoiYzU1ZmE2MTAwYmZkNGU4ZDExNzVhNmJiNmQyODhlYWU2ODUxZGI0NjkxMDAxNDc1MTRlODJkNmYwMmI4MTkyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvc3JjL0FwcC5qc3gifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiYzg1ZmUzNWMtZjdhZi00NzliLTgwOTYtN2Y5Y2RhZTgxZjE0IiwicmVxdWVzdF9tZXNzYWdlIjoieWVhaCB0aGFuayB5b3Ugc28gbXVjaCBicm8gaSBsb3ZlIHRoYXQgeW91IGFyZSBteSBoZXJvICIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJ5ZWFoIHRoYW5rIHlvdSBzbyBtdWNoIGJybyBpIGxvdmUgdGhhdCB5b3UgYXJlIG15IGhlcm8gIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJUaGFua3MgZm9yIHRoZSBraW5kIHdvcmRzISBKdXN0IHRvIG1ha2UgaXQgZXZlbiBtb3JlIHVzZWZ1bCwgaGVyZSdzIGEgcXVpY2sgZXhhbXBsZSBvZiBob3cgdG8gdXNlIHRoaXMgcGF0dGVybiBmb3IgeW91ciBzaWdudXAgZmxvdzpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGF0YWJhc2UgZXJyb3IgZHVyaW5nIHVzZXIgY3JlYXRpb25cIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5hc3luYyBzaWduVXAodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gVmFsaWRhdGUgZW1haWwgZm9ybWF0XG4gICAgICAgIGlmICghdXNlckRhdGEuZW1haWwubWF0Y2goL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC8pKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiSW52YWxpZCBlbWFpbCBmb3JtYXRcIlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEhhc2ggcGFzc3dvcmRcbiAgICAgICAgY29uc3QgaGFzaGVkUGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyRGF0YS5wYXNzd29yZF9oYXNoLCAxMCk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCByZXBvUmVzcG9uc2UgPSBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LmNyZWF0ZVVzZXIoe1xuICAgICAgICAgICAgLi4udXNlckRhdGEsXG4gICAgICAgICAgICBwYXNzd29yZF9oYXNoOiBoYXNoZWRQYXNzd29yZFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVwb1Jlc3BvbnNlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiU2VydmljZSBlcnJvciBkdXJpbmcgc2lnbnVwXCIsXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICB9O1xuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoZW50aWNhdGlvbi5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbnNpZ25VcCA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCwgdXNlcm5hbWUgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCFlbWFpbCB8fCAhcGFzc3dvcmQgfHwgIXVzZXJuYW1lKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgbWVzc2FnZTogXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkc1wiXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc2VydmljZVJlc3BvbnNlID0gYXdhaXQgdGhpcy5hdXRoU2VydmljZS5zaWduVXAoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgcGFzc3dvcmRfaGFzaDogcGFzc3dvcmQsXG4gICAgICAgIHVzZXJuYW1lLFxuICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpXG4gICAgfSk7XG5cbiAgICAvLyBNYXAgcmVzcG9uc2Ugc3RhdHVzIHRvIEhUVFAgc3RhdHVzIGNvZGVcbiAgICBjb25zdCBodHRwU3RhdHVzID0gc2VydmljZVJlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyA/IDIwMSA6XG4gICAgICAgIHNlcnZpY2VSZXNwb25zZS5tZXNzYWdlLmluY2x1ZGVzKFwiYWxyZWFkeSBleGlzdHNcIikgPyA0MDkgOlxuICAgICAgICBzZXJ2aWNlUmVzcG9uc2UubWVzc2FnZS5pbmNsdWRlcyhcIkludmFsaWRcIikgPyA0MDAgOiA1MDA7XG5cbiAgICByZXMuc3RhdHVzKGh0dHBTdGF0dXMpLmpzb24oc2VydmljZVJlc3BvbnNlKTtcbn07XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cblRoaXMgcGF0dGVybiBtYWtlcyBlcnJvciBoYW5kbGluZyBhbmQgc3VjY2VzcyByZXNwb25zZXMgY29uc2lzdGVudCBhbmQgZWFzeSB0byBtYWludGFpbiB0aHJvdWdob3V0IHlvdXIgYXBwbGljYXRpb24uIEVhY2ggbGF5ZXIgYWRkcyBpdHMgb3duIHNwZWNpZmljIGNoZWNrcyBhbmQgdmFsaWRhdGlvbnMgd2hpbGUgbWFpbnRhaW5pbmcgdGhlIHNhbWUgcmVzcG9uc2Ugc3RydWN0dXJlLlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50czowLTU4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6NTg2LTk0M1xuZG9ja2VyLWNvbXBvc2UueW1sOjAtOTc2XG5kb2NrZXItY29tcG9zZS55bWw6OTc2LTE0MTNcbldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzOjAtNjE4XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTowLTc0M1xuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb246MC02ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50czowLTYyM1xuV0VCL0JBQ0tFTkQvRG9ja2VyZmlsZTowLTQwOVxuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC92aXRlLmNvbmZpZy5qczowLTE2MVxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuLmdpdGlnbm9yZTowLTE3M1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnNoOjAtNzIzXG5XRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb246MC01NzlcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50czowLTUzN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY2N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NjctMTYzOVxuV0VCL0ZST05URU5EL0RvY2tlcmZpbGU6MC00ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC91dGlscy9pbml0R2l0UmVwby5zaDowLTcyN1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjQ4Ni0xMTU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MTE1NS0xOTUwXG5XRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL2VzbGludC5jb25maWcuanM6MjA0LTEwMDNcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvUkVBRE1FLm1kOjAtNDUxXG5XRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL3NyYy9BcHAuanN4OjAtOTAzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8udHM6MC04MDNcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHM6MC00MjJcbkdJVC1TRVJWRVIvRG9ja2VyZmlsZTowLTY5NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50czowLTM3OSJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiVGhhbmtzIGZvciB0aGUga2luZCB3b3JkcyEgSnVzdCB0byBtYWtlIGl0IGV2ZW4gbW9yZSB1c2VmdWwsIGhlcmUncyBhIHF1aWNrIGV4YW1wbGUgb2YgaG93IHRvIHVzZSB0aGlzIHBhdHRlcm4gZm9yIHlvdXIgc2lnbnVwIGZsb3c6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyBtb2RlPUVESVRcbmFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGF0YWJhc2UgZXJyb3IgZHVyaW5nIHVzZXIgY3JlYXRpb25cIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgYFxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyBtb2RlPUVESVRcbmFzeW5jIHNpZ25VcCh1c2VyRGF0YTogUHJpc21hLnVzZXJzQ3JlYXRlSW5wdXQpOiBQcm9taXNlPFNlcnZpY2VSZXNwb25zZTx1c2Vycz4+IHtcbiAgICB0cnkge1xuICAgICAgICAvLyBWYWxpZGF0ZSBlbWFpbCBmb3JtYXRcbiAgICAgICAgaWYgKCF1c2VyRGF0YS5lbWFpbC5tYXRjaCgvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLykpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIGVtYWlsIGZvcm1hdFwiXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSGFzaCBwYXNzd29yZFxuICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkX2hhc2gsIDEwKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHJlcG9SZXNwb25zZSA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuY3JlYXRlVXNlcih7XG4gICAgICAgICAgICAuLi51c2VyRGF0YSxcbiAgICAgICAgICAgIHBhc3N3b3JkX2hhc2g6IGhhc2hlZFBhc3N3b3JkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiByZXBvUmVzcG9uc2U7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgbWVzc2FnZTogXCJTZXJ2aWNlIGVycm9yIGR1cmluZyBzaWdudXBcIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgYFxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMgbW9kZT1FRElUXG5zaWduVXAgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQsIHVzZXJuYW1lIH0gPSByZXEuYm9keTtcblxuICAgIGlmICghZW1haWwgfHwgIXBhc3N3b3JkIHx8ICF1c2VybmFtZSkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiTWlzc2luZyByZXF1aXJlZCBmaWVsZHNcIlxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHNlcnZpY2VSZXNwb25zZSA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2Uuc2lnblVwKHtcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHBhc3N3b3JkX2hhc2g6IHBhc3N3b3JkLFxuICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKVxuICAgIH0pO1xuXG4gICAgLy8gTWFwIHJlc3BvbnNlIHN0YXR1cyB0byBIVFRQIHN0YXR1cyBjb2RlXG4gICAgY29uc3QgaHR0cFN0YXR1cyA9IHNlcnZpY2VSZXNwb25zZS5zdGF0dXMgPT09IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MgPyAyMDEgOlxuICAgICAgICBzZXJ2aWNlUmVzcG9uc2UubWVzc2FnZS5pbmNsdWRlcyhcImFscmVhZHkgZXhpc3RzXCIpID8gNDA5IDpcbiAgICAgICAgc2VydmljZVJlc3BvbnNlLm1lc3NhZ2UuaW5jbHVkZXMoXCJJbnZhbGlkXCIpID8gNDAwIDogNTAwO1xuXG4gICAgcmVzLnN0YXR1cyhodHRwU3RhdHVzKS5qc29uKHNlcnZpY2VSZXNwb25zZSk7XG59O1xuYGBgYFxuXG5UaGlzIHBhdHRlcm4gbWFrZXMgZXJyb3IgaGFuZGxpbmcgYW5kIHN1Y2Nlc3MgcmVzcG9uc2VzIGNvbnNpc3RlbnQgYW5kIGVhc3kgdG8gbWFpbnRhaW4gdGhyb3VnaG91dCB5b3VyIGFwcGxpY2F0aW9uLiBFYWNoIGxheWVyIGFkZHMgaXRzIG93biBzcGVjaWZpYyBjaGVja3MgYW5kIHZhbGlkYXRpb25zIHdoaWxlIG1haW50YWluaW5nIHRoZSBzYW1lIHJlc3BvbnNlIHN0cnVjdHVyZS5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU4NiIsImJsb2JfbmFtZSI6IjQ3YzYxOTE0MTBmZTBkZjNlNzFiY2FlZTU3MjE2YzI5MzQxZjhmY2E5YjQ5ZTQ1YTE0MzUxZjVmMmI0NmJkNTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50cyJ9fSx7ImNoYXJfc3RhcnQiOiI1ODYiLCJjaGFyX2VuZCI6Ijk0MyIsImJsb2JfbmFtZSI6IjQ3YzYxOTE0MTBmZTBkZjNlNzFiY2FlZTU3MjE2YzI5MzQxZjhmY2E5YjQ5ZTQ1YTE0MzUxZjVmMmI0NmJkNTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NzYiLCJibG9iX25hbWUiOiIyOTA4OWI4ZTY0MDViZGY4MmU5NjAyMjdiZjAwM2JhMTE2ODc2MjRhN2FiZDJiZWNiMzc3ODM2ODNjN2M4YjMzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiZG9ja2VyLWNvbXBvc2UueW1sIn19LHsiY2hhcl9zdGFydCI6Ijk3NiIsImNoYXJfZW5kIjoiMTQxMyIsImJsb2JfbmFtZSI6IjI5MDg5YjhlNjQwNWJkZjgyZTk2MDIyN2JmMDAzYmExMTY4NzYyNGE3YWJkMmJlY2IzNzc4MzY4M2M3YzhiMzMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJkb2NrZXItY29tcG9zZS55bWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0MyIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2ODYiLCJibG9iX25hbWUiOiJkN2I4YmUxNDQ2NzlhMmVmYzFlNmY2Yjc3ZjI5Zjc4Y2VmZDdiOTBmMjNiNTg1NGI5NGFmMmFiYzUwMjQxNWU5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjIzIiwiYmxvYl9uYW1lIjoiNjAyNzA5NDQ4YWMyNzAyN2Q0ZTk5MTBjOTk4ZTRjZDFlNDQ5MzJmYzdlYjA3ZTliZjg5OThhNjRiNDJmMTVlMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0MDkiLCJibG9iX25hbWUiOiJiYTZhNWFjOTAwNTM0Y2E0NmQxOTI5MjU0MzQ1NmU3NzE3NDZhNmU3MjJmYzRkNzBmNGZkMDIwMmFmMWMxY2M4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvRG9ja2VyZmlsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxNjEiLCJibG9iX25hbWUiOiI4MWM5ZjAwOTY4YTg4MGI4ODJmNTMyMDc0Mjg2YTYzZTc0ZWRkMjAwMTViZWFhYjJhMTg2MGZkZjdhMTc3MzlkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC92aXRlLmNvbmZpZy5qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjYiLCJibG9iX25hbWUiOiIxOTQxYjZlYjQwMmE5NzVmZjZjNjlmMWI5OGI2NGIzN2NmZWYzNDRmNjc5NGFiYTA3ZDMwMTUzNmVjMGY1NjU2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxNzMiLCJibG9iX25hbWUiOiIzODE5ZTYyMWY5N2FmMmQyMTk3ZjNiZDkxYmUzOWI0ZjY5OWExMDNkMDEyMDYwNTM1YWVlM2I1YjAxOGQwOWZmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiLmdpdGlnbm9yZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3MjMiLCJibG9iX25hbWUiOiI2YzMyNTI5OTkzODlkZWEzZjA0OTEwNWRkNWRmNDJkNzQ5OTgzNGZlZTIyYTYxNWZiN2RmMTU3MTE2MWY4OGMxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnNoIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU3OSIsImJsb2JfbmFtZSI6IjAxNGJhMTA0NGQ0N2U1MWI1YzVmNjIyN2ZlNTM3NjhmYmMzZWRhYmFkMDE2NDY0NjIwYjdjNGYzYmQ4YjNmNTMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTM3IiwiYmxvYl9uYW1lIjoiZWEyNjRlMWM5MmQ0NDU1NGE0M2YyNWIyYjhiMjUyNjcyNzM1MTRhYjNlNDBiOGQyNGU3NDg0NmE4ZjZlNmFjMiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9pbmRleC50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2NjciLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiI2NjciLCJjaGFyX2VuZCI6IjE2MzkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0ODYiLCJibG9iX25hbWUiOiIxYjkxNDgwN2QxNzhmZjVkYmUzYmFiY2Q3NzY5YTg0ZGNkZTkyNzcyOWU1MGY3Y2NjMGU1NDY0OTE5MzMyMGRjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0RvY2tlcmZpbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzI3IiwiYmxvYl9uYW1lIjoiZjFhOTZhMjcwNjhiMGQ0YWY1NzdjNWMxNGJkZWZiYjljNTc4MjI4MjBiNDU1ZDExY2ViNDcxMDhkZWNiZTE4OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC91dGlscy9pbml0R2l0UmVwby5zaCJ9fSx7ImNoYXJfc3RhcnQiOiI0ODYiLCJjaGFyX2VuZCI6IjExNTUiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjExNTUiLCJjaGFyX2VuZCI6IjE5NTAiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjIwNCIsImNoYXJfZW5kIjoiMTAwMyIsImJsb2JfbmFtZSI6ImJlNjI4Yzg2ZGVkYWY2YTg1ZGNkYzQyYTIzZmUyODRjMjY1MTg3NGFmNGJlMGI3NjJiMzc0ZjE1M2ZlMDkzMGQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL2VzbGludC5jb25maWcuanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDUxIiwiYmxvYl9uYW1lIjoiODJiNmMwYzNmNmUxN2VjNDExMjQzMWRlNTc5Mzg3ZGRlNDVjYmQxOWE2YTY1YjdmZGMxNmI1NTEzMGMwYzI2OCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkwMyIsImJsb2JfbmFtZSI6ImM1NWZhNjEwMGJmZDRlOGQxMTc1YTZiYjZkMjg4ZWFlNjg1MWRiNDY5MTAwMTQ3NTE0ZTgyZDZmMDJiODE5MjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL3NyYy9BcHAuanN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgwMyIsImJsb2JfbmFtZSI6IjllZjJhOTRlZmI1NTg3YmRjNDJiY2VlNzcwMjhmMDIxYzA2ZTM5NWFlNTA4ZTYyNTZiMTg5MGEzY2IyZDhkOWMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8udHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDIyIiwiYmxvYl9uYW1lIjoiODhkN2NhMTQxZmRkZWRkMGU2OGZkM2ZmYmZjZWFiZmMzYTY4MDA2ZWFkNmQwMjVmNjM1MDQzNTM0NmY2MzUwZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjk2IiwiYmxvYl9uYW1lIjoiMWZhMTM4YjA2NWE4MmI3NzFlZGZlNzEwMjNjMDkyOGNhM2E5Mjg3YTE5N2FlMDAwNDMxZmNlNmE2YTA3ZDA3ZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IkdJVC1TRVJWRVIvRG9ja2VyZmlsZSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzNzkiLCJibG9iX25hbWUiOiI0NDEyYmEwZDdhMmU2YmU3Zjc4OGJiZWYyNzcxYTJiMDJmYTA0OTQ5MDUyZmM2ZjQ5ZjFkYzAyZmE0Y2RlYjdkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50cyJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJkYmQ3NTc0Ny00YWFhLTQ2Y2UtOTM5Zi1jMWM0MTc2ZTY0NzIiLCJyZXF1ZXN0X21lc3NhZ2UiOiJkb2VzIHR5cGUgc2NyaXB0IHdpbGwgYWx3YXlzIGNoZWNrIGZvciB0aGlzIDogcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzXCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuY3JlYXRlKHtcbiAgICAgICAgICAgIGRhdGE6IHVzZXJEYXRhXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgIGRhdGE6IG5ld1VzZXJcbiAgICAgICAgfTtcblxudHlwZSBpbiB0aGUgY29tcGxpYXRpb25zID9cbmkgbWVhbiBpZiBpIHB1dCBhIHdyb25nIHR5cGUgIGRvZXMgdHlwZSBzY2lycHQgd2lsbCAgZ2l2ZSBtZSBhbiBlcnJvciA/IiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6ImRvZXMgdHlwZSBzY3JpcHQgd2lsbCBhbHdheXMgY2hlY2sgZm9yIHRoaXMgOiByZXR1cm4geyJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELCJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIiJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgfTsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgfSJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuY3JlYXRlKHsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIGRhdGE6IHVzZXJEYXRhIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH0pOyJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICByZXR1cm4geyJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLCJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIsIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBkYXRhOiBuZXdVc2VyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH07In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJ0eXBlIGluIHRoZSBjb21wbGlhdGlvbnMgPyJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiaSBtZWFuIGlmIGkgcHV0IGEgd3JvbmcgdHlwZSAgZG9lcyB0eXBlIHNjaXJwdCB3aWxsICBnaXZlIG1lIGFuIGVycm9yID8ifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IlllcywgVHlwZVNjcmlwdCB3aWxsIGNoZWNrIHRoZXNlIHJldHVybiB0eXBlcyBkdXJpbmcgY29tcGlsYXRpb24gaWYgeW91IHByb3Blcmx5IHR5cGUgeW91ciBmdW5jdGlvbnMgYW5kIGludGVyZmFjZXMuIExldCdzIG1ha2UgaXQgbW9yZSB0eXBlLXNhZmU6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZHRvL2FwaS1yZXNwb25zZS5kdG8udHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuZXhwb3J0IGVudW0gUmVzcG9uc2VTdGF0dXMge1xuICAgIFNVQ0NFU1MgPSAnc3VjY2VzcycsXG4gICAgRkFJTEVEID0gJ2ZhaWxlZCdcbn1cblxuLy8gTWFrZSB0aGUgaW50ZXJmYWNlIG1vcmUgc3RyaWN0IHdpdGggcmVxdWlyZWQgcHJvcGVydGllc1xuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlUmVzcG9uc2U8VD4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXM7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUOyAgICAgICAgICAvLyBPcHRpb25hbCBiZWNhdXNlIGVycm9ycyB3b24ndCBoYXZlIGRhdGFcbiAgICBlcnJvcj86IHN0cmluZzsgICAgLy8gT3B0aW9uYWwgYmVjYXVzZSBzdWNjZXNzIHdvbid0IGhhdmUgZXJyb3JzXG59XG5cbi8vIFNwZWNpZmljIHR5cGUgZm9yIHN1Y2Nlc3MgcmVzcG9uc2VzXG5leHBvcnQgaW50ZXJmYWNlIFN1Y2Nlc3NSZXNwb25zZTxUPiBleHRlbmRzIFNlcnZpY2VSZXNwb25zZTxUPiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTO1xuICAgIGRhdGE6IFQ7ICAgICAgICAgICAvLyBSZXF1aXJlZCBmb3Igc3VjY2VzcyByZXNwb25zZXNcbiAgICBlcnJvcj86IG5ldmVyOyAgICAgLy8gTmV2ZXIgYWxsb3dlZCBpbiBzdWNjZXNzIHJlc3BvbnNlc1xufVxuXG4vLyBTcGVjaWZpYyB0eXBlIGZvciBlcnJvciByZXNwb25zZXNcbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JSZXNwb25zZSBleHRlbmRzIFNlcnZpY2VSZXNwb25zZTxuZXZlcj4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVEO1xuICAgIGRhdGE/OiBuZXZlcjsgICAgICAvLyBOZXZlciBhbGxvd2VkIGluIGVycm9yIHJlc3BvbnNlc1xuICAgIGVycm9yPzogc3RyaW5nOyAgICAvLyBPcHRpb25hbCBlcnJvciBtZXNzYWdlXG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbk5vdyBsZXQncyB1c2UgdGhlc2UgdHlwZXMgaW4geW91ciByZXBvc2l0b3J5OlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuYXN5bmMgY3JlYXRlVXNlcih1c2VyRGF0YTogUHJpc21hLnVzZXJzQ3JlYXRlSW5wdXQpOiBQcm9taXNlPFN1Y2Nlc3NSZXNwb25zZTx1c2Vycz4gfCBFcnJvclJlc3BvbnNlPiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIlxuICAgICAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgd2lsbCBlcnJvciBpZiB5b3UgdHJ5IHRvIGluY2x1ZGUgJ2RhdGEnIGhlcmVcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuY3JlYXRlKHtcbiAgICAgICAgICAgIGRhdGE6IHVzZXJEYXRhXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgIGRhdGE6IG5ld1VzZXJcbiAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgd2lsbCBlcnJvciBpZiB5b3UgdHJ5IHRvIGluY2x1ZGUgJ2Vycm9yJyBoZXJlXG4gICAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgbWVzc2FnZTogXCJEYXRhYmFzZSBlcnJvciBkdXJpbmcgdXNlciBjcmVhdGlvblwiLFxuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgfTtcbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbldpdGggdGhlc2UgdHlwZXMsIFR5cGVTY3JpcHQgd2lsbCBnaXZlIHlvdSBjb21waWxhdGlvbiBlcnJvcnMgaWYgeW91OlxuXG4xLiBGb3JnZXQgdG8gaW5jbHVkZSByZXF1aXJlZCBwcm9wZXJ0aWVzOlxuYGBgdHlwZXNjcmlwdFxuLy8gRXJyb3I6IFByb3BlcnR5ICdtZXNzYWdlJyBpcyBtaXNzaW5nXG5yZXR1cm4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICBkYXRhOiBuZXdVc2VyXG59O1xuYGBgXG5cbjIuIEluY2x1ZGUgd3JvbmcgcHJvcGVydGllczpcbmBgYHR5cGVzY3JpcHRcbi8vIEVycm9yOiBQcm9wZXJ0eSAnZXJyb3InIG5vdCBhbGxvd2VkIGluIFN1Y2Nlc3NSZXNwb25zZVxucmV0dXJuIHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgbWVzc2FnZTogXCJTdWNjZXNzXCIsXG4gICAgZGF0YTogbmV3VXNlcixcbiAgICBlcnJvcjogXCJTb21lIGVycm9yXCIgLy8gVGhpcyB3aWxsIGNhdXNlIGEgVHlwZVNjcmlwdCBlcnJvclxufTtcbmBgYFxuXG4zLiBVc2Ugd3JvbmcgdHlwZXM6XG5gYGB0eXBlc2NyaXB0XG4vLyBFcnJvcjogVHlwZSAnc3RyaW5nJyBpcyBub3QgYXNzaWduYWJsZSB0byB0eXBlICdSZXNwb25zZVN0YXR1cydcbnJldHVybiB7XG4gICAgc3RhdHVzOiBcInN1Y2Nlc3NcIiwgLy8gU2hvdWxkIGJlIFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1NcbiAgICBtZXNzYWdlOiBcIlN1Y2Nlc3NcIixcbiAgICBkYXRhOiBuZXdVc2VyXG59O1xuYGBgXG5cbjQuIE1pc3MgdGhlIGRhdGEgcHJvcGVydHkgaW4gYSBzdWNjZXNzIHJlc3BvbnNlOlxuYGBgdHlwZXNjcmlwdFxuLy8gRXJyb3I6IFByb3BlcnR5ICdkYXRhJyBpcyByZXF1aXJlZCBpbiBTdWNjZXNzUmVzcG9uc2VcbnJldHVybiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgIG1lc3NhZ2U6IFwiU3VjY2Vzc1wiXG59O1xuYGBgXG5cblRoaXMgc3RyaWN0IHR5cGluZyBoZWxwcyBjYXRjaCBlcnJvcnMgZHVyaW5nIGRldmVsb3BtZW50IGFuZCBwcm92aWRlcyBiZXR0ZXIgSURFIHN1cHBvcnQgd2l0aCBhdXRvY29tcGxldGlvbi4gV291bGQgeW91IGxpa2UgbWUgdG8gc2hvdyBtb3JlIGV4YW1wbGVzIG9mIGhvdyBUeXBlU2NyaXB0J3MgdHlwZSBjaGVja2luZyB3b3JrcyBpbiBkaWZmZXJlbnQgc2NlbmFyaW9zP1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHM6MC02MjNcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czowLTQ4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjQ4Ni0xMTU1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MTE1NS0xOTUwXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MTk1MC0yODY1XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6Mjg2NS0zNzQxXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYTowLTc0M1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWE6MjU0OC0zMzA2XG5XRUIvQkFDS0VORC9DT0RFL3RzY29uZmlnLmpzb246MC01NzlcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlci50czoxNDc3LTIyOTFcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MC02NjdcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHM6MTYzOS0yNjg5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzOjI2ODktMzA4OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50czowLTQyMlxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLmpzb246MC02ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9taWdyYXRpb25zLzIwMjUwMjI1MTMzMzIzX2luaXQvbWlncmF0aW9uLnNxbDowLTc0OFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL21pZ3JhdGlvbnMvMjAyNTAyMjUxMzMzMjNfaW5pdC9taWdyYXRpb24uc3FsOjI3MDUtMzM3OFxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjo1NzYwNi01ODUwN1xuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjo1ODUwNy01OTM5MlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2F1dGhlbnRpY2F0aW9uLnJvdXRlcy50czowLTM3OVxuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9lc2xpbnQuY29uZmlnLmpzOjIwNC0xMDAzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50czowLTU4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZGkvaW52ZXJzaWZ5LmNvbmZpZy50czowLTY1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnRzOjAtODAzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvaW5kZXgudHM6MC01MzdcblZPTFVNRVMvcmVwb3NpdG9yeXMvcmVwb2NyZWF0ZWR2aWFodHRwLmdpdC9ob29rcy9wcmUtcHVzaC5zYW1wbGU6NzY3LTEzNzRcbldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy91c2VyLnJvdXRlcy50czowLTcyMVxuVk9MVU1FUy9yZXBvc2l0b3J5cy9yZXBvY3JlYXRlZHZpYWh0dHAyLmdpdC9ob29rcy9wcmUtcHVzaC5zYW1wbGU6NzY3LTEzNzRcblZPTFVNRVMvcmVwb3NpdG9yeXMvbXktcmVwby1uYW1lLmdpdC9ob29rcy9wcmUtcHVzaC5zYW1wbGU6NzY3LTEzNzRcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2dpdC5jb250cm9sbGVyLnRzOjAtNjg0In1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJZZXMsIFR5cGVTY3JpcHQgd2lsbCBjaGVjayB0aGVzZSByZXR1cm4gdHlwZXMgZHVyaW5nIGNvbXBpbGF0aW9uIGlmIHlvdSBwcm9wZXJseSB0eXBlIHlvdXIgZnVuY3Rpb25zIGFuZCBpbnRlcmZhY2VzLiBMZXQncyBtYWtlIGl0IG1vcmUgdHlwZS1zYWZlOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9hcGktcmVzcG9uc2UuZHRvLnRzIG1vZGU9RURJVFxuZXhwb3J0IGVudW0gUmVzcG9uc2VTdGF0dXMge1xuICAgIFNVQ0NFU1MgPSAnc3VjY2VzcycsXG4gICAgRkFJTEVEID0gJ2ZhaWxlZCdcbn1cblxuLy8gTWFrZSB0aGUgaW50ZXJmYWNlIG1vcmUgc3RyaWN0IHdpdGggcmVxdWlyZWQgcHJvcGVydGllc1xuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlUmVzcG9uc2U8VD4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXM7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUOyAgICAgICAgICAvLyBPcHRpb25hbCBiZWNhdXNlIGVycm9ycyB3b24ndCBoYXZlIGRhdGFcbiAgICBlcnJvcj86IHN0cmluZzsgICAgLy8gT3B0aW9uYWwgYmVjYXVzZSBzdWNjZXNzIHdvbid0IGhhdmUgZXJyb3JzXG59XG5cbi8vIFNwZWNpZmljIHR5cGUgZm9yIHN1Y2Nlc3MgcmVzcG9uc2VzXG5leHBvcnQgaW50ZXJmYWNlIFN1Y2Nlc3NSZXNwb25zZTxUPiBleHRlbmRzIFNlcnZpY2VSZXNwb25zZTxUPiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTO1xuICAgIGRhdGE6IFQ7ICAgICAgICAgICAvLyBSZXF1aXJlZCBmb3Igc3VjY2VzcyByZXNwb25zZXNcbiAgICBlcnJvcj86IG5ldmVyOyAgICAgLy8gTmV2ZXIgYWxsb3dlZCBpbiBzdWNjZXNzIHJlc3BvbnNlc1xufVxuXG4vLyBTcGVjaWZpYyB0eXBlIGZvciBlcnJvciByZXNwb25zZXNcbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JSZXNwb25zZSBleHRlbmRzIFNlcnZpY2VSZXNwb25zZTxuZXZlcj4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVEO1xuICAgIGRhdGE/OiBuZXZlcjsgICAgICAvLyBOZXZlciBhbGxvd2VkIGluIGVycm9yIHJlc3BvbnNlc1xuICAgIGVycm9yPzogc3RyaW5nOyAgICAvLyBPcHRpb25hbCBlcnJvciBtZXNzYWdlXG59XG5gYGBgXG5cbk5vdyBsZXQncyB1c2UgdGhlc2UgdHlwZXMgaW4geW91ciByZXBvc2l0b3J5OlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMgbW9kZT1FRElUXG5hc3luYyBjcmVhdGVVc2VyKHVzZXJEYXRhOiBQcmlzbWEudXNlcnNDcmVhdGVJbnB1dCk6IFByb21pc2U8U3VjY2Vzc1Jlc3BvbnNlPHVzZXJzPiB8IEVycm9yUmVzcG9uc2U+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiB1c2VyRGF0YS5lbWFpbCB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0c1wiXG4gICAgICAgICAgICAgICAgLy8gVHlwZVNjcmlwdCB3aWxsIGVycm9yIGlmIHlvdSB0cnkgdG8gaW5jbHVkZSAnZGF0YScgaGVyZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICAgICAgLy8gVHlwZVNjcmlwdCB3aWxsIGVycm9yIGlmIHlvdSB0cnkgdG8gaW5jbHVkZSAnZXJyb3InIGhlcmVcbiAgICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIkRhdGFiYXNlIGVycm9yIGR1cmluZyB1c2VyIGNyZWF0aW9uXCIsXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgICB9O1xuICAgIH1cbn1cbmBgYGBcblxuV2l0aCB0aGVzZSB0eXBlcywgVHlwZVNjcmlwdCB3aWxsIGdpdmUgeW91IGNvbXBpbGF0aW9uIGVycm9ycyBpZiB5b3U6XG5cbjEuIEZvcmdldCB0byBpbmNsdWRlIHJlcXVpcmVkIHByb3BlcnRpZXM6XG5gYGB0eXBlc2NyaXB0XG4vLyBFcnJvcjogUHJvcGVydHkgJ21lc3NhZ2UnIGlzIG1pc3NpbmdcbnJldHVybiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgIGRhdGE6IG5ld1VzZXJcbn07XG5gYGBcblxuMi4gSW5jbHVkZSB3cm9uZyBwcm9wZXJ0aWVzOlxuYGBgdHlwZXNjcmlwdFxuLy8gRXJyb3I6IFByb3BlcnR5ICdlcnJvcicgbm90IGFsbG93ZWQgaW4gU3VjY2Vzc1Jlc3BvbnNlXG5yZXR1cm4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICBtZXNzYWdlOiBcIlN1Y2Nlc3NcIixcbiAgICBkYXRhOiBuZXdVc2VyLFxuICAgIGVycm9yOiBcIlNvbWUgZXJyb3JcIiAvLyBUaGlzIHdpbGwgY2F1c2UgYSBUeXBlU2NyaXB0IGVycm9yXG59O1xuYGBgXG5cbjMuIFVzZSB3cm9uZyB0eXBlczpcbmBgYHR5cGVzY3JpcHRcbi8vIEVycm9yOiBUeXBlICdzdHJpbmcnIGlzIG5vdCBhc3NpZ25hYmxlIHRvIHR5cGUgJ1Jlc3BvbnNlU3RhdHVzJ1xucmV0dXJuIHtcbiAgICBzdGF0dXM6IFwic3VjY2Vzc1wiLCAvLyBTaG91bGQgYmUgUmVzcG9uc2VTdGF0dXMuU1VDQ0VTU1xuICAgIG1lc3NhZ2U6IFwiU3VjY2Vzc1wiLFxuICAgIGRhdGE6IG5ld1VzZXJcbn07XG5gYGBcblxuNC4gTWlzcyB0aGUgZGF0YSBwcm9wZXJ0eSBpbiBhIHN1Y2Nlc3MgcmVzcG9uc2U6XG5gYGB0eXBlc2NyaXB0XG4vLyBFcnJvcjogUHJvcGVydHkgJ2RhdGEnIGlzIHJlcXVpcmVkIGluIFN1Y2Nlc3NSZXNwb25zZVxucmV0dXJuIHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgbWVzc2FnZTogXCJTdWNjZXNzXCJcbn07XG5gYGBcblxuVGhpcyBzdHJpY3QgdHlwaW5nIGhlbHBzIGNhdGNoIGVycm9ycyBkdXJpbmcgZGV2ZWxvcG1lbnQgYW5kIHByb3ZpZGVzIGJldHRlciBJREUgc3VwcG9ydCB3aXRoIGF1dG9jb21wbGV0aW9uLiBXb3VsZCB5b3UgbGlrZSBtZSB0byBzaG93IG1vcmUgZXhhbXBsZXMgb2YgaG93IFR5cGVTY3JpcHQncyB0eXBlIGNoZWNraW5nIHdvcmtzIGluIGRpZmZlcmVudCBzY2VuYXJpb3M/XG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjMiLCJibG9iX25hbWUiOiI2MDI3MDk0NDhhYzI3MDI3ZDRlOTkxMGM5OThlNGNkMWU0NDkzMmZjN2ViMDdlOWJmODk5OGE2NGI0MmYxNWUzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQ4NiIsImJsb2JfbmFtZSI6IjhlNGFmOGRmNjZiZDdkNjhlMDU3Y2IwYmZhMjYzZTJmNTVlZDE2YjA2NzM2YTYxNDA0NTZiYzlhNDQ5NzU0Y2UiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiNDg2IiwiY2hhcl9lbmQiOiIxMTU1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxMTU1IiwiY2hhcl9lbmQiOiIxOTUwIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxOTUwIiwiY2hhcl9lbmQiOiIyODY1IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyODY1IiwiY2hhcl9lbmQiOiIzNzQxIiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NDMiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMjU0OCIsImNoYXJfZW5kIjoiMzMwNiIsImJsb2JfbmFtZSI6IjA5ZDllNWE1NjM2NjA0MTVlMTAwOGM2ZDNlOGIzMzAyMDlkNGM3NDg0ZTI0M2Q3ZTM5ZWRmN2Y3YTExYmM1ZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvc2NoZW1hLnByaXNtYSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NzkiLCJibG9iX25hbWUiOiIwMTRiYTEwNDRkNDdlNTFiNWM1ZjYyMjdmZTUzNzY4ZmJjM2VkYWJhZDAxNjQ2NDYyMGI3YzRmM2JkOGIzZjUzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS90c2NvbmZpZy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjE0NzciLCJjaGFyX2VuZCI6IjIyOTEiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjE2MzkiLCJjaGFyX2VuZCI6IjI2ODkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyNjg5IiwiY2hhcl9lbmQiOiIzMDg5IiwiYmxvYl9uYW1lIjoiMmJkNDY2NzJlYjA2YjdhYWM5NTUzODU3YWNlZTY4NmUxOTA1MzljMzA2ODYwM2M5ODFmNGJiN2JhOTgyMWM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDIyIiwiYmxvYl9uYW1lIjoiODhkN2NhMTQxZmRkZWRkMGU2OGZkM2ZmYmZjZWFiZmMzYTY4MDA2ZWFkNmQwMjVmNjM1MDQzNTM0NmY2MzUwZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjg2IiwiYmxvYl9uYW1lIjoiZDdiOGJlMTQ0Njc5YTJlZmMxZTZmNmI3N2YyOWY3OGNlZmQ3YjkwZjIzYjU4NTRiOTRhZjJhYmM1MDI0MTVlOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0OCIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiMjcwNSIsImNoYXJfZW5kIjoiMzM3OCIsImJsb2JfbmFtZSI6ImIwOWJiYzc3YmZkZTdkMjZhNzQxNDcyYjk3YWQ2NzgxNjMxYWNhMzExZWY0YzkwOTBiZGI4NTY1MTRhYTQzNzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvbWlncmF0aW9ucy8yMDI1MDIyNTEzMzMyM19pbml0L21pZ3JhdGlvbi5zcWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjI2IiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiNTc2MDYiLCJjaGFyX2VuZCI6IjU4NTA3IiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiNTg1MDciLCJjaGFyX2VuZCI6IjU5MzkyIiwiYmxvYl9uYW1lIjoiMTk0MWI2ZWI0MDJhOTc1ZmY2YzY5ZjFiOThiNjRiMzdjZmVmMzQ0ZjY3OTRhYmEwN2QzMDE1MzZlYzBmNTY1NiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDQxMmJhMGQ3YTJlNmJlN2Y3ODhiYmVmMjc3MWEyYjAyZmEwNDk0OTA1MmZjNmY0OWYxZGMwMmZhNGNkZWI3ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3JvdXRlcy9hdXRoZW50aWNhdGlvbi5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiMjA0IiwiY2hhcl9lbmQiOiIxMDAzIiwiYmxvYl9uYW1lIjoiYmU2MjhjODZkZWRhZjZhODVkY2RjNDJhMjNmZTI4NGMyNjUxODc0YWY0YmUwYjc2MmIzNzRmMTUzZmUwOTMwZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvZXNsaW50LmNvbmZpZy5qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1ODYiLCJibG9iX25hbWUiOiI0N2M2MTkxNDEwZmUwZGYzZTcxYmNhZWU1NzIxNmMyOTM0MWY4ZmNhOWI0OWU0NWExNDM1MWY1ZjJiNDZiZDU3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjU1IiwiYmxvYl9uYW1lIjoiY2RiZmZkMzQ3NTIzZWE3YTI2ODM2YWRjOWFmM2E3NzdlNTZmOWVlNmU4MmQ4ZGI5ODdmNjI4ZjkwMzM0NWJkMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2RpL2ludmVyc2lmeS5jb25maWcudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODAzIiwiYmxvYl9uYW1lIjoiOWVmMmE5NGVmYjU1ODdiZGM0MmJjZWU3NzAyOGYwMjFjMDZlMzk1YWU1MDhlNjI1NmIxODkwYTNjYjJkOGQ5YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC9pbml0R2l0UmVwby50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1MzciLCJibG9iX25hbWUiOiJlYTI2NGUxYzkyZDQ0NTU0YTQzZjI1YjJiOGIyNTI2NzI3MzUxNGFiM2U0MGI4ZDI0ZTc0ODQ2YThmNmU2YWMyIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6Ijc2NyIsImNoYXJfZW5kIjoiMTM3NCIsImJsb2JfbmFtZSI6IjA5OWQzNDRhZmRlM2I3ODQyNjMyMWI5M2FkZDNmMzliNzg3NjRmYTYyNDBkMGRiMGM2MjUzMDdjNjM2YTVjZjciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL3JlcG9jcmVhdGVkdmlhaHR0cC5naXQvaG9va3MvcHJlLXB1c2guc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjcyMSIsImJsb2JfbmFtZSI6IjkzZTRkNjE0ZjNiMDUzZjEzN2U1OTUzYTZkMjljYTdlZjM1MTJiNzA5MzAzOTAzN2Y2M2U4MGVhNmM1YzkwODYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvdXNlci5yb3V0ZXMudHMifX0seyJjaGFyX3N0YXJ0IjoiNzY3IiwiY2hhcl9lbmQiOiIxMzc0IiwiYmxvYl9uYW1lIjoiNTkxZThmY2U5YmI3ZDFhYmI0MmE3NmZjY2Y4NzkyNjZkYzhjOGM1YzUwOTlkMDI5NzYwYjBlMThjNDExOWYwNiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlZPTFVNRVMvcmVwb3NpdG9yeXMvcmVwb2NyZWF0ZWR2aWFodHRwMi5naXQvaG9va3MvcHJlLXB1c2guc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6Ijc2NyIsImNoYXJfZW5kIjoiMTM3NCIsImJsb2JfbmFtZSI6IjExODZmMTk4NzFjMmExYjhmN2IwZjZkMmQ1ZGE1ZTQxMTJkNzBhYmE0MjViY2ViZjY3OGI2YWE1MjVjN2I3MzEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJWT0xVTUVTL3JlcG9zaXRvcnlzL215LXJlcG8tbmFtZS5naXQvaG9va3MvcHJlLXB1c2guc2FtcGxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY4NCIsImJsb2JfbmFtZSI6IjAwNzY0NDQ1NGI3OTc3N2Y4ODU5NDNiZWU5MzliYTY2YzBkMDFjYWJlM2YzZjQ2MmMzM2Q0ODdlN2FmNzY0MTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9naXQuY29udHJvbGxlci50cyJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzNWU2YTk0MC00YTYxLTQ0ODgtYmI5My04YjYzYTNkY2Q5YTQiLCJyZXF1ZXN0X21lc3NhZ2UiOiJubyBubyBsZXRzIGtlZXAgaXQgb25lIHNpbmdsZSBkb3QgZm9yIGFsbCAiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoibm8gbm8gbGV0cyBrZWVwIGl0IG9uZSBzaW5nbGUgZG90IGZvciBhbGwgIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJHb3QgaXQgLSB5b3Ugd2FudCB0byBrZWVwIGl0IHNpbXBsZXIgd2l0aCBhIHNpbmdsZSBpbnRlcmZhY2UuIEhlcmUncyB0aGUgc2ltcGxpZmllZCB2ZXJzaW9uIHRoYXQgc3RpbGwgbWFpbnRhaW5zIHR5cGUgc2FmZXR5OlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9hcGktcmVzcG9uc2UuZHRvLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmljZVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBkYXRhPzogVDtcbiAgICBlcnJvcj86IHN0cmluZztcbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuQW5kIHVzaW5nIGl0IGluIHlvdXIgcmVwb3NpdG9yeTpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGF0YWJhc2UgZXJyb3IgZHVyaW5nIHVzZXIgY3JlYXRpb25cIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGlzIGlzIHNpbXBsZXIgYnV0IHN0aWxsIHR5cGUtc2FmZS4gVHlwZVNjcmlwdCB3aWxsIHN0aWxsIGNoZWNrIHRoYXQ6XG4tIGBzdGF0dXNgIG11c3QgYmUgb25lIG9mIHRoZSBgUmVzcG9uc2VTdGF0dXNgIGVudW0gdmFsdWVzXG4tIGBtZXNzYWdlYCBtdXN0IGJlIGEgc3RyaW5nXG4tIGBkYXRhYCBtdXN0IG1hdGNoIHRoZSB0eXBlIHlvdSBzcGVjaWZ5IChvciBiZSB1bmRlZmluZWQpXG4tIGBlcnJvcmAgbXVzdCBiZSBhIHN0cmluZyAob3IgYmUgdW5kZWZpbmVkKVxuXG5JcyB0aGlzIG1vcmUgd2hhdCB5b3Ugd2VyZSBsb29raW5nIGZvcj9cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNjIzXG5XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy91c2VyLnNlcnZpY2UudHM6MC00ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50czo0ODYtMTE1NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjExNTUtMTk1MFxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjE5NTAtMjg2NVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzOjI4NjUtMzc0MVxuZG9ja2VyLWNvbXBvc2UueW1sOjAtOTc2XG5kb2NrZXItY29tcG9zZS55bWw6OTc2LTE0MTNcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9zY2hlbWEucHJpc21hOjAtNzQzXG4uZ2l0aWdub3JlOjAtMTczXG5XRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UuanNvbjowLTY4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L3V0aWxzL2luaXRHaXRSZXBvLnNoOjAtNzI3XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8uc2g6MC03MjNcbldFQi9CQUNLRU5EL0NPREUvdHNjb25maWcuanNvbjowLTU3OVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3ByaXNtYS1jbGllbnQudHM6MC01ODZcbldFQi9CQUNLRU5EL0NPREUvc3JjL3ByaXNtYS9wcmlzbWEtY2xpZW50LnRzOjU4Ni05NDNcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvLmdpdGlnbm9yZTowLTI1M1xuR0lULVNFUlZFUi9Eb2NrZXJmaWxlOjAtNjk2XG5XRUIvRlJPTlRFTkQvRG9ja2VyZmlsZTowLTQ4NlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvZ2l0L2luaXRHaXRSZXBvLnRzOjAtODAzXG5XRUIvQkFDS0VORC9Eb2NrZXJmaWxlOjAtNDA5XG5XRUIvQkFDS0VORC9DT0RFL3NyYy9pbmRleC50czowLTYxOFxuV0VCL0JBQ0tFTkQvQ09ERS9wYWNrYWdlLWxvY2suanNvbjowLTYyNlxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzOjE0NzctMjI5MVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czowLTY2N1xuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czo2NjctMTYzOVxuV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50czoxNjM5LTI2ODlcbldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uLmNvbnRyb2xsZXIudHM6MC00MjJcbldFQi9GUk9OVEVORC9DT0RFL215LXZ1ZS1hcHAvZXNsaW50LmNvbmZpZy5qczoyMDQtMTAwM1xuV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC92aXRlLmNvbmZpZy5qczowLTE2MVxuUkVBRE1FLm1kOjAtMTMifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkdvdCBpdCAtIHlvdSB3YW50IHRvIGtlZXAgaXQgc2ltcGxlciB3aXRoIGEgc2luZ2xlIGludGVyZmFjZS4gSGVyZSdzIHRoZSBzaW1wbGlmaWVkIHZlcnNpb24gdGhhdCBzdGlsbCBtYWludGFpbnMgdHlwZSBzYWZldHk6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvZHRvL2FwaS1yZXNwb25zZS5kdG8udHMgbW9kZT1FRElUXG5leHBvcnQgZW51bSBSZXNwb25zZVN0YXR1cyB7XG4gICAgU1VDQ0VTUyA9ICdzdWNjZXNzJyxcbiAgICBGQUlMRUQgPSAnZmFpbGVkJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZpY2VSZXNwb25zZTxUID0gYW55PiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgZGF0YT86IFQ7XG4gICAgZXJyb3I/OiBzdHJpbmc7XG59XG5gYGBgXG5cbkFuZCB1c2luZyBpdCBpbiB5b3VyIHJlcG9zaXRvcnk6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyBtb2RlPUVESVRcbmFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8dXNlcnM+PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy5wcmlzbWEudXNlcnMuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHNcIlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGF0YWJhc2UgZXJyb3IgZHVyaW5nIHVzZXIgY3JlYXRpb25cIixcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxufVxuYGBgYFxuXG5UaGlzIGlzIHNpbXBsZXIgYnV0IHN0aWxsIHR5cGUtc2FmZS4gVHlwZVNjcmlwdCB3aWxsIHN0aWxsIGNoZWNrIHRoYXQ6XG4tIGBzdGF0dXNgIG11c3QgYmUgb25lIG9mIHRoZSBgUmVzcG9uc2VTdGF0dXNgIGVudW0gdmFsdWVzXG4tIGBtZXNzYWdlYCBtdXN0IGJlIGEgc3RyaW5nXG4tIGBkYXRhYCBtdXN0IG1hdGNoIHRoZSB0eXBlIHlvdSBzcGVjaWZ5IChvciBiZSB1bmRlZmluZWQpXG4tIGBlcnJvcmAgbXVzdCBiZSBhIHN0cmluZyAob3IgYmUgdW5kZWZpbmVkKVxuXG5JcyB0aGlzIG1vcmUgd2hhdCB5b3Ugd2VyZSBsb29raW5nIGZvcj9cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjYyMyIsImJsb2JfbmFtZSI6IjYwMjcwOTQ0OGFjMjcwMjdkNGU5OTEwYzk5OGU0Y2QxZTQ0OTMyZmM3ZWIwN2U5YmY4OTk4YTY0YjQyZjE1ZTMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDg2IiwiYmxvYl9uYW1lIjoiOGU0YWY4ZGY2NmJkN2Q2OGUwNTdjYjBiZmEyNjNlMmY1NWVkMTZiMDY3MzZhNjE0MDQ1NmJjOWE0NDk3NTRjZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL3VzZXIuc2VydmljZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiI0ODYiLCJjaGFyX2VuZCI6IjExNTUiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjExNTUiLCJjaGFyX2VuZCI6IjE5NTAiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjE5NTAiLCJjaGFyX2VuZCI6IjI4NjUiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjI4NjUiLCJjaGFyX2VuZCI6IjM3NDEiLCJibG9iX25hbWUiOiI4ZTRhZjhkZjY2YmQ3ZDY4ZTA1N2NiMGJmYTI2M2UyZjU1ZWQxNmIwNjczNmE2MTQwNDU2YmM5YTQ0OTc1NGNlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvdXNlci5zZXJ2aWNlLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk3NiIsImJsb2JfbmFtZSI6IjI5MDg5YjhlNjQwNWJkZjgyZTk2MDIyN2JmMDAzYmExMTY4NzYyNGE3YWJkMmJlY2IzNzc4MzY4M2M3YzhiMzMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJkb2NrZXItY29tcG9zZS55bWwifX0seyJjaGFyX3N0YXJ0IjoiOTc2IiwiY2hhcl9lbmQiOiIxNDEzIiwiYmxvYl9uYW1lIjoiMjkwODliOGU2NDA1YmRmODJlOTYwMjI3YmYwMDNiYTExNjg3NjI0YTdhYmQyYmVjYjM3NzgzNjgzYzdjOGIzMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRvY2tlci1jb21wb3NlLnltbCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NDMiLCJibG9iX25hbWUiOiIwOWQ5ZTVhNTYzNjYwNDE1ZTEwMDhjNmQzZThiMzMwMjA5ZDRjNzQ4NGUyNDNkN2UzOWVkZjdmN2ExMWJjNWYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcHJpc21hL3NjaGVtYS5wcmlzbWEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTczIiwiYmxvYl9uYW1lIjoiMzgxOWU2MjFmOTdhZjJkMjE5N2YzYmQ5MWJlMzliNGY2OTlhMTAzZDAxMjA2MDUzNWFlZTNiNWIwMThkMDlmZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii5naXRpZ25vcmUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjg2IiwiYmxvYl9uYW1lIjoiZDdiOGJlMTQ0Njc5YTJlZmMxZTZmNmI3N2YyOWY3OGNlZmQ3YjkwZjIzYjU4NTRiOTRhZjJhYmM1MDI0MTVlOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvcGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjcyNyIsImJsb2JfbmFtZSI6ImYxYTk2YTI3MDY4YjBkNGFmNTc3YzVjMTRiZGVmYmI5YzU3ODIyODIwYjQ1NWQxMWNlYjQ3MTA4ZGVjYmUxODkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvdXRpbHMvaW5pdEdpdFJlcG8uc2gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzIzIiwiYmxvYl9uYW1lIjoiNmMzMjUyOTk5Mzg5ZGVhM2YwNDkxMDVkZDVkZjQyZDc0OTk4MzRmZWUyMmE2MTVmYjdkZjE1NzExNjFmODhjMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2dpdC9pbml0R2l0UmVwby5zaCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NzkiLCJibG9iX25hbWUiOiIwMTRiYTEwNDRkNDdlNTFiNWM1ZjYyMjdmZTUzNzY4ZmJjM2VkYWJhZDAxNjQ2NDYyMGI3YzRmM2JkOGIzZjUzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS90c2NvbmZpZy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU4NiIsImJsb2JfbmFtZSI6IjQ3YzYxOTE0MTBmZTBkZjNlNzFiY2FlZTU3MjE2YzI5MzQxZjhmY2E5YjQ5ZTQ1YTE0MzUxZjVmMmI0NmJkNTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50cyJ9fSx7ImNoYXJfc3RhcnQiOiI1ODYiLCJjaGFyX2VuZCI6Ijk0MyIsImJsb2JfbmFtZSI6IjQ3YzYxOTE0MTBmZTBkZjNlNzFiY2FlZTU3MjE2YzI5MzQxZjhmY2E5YjQ5ZTQ1YTE0MzUxZjVmMmI0NmJkNTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9wcmlzbWEvcHJpc21hLWNsaWVudC50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIyNTMiLCJibG9iX25hbWUiOiJmMWU5MTEzOTViMjE1NTQxNTk2ZjIxNDcyODFmOWVhOGVjZTVjYzk5NjA0ZmRmNDdmY2Y1MzEyMjFiMzRhOWRkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC8uZ2l0aWdub3JlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY5NiIsImJsb2JfbmFtZSI6IjFmYTEzOGIwNjVhODJiNzcxZWRmZTcxMDIzYzA5MjhjYTNhOTI4N2ExOTdhZTAwMDQzMWZjZTZhNmEwN2QwN2YiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJHSVQtU0VSVkVSL0RvY2tlcmZpbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDg2IiwiYmxvYl9uYW1lIjoiMWI5MTQ4MDdkMTc4ZmY1ZGJlM2JhYmNkNzc2OWE4NGRjZGU5Mjc3MjllNTBmN2NjYzBlNTQ2NDkxOTMzMjBkYyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9GUk9OVEVORC9Eb2NrZXJmaWxlIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgwMyIsImJsb2JfbmFtZSI6IjllZjJhOTRlZmI1NTg3YmRjNDJiY2VlNzcwMjhmMDIxYzA2ZTM5NWFlNTA4ZTYyNTZiMTg5MGEzY2IyZDhkOWMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9naXQvaW5pdEdpdFJlcG8udHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDA5IiwiYmxvYl9uYW1lIjoiYmE2YTVhYzkwMDUzNGNhNDZkMTkyOTI1NDM0NTZlNzcxNzQ2YTZlNzIyZmM0ZDcwZjRmZDAyMDJhZjFjMWNjOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0RvY2tlcmZpbGUifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjE4IiwiYmxvYl9uYW1lIjoiMTAzNzlmOTM1NTNiMzk5MjEwODdhY2RjZWU4ZDY0MzRkOGViMWE4NTc5ZjY2NjY1NzE4MmUzMzg4M2Q4OTg4YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL2luZGV4LnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjYyNiIsImJsb2JfbmFtZSI6IjE5NDFiNmViNDAyYTk3NWZmNmM2OWYxYjk4YjY0YjM3Y2ZlZjM0NGY2Nzk0YWJhMDdkMzAxNTM2ZWMwZjU2NTYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3BhY2thZ2UtbG9jay5qc29uIn19LHsiY2hhcl9zdGFydCI6IjE0NzciLCJjaGFyX2VuZCI6IjIyOTEiLCJibG9iX25hbWUiOiJjNjc2NDhhYmMxYWRiNzQ2ZTdjMTU0OTgxMTVlNWY5MWQzZDdhZmVlMTQyZWVjNjhkNWNkODMzZTkxMmM3NmEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjY2NyIsImNoYXJfZW5kIjoiMTYzOSIsImJsb2JfbmFtZSI6IjJiZDQ2NjcyZWIwNmI3YWFjOTU1Mzg1N2FjZWU2ODZlMTkwNTM5YzMwNjg2MDNjOTgxZjRiYjdiYTk4MjFjNWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIn19LHsiY2hhcl9zdGFydCI6IjE2MzkiLCJjaGFyX2VuZCI6IjI2ODkiLCJibG9iX25hbWUiOiIyYmQ0NjY3MmViMDZiN2FhYzk1NTM4NTdhY2VlNjg2ZTE5MDUzOWMzMDY4NjAzYzk4MWY0YmI3YmE5ODIxYzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0MjIiLCJibG9iX25hbWUiOiI4OGQ3Y2ExNDFmZGRlZGQwZTY4ZmQzZmZiZmNlYWJmYzNhNjgwMDZlYWQ2ZDAyNWY2MzUwNDM1MzQ2ZjYzNTBlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aGVudGljYXRpb24uY29udHJvbGxlci50cyJ9fSx7ImNoYXJfc3RhcnQiOiIyMDQiLCJjaGFyX2VuZCI6IjEwMDMiLCJibG9iX25hbWUiOiJiZTYyOGM4NmRlZGFmNmE4NWRjZGM0MmEyM2ZlMjg0YzI2NTE4NzRhZjRiZTBiNzYyYjM3NGYxNTNmZTA5MzBkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0ZST05URU5EL0NPREUvbXktdnVlLWFwcC9lc2xpbnQuY29uZmlnLmpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjE2MSIsImJsb2JfbmFtZSI6IjgxYzlmMDA5NjhhODgwYjg4MmY1MzIwNzQyODZhNjNlNzRlZGQyMDAxNWJlYWFiMmExODYwZmRmN2ExNzczOWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvRlJPTlRFTkQvQ09ERS9teS12dWUtYXBwL3ZpdGUuY29uZmlnLmpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjEzIiwiYmxvYl9uYW1lIjoiYjhlNjgxOGQ1NGU2YjhkYTNhMmYwODVjYjFjNGQ3OTZkYWUxOGYyNjYwYTVmZDhmMTNlYTg3ZDIwYTcxNjc2MSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJhNmVhMDQwYi1lMDc2LTQxOWUtOWRkYi1kM2Q2MjhlMGY2NzEiLCJyZXF1ZXN0X21lc3NhZ2UiOiJwbGVhc2UgcmV4cGxhaW4gbWUgdGhlIGR0byAsIGhvdyB0byBjcmVhdGUgaXQgYW5kIGhvdyB0byB1c2UgaXQgaW4gYWxsICBsYXllcnMgKHJlcG9zaXRvcnkgLCBzZXJ2aWNlICwgY29udHJvbGxlciApXG5leHBsYWluIHRvIG1lIHdpdGggZGV0YWlscyAiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0IjoicGxlYXNlIHJleHBsYWluIG1lIHRoZSBkdG8gLCBob3cgdG8gY3JlYXRlIGl0IGFuZCBob3cgdG8gdXNlIGl0IGluIGFsbCAgbGF5ZXJzIChyZXBvc2l0b3J5ICwgc2VydmljZSAsIGNvbnRyb2xsZXIgKSJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiZXhwbGFpbiB0byBtZSB3aXRoIGRldGFpbHMgIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJJJ2xsIGV4cGxhaW4gRFRPcyAoRGF0YSBUcmFuc2ZlciBPYmplY3RzKSBpbiBkZXRhaWwgd2l0aCBhIGNvbXBsZXRlIGV4YW1wbGUgdXNpbmcgYSB1c2VyIHJlZ2lzdHJhdGlvbiBmbG93LlxuXG4xLiBGaXJzdCwgbGV0J3MgY3JlYXRlIG91ciBEVE9zOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2R0by91c2VyLmR0by50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG4vLyBJbnB1dCBEVE8gLSBXaGF0IHdlIGV4cGVjdCBmcm9tIHRoZSBjbGllbnRcbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlVXNlckR0byB7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBwYXNzd29yZDogc3RyaW5nO1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG59XG5cbi8vIERhdGFiYXNlIERUTyAtIEhvdyB3ZSBzdG9yZSBpdFxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGJEdG8ge1xuICAgIGlkOiBudW1iZXI7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBwYXNzd29yZF9oYXNoOiBzdHJpbmc7XG4gICAgdXNlcm5hbWU6IHN0cmluZztcbiAgICBjcmVhdGVkX2F0OiBEYXRlO1xuICAgIHVwZGF0ZWRfYXQ6IERhdGU7XG59XG5cbi8vIE91dHB1dCBEVE8gLSBXaGF0IHdlIHNlbmQgYmFjayB0byBjbGllbnQgKGV4Y2x1ZGluZyBzZW5zaXRpdmUgZGF0YSlcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclJlc3BvbnNlRHRvIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgdXNlcm5hbWU6IHN0cmluZztcbiAgICBjcmVhdGVkX2F0OiBEYXRlO1xufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9yZXNwb25zZS5kdG8udHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuZXhwb3J0IGVudW0gUmVzcG9uc2VTdGF0dXMge1xuICAgIFNVQ0NFU1MgPSAnc3VjY2VzcycsXG4gICAgRkFJTEVEID0gJ2ZhaWxlZCdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlUmVzcG9uc2U8VCA9IGFueT4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXM7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUO1xuICAgIGVycm9yPzogc3RyaW5nO1xufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG4yLiBOb3csIGxldCdzIGltcGxlbWVudCBlYWNoIGxheWVyOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHNcIiBtb2RlPVwiRURJVFwiPlxuYGBgdHlwZXNjcmlwdFxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVzZXJSZXBvc2l0b3J5IHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KCdQcmlzbWFDbGllbnQnKSBwcml2YXRlIHByaXNtYTogUHJpc21hQ2xpZW50KSB7fVxuXG4gICAgYXN5bmMgY3JlYXRlVXNlcih1c2VyRGF0YTogT21pdDxVc2VyRGJEdG8sICdpZCcgfCAnY3JlYXRlZF9hdCcgfCAndXBkYXRlZF9hdCc+KTogUHJvbWlzZTxTZXJ2aWNlUmVzcG9uc2U8VXNlckRiRHRvPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdXNlciBleGlzdHNcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiB1c2VyRGF0YS5lbWFpbCB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGV4aXN0aW5nVXNlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzXCJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdXNlciBpbiBkYXRhYmFzZVxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAuLi51c2VyRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBkYXRhOiBuZXdVc2VyXG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkRhdGFiYXNlIGVycm9yXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBpbmplY3QoJ1VzZXJSZXBvc2l0b3J5JykgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnksXG4gICAgICAgIEBpbmplY3QoJ0JjcnlwdFNlcnZpY2UnKSBwcml2YXRlIGJjcnlwdDogQmNyeXB0U2VydmljZVxuICAgICkge31cblxuICAgIGFzeW5jIHNpZ25VcCh1c2VyRGF0YTogQ3JlYXRlVXNlckR0byk6IFByb21pc2U8U2VydmljZVJlc3BvbnNlPFVzZXJSZXNwb25zZUR0bz4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFZhbGlkYXRlIGVtYWlsIGZvcm1hdFxuICAgICAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWRFbWFpbCh1c2VyRGF0YS5lbWFpbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIGVtYWlsIGZvcm1hdFwiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVmFsaWRhdGUgcGFzc3dvcmRcbiAgICAgICAgICAgIGlmICh1c2VyRGF0YS5wYXNzd29yZC5sZW5ndGggPCA4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnNcIlxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEhhc2ggcGFzc3dvcmRcbiAgICAgICAgICAgIGNvbnN0IHBhc3N3b3JkX2hhc2ggPSBhd2FpdCB0aGlzLmJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkLCAxMCk7XG5cbiAgICAgICAgICAgIC8vIFByZXBhcmUgZGF0YSBmb3IgcmVwb3NpdG9yeVxuICAgICAgICAgICAgY29uc3QgdXNlckRiRGF0YSA9IHtcbiAgICAgICAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaCxcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlckRhdGEudXNlcm5hbWVcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIENhbGwgcmVwb3NpdG9yeVxuICAgICAgICAgICAgY29uc3QgcmVwb1Jlc3BvbnNlID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5jcmVhdGVVc2VyKHVzZXJEYkRhdGEpO1xuXG4gICAgICAgICAgICBpZiAocmVwb1Jlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuRkFJTEVEKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcG9SZXNwb25zZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVHJhbnNmb3JtIGRhdGFiYXNlIERUTyB0byByZXNwb25zZSBEVE9cbiAgICAgICAgICAgIGNvbnN0IHVzZXJSZXNwb25zZTogVXNlclJlc3BvbnNlRHRvID0ge1xuICAgICAgICAgICAgICAgIGlkOiByZXBvUmVzcG9uc2UuZGF0YS5pZCxcbiAgICAgICAgICAgICAgICBlbWFpbDogcmVwb1Jlc3BvbnNlLmRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHJlcG9SZXNwb25zZS5kYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IHJlcG9SZXNwb25zZS5kYXRhLmNyZWF0ZWRfYXRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IHVzZXJSZXNwb25zZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJTZXJ2aWNlIGVycm9yXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGlzVmFsaWRFbWFpbChlbWFpbDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLy50ZXN0KGVtYWlsKTtcbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aC5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbkBjb250cm9sbGVyKCcvYXV0aCcpXG5leHBvcnQgY2xhc3MgQXV0aENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ0F1dGhTZXJ2aWNlJykgcHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UpIHt9XG5cbiAgICBAcG9zdCgnL3NpZ251cCcpXG4gICAgYXN5bmMgc2lnblVwKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gVmFsaWRhdGUgcmVxdWVzdCBib2R5IGFnYWluc3QgQ3JlYXRlVXNlckR0b1xuICAgICAgICAgICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQsIHVzZXJuYW1lIH0gPSByZXEuYm9keTtcblxuICAgICAgICAgICAgaWYgKCFlbWFpbCB8fCAhcGFzc3dvcmQgfHwgIXVzZXJuYW1lKSB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkc1wiXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBjcmVhdGVVc2VyRHRvOiBDcmVhdGVVc2VyRHRvID0ge1xuICAgICAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkLFxuICAgICAgICAgICAgICAgIHVzZXJuYW1lXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBDYWxsIHNlcnZpY2VcbiAgICAgICAgICAgIGNvbnN0IHNlcnZpY2VSZXNwb25zZSA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2Uuc2lnblVwKGNyZWF0ZVVzZXJEdG8pO1xuXG4gICAgICAgICAgICAvLyBNYXAgc2VydmljZSByZXNwb25zZSB0byBIVFRQIHN0YXR1c1xuICAgICAgICAgICAgbGV0IGh0dHBTdGF0dXMgPSA1MDA7XG4gICAgICAgICAgICBpZiAoc2VydmljZVJlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUykge1xuICAgICAgICAgICAgICAgIGh0dHBTdGF0dXMgPSAyMDE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGh0dHBTdGF0dXMgPSB0aGlzLmdldEVycm9ySHR0cFN0YXR1cyhzZXJ2aWNlUmVzcG9uc2UubWVzc2FnZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlcy5zdGF0dXMoaHR0cFN0YXR1cykuanNvbihzZXJ2aWNlUmVzcG9uc2UpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiQ29udHJvbGxlciBlcnJvclwiLFxuICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0RXJyb3JIdHRwU3RhdHVzKG1lc3NhZ2U6IHN0cmluZyk6IG51bWJlciB7XG4gICAgICAgIGlmIChtZXNzYWdlLmluY2x1ZGVzKFwiYWxyZWFkeSBleGlzdHNcIikpIHJldHVybiA0MDk7XG4gICAgICAgIGlmIChtZXNzYWdlLmluY2x1ZGVzKFwiSW52YWxpZFwiKSB8fCBtZXNzYWdlLmluY2x1ZGVzKFwibXVzdCBiZVwiKSkgcmV0dXJuIDQwMDtcbiAgICAgICAgcmV0dXJuIDUwMDtcbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkxldCdzIGJyZWFrIGRvd24gaG93IERUT3MgZmxvdyB0aHJvdWdoIHRoZSBsYXllcnM6XG5cbjEuICoqQ29udHJvbGxlciBMYXllcioqOlxuICAgLSBSZWNlaXZlcyByYXcgSlNPTiBkYXRhIGZyb20gSFRUUCByZXF1ZXN0XG4gICAtIFZhbGlkYXRlcyBhbmQgdHJhbnNmb3JtcyBpdCBpbnRvIGBDcmVhdGVVc2VyRHRvYFxuICAgLSBQYXNzZXMgRFRPIHRvIHNlcnZpY2UgbGF5ZXJcbiAgIC0gUmVjZWl2ZXMgYFNlcnZpY2VSZXNwb25zZTxVc2VyUmVzcG9uc2VEdG8+YCBhbmQgbWFwcyBpdCB0byBIVFRQIHJlc3BvbnNlXG5cbjIuICoqU2VydmljZSBMYXllcioqOlxuICAgLSBSZWNlaXZlcyBgQ3JlYXRlVXNlckR0b2AgZnJvbSBjb250cm9sbGVyXG4gICAtIFBlcmZvcm1zIGJ1c2luZXNzIGxvZ2ljIHZhbGlkYXRpb25cbiAgIC0gVHJhbnNmb3JtcyBgQ3JlYXRlVXNlckR0b2AgaW50byByZXBvc2l0b3J5IGZvcm1hdFxuICAgLSBDYWxscyByZXBvc2l0b3J5XG4gICAtIFRyYW5zZm9ybXMgYFVzZXJEYkR0b2AgaW50byBgVXNlclJlc3BvbnNlRHRvYFxuICAgLSBSZXR1cm5zIGBTZXJ2aWNlUmVzcG9uc2U8VXNlclJlc3BvbnNlRHRvPmBcblxuMy4gKipSZXBvc2l0b3J5IExheWVyKio6XG4gICAtIFJlY2VpdmVzIGRhdGFiYXNlLXJlYWR5IERUT1xuICAgLSBQZXJmb3JtcyBkYXRhYmFzZSBvcGVyYXRpb25zXG4gICAtIFJldHVybnMgYFNlcnZpY2VSZXNwb25zZTxVc2VyRGJEdG8+YFxuXG5CZW5lZml0cyBvZiB0aGlzIGFwcHJvYWNoOlxuLSBDbGVhciBkYXRhIHRyYW5zZm9ybWF0aW9uIGJldHdlZW4gbGF5ZXJzXG4tIFR5cGUgc2FmZXR5IHRocm91Z2hvdXQgdGhlIGFwcGxpY2F0aW9uXG4tIFNlcGFyYXRpb24gb2YgY29uY2VybnNcbi0gSGlkZSBzZW5zaXRpdmUgZGF0YSAobGlrZSBwYXNzd29yZF9oYXNoKSBmcm9tIGNsaWVudFxuLSBDb25zaXN0ZW50IGVycm9yIGhhbmRsaW5nXG4tIEVhc3kgdG8gbW9kaWZ5IGRhdGEgc3RydWN0dXJlIGF0IGFueSBsYXllciB3aXRob3V0IGFmZmVjdGluZyBvdGhlcnNcblxuVGhlIGBTZXJ2aWNlUmVzcG9uc2VgIERUTyB3cmFwcyBhbGwgcmVzcG9uc2VzLCBwcm92aWRpbmc6XG4tIENvbnNpc3RlbnQgc3RhdHVzIGluZGljYXRpb25cbi0gRXJyb3IgbWVzc2FnZXMgd2hlbiBuZWVkZWRcbi0gVHlwZS1zYWZlIGRhdGEgcGF5bG9hZFxuLSBTdGFuZGFyZCBmb3JtYXQgZm9yIGVycm9yIGhhbmRsaW5nXG5cbldvdWxkIHlvdSBsaWtlIG1lIHRvIGV4cGxhaW4gYW55IHNwZWNpZmljIHBhcnQgaW4gbW9yZSBkZXRhaWw/XG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50czowLTYyMyJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSSdsbCBleHBsYWluIERUT3MgKERhdGEgVHJhbnNmZXIgT2JqZWN0cykgaW4gZGV0YWlsIHdpdGggYSBjb21wbGV0ZSBleGFtcGxlIHVzaW5nIGEgdXNlciByZWdpc3RyYXRpb24gZmxvdy5cblxuMS4gRmlyc3QsIGxldCdzIGNyZWF0ZSBvdXIgRFRPczpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kdG8vdXNlci5kdG8udHMgbW9kZT1FRElUXG4vLyBJbnB1dCBEVE8gLSBXaGF0IHdlIGV4cGVjdCBmcm9tIHRoZSBjbGllbnRcbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlVXNlckR0byB7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBwYXNzd29yZDogc3RyaW5nO1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG59XG5cbi8vIERhdGFiYXNlIERUTyAtIEhvdyB3ZSBzdG9yZSBpdFxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGJEdG8ge1xuICAgIGlkOiBudW1iZXI7XG4gICAgZW1haWw6IHN0cmluZztcbiAgICBwYXNzd29yZF9oYXNoOiBzdHJpbmc7XG4gICAgdXNlcm5hbWU6IHN0cmluZztcbiAgICBjcmVhdGVkX2F0OiBEYXRlO1xuICAgIHVwZGF0ZWRfYXQ6IERhdGU7XG59XG5cbi8vIE91dHB1dCBEVE8gLSBXaGF0IHdlIHNlbmQgYmFjayB0byBjbGllbnQgKGV4Y2x1ZGluZyBzZW5zaXRpdmUgZGF0YSlcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclJlc3BvbnNlRHRvIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgdXNlcm5hbWU6IHN0cmluZztcbiAgICBjcmVhdGVkX2F0OiBEYXRlO1xufVxuYGBgYFxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9yZXNwb25zZS5kdG8udHMgbW9kZT1FRElUXG5leHBvcnQgZW51bSBSZXNwb25zZVN0YXR1cyB7XG4gICAgU1VDQ0VTUyA9ICdzdWNjZXNzJyxcbiAgICBGQUlMRUQgPSAnZmFpbGVkJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZpY2VSZXNwb25zZTxUID0gYW55PiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cztcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgZGF0YT86IFQ7XG4gICAgZXJyb3I/OiBzdHJpbmc7XG59XG5gYGBgXG5cbjIuIE5vdywgbGV0J3MgaW1wbGVtZW50IGVhY2ggbGF5ZXI6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50cyBtb2RlPUVESVRcbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVc2VyUmVwb3NpdG9yeSB7XG4gICAgY29uc3RydWN0b3IoQGluamVjdCgnUHJpc21hQ2xpZW50JykgcHJpdmF0ZSBwcmlzbWE6IFByaXNtYUNsaWVudCkge31cblxuICAgIGFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IE9taXQ8VXNlckRiRHRvLCAnaWQnIHwgJ2NyZWF0ZWRfYXQnIHwgJ3VwZGF0ZWRfYXQnPik6IFByb21pc2U8U2VydmljZVJlc3BvbnNlPFVzZXJEYkR0bz4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHVzZXIgZXhpc3RzXG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgICAgICB3aGVyZTogeyBlbWFpbDogdXNlckRhdGEuZW1haWwgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0c1wiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHVzZXIgaW4gZGF0YWJhc2VcbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgLi4udXNlckRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIsXG4gICAgICAgICAgICAgICAgZGF0YTogbmV3VXNlclxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJEYXRhYmFzZSBlcnJvclwiLFxuICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgYFxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyBtb2RlPUVESVRcbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBpbmplY3QoJ1VzZXJSZXBvc2l0b3J5JykgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnksXG4gICAgICAgIEBpbmplY3QoJ0JjcnlwdFNlcnZpY2UnKSBwcml2YXRlIGJjcnlwdDogQmNyeXB0U2VydmljZVxuICAgICkge31cblxuICAgIGFzeW5jIHNpZ25VcCh1c2VyRGF0YTogQ3JlYXRlVXNlckR0byk6IFByb21pc2U8U2VydmljZVJlc3BvbnNlPFVzZXJSZXNwb25zZUR0bz4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFZhbGlkYXRlIGVtYWlsIGZvcm1hdFxuICAgICAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWRFbWFpbCh1c2VyRGF0YS5lbWFpbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJJbnZhbGlkIGVtYWlsIGZvcm1hdFwiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVmFsaWRhdGUgcGFzc3dvcmRcbiAgICAgICAgICAgIGlmICh1c2VyRGF0YS5wYXNzd29yZC5sZW5ndGggPCA4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnNcIlxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEhhc2ggcGFzc3dvcmRcbiAgICAgICAgICAgIGNvbnN0IHBhc3N3b3JkX2hhc2ggPSBhd2FpdCB0aGlzLmJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkLCAxMCk7XG5cbiAgICAgICAgICAgIC8vIFByZXBhcmUgZGF0YSBmb3IgcmVwb3NpdG9yeVxuICAgICAgICAgICAgY29uc3QgdXNlckRiRGF0YSA9IHtcbiAgICAgICAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRfaGFzaCxcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlckRhdGEudXNlcm5hbWVcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIENhbGwgcmVwb3NpdG9yeVxuICAgICAgICAgICAgY29uc3QgcmVwb1Jlc3BvbnNlID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5jcmVhdGVVc2VyKHVzZXJEYkRhdGEpO1xuXG4gICAgICAgICAgICBpZiAocmVwb1Jlc3BvbnNlLnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuRkFJTEVEKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcG9SZXNwb25zZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVHJhbnNmb3JtIGRhdGFiYXNlIERUTyB0byByZXNwb25zZSBEVE9cbiAgICAgICAgICAgIGNvbnN0IHVzZXJSZXNwb25zZTogVXNlclJlc3BvbnNlRHRvID0ge1xuICAgICAgICAgICAgICAgIGlkOiByZXBvUmVzcG9uc2UuZGF0YS5pZCxcbiAgICAgICAgICAgICAgICBlbWFpbDogcmVwb1Jlc3BvbnNlLmRhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHJlcG9SZXNwb25zZS5kYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRfYXQ6IHJlcG9SZXNwb25zZS5kYXRhLmNyZWF0ZWRfYXRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IHVzZXJSZXNwb25zZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJTZXJ2aWNlIGVycm9yXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGlzVmFsaWRFbWFpbChlbWFpbDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLy50ZXN0KGVtYWlsKTtcbiAgICB9XG59XG5gYGBgXG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aC5jb250cm9sbGVyLnRzIG1vZGU9RURJVFxuQGNvbnRyb2xsZXIoJy9hdXRoJylcbmV4cG9ydCBjbGFzcyBBdXRoQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoQGluamVjdCgnQXV0aFNlcnZpY2UnKSBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSkge31cblxuICAgIEBwb3N0KCcvc2lnbnVwJylcbiAgICBhc3luYyBzaWduVXAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSByZXF1ZXN0IGJvZHkgYWdhaW5zdCBDcmVhdGVVc2VyRHRvXG4gICAgICAgICAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCwgdXNlcm5hbWUgfSA9IHJlcS5ib2R5O1xuXG4gICAgICAgICAgICBpZiAoIWVtYWlsIHx8ICFwYXNzd29yZCB8fCAhdXNlcm5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIk1pc3NpbmcgcmVxdWlyZWQgZmllbGRzXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGNyZWF0ZVVzZXJEdG86IENyZWF0ZVVzZXJEdG8gPSB7XG4gICAgICAgICAgICAgICAgZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWVcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIENhbGwgc2VydmljZVxuICAgICAgICAgICAgY29uc3Qgc2VydmljZVJlc3BvbnNlID0gYXdhaXQgdGhpcy5hdXRoU2VydmljZS5zaWduVXAoY3JlYXRlVXNlckR0byk7XG5cbiAgICAgICAgICAgIC8vIE1hcCBzZXJ2aWNlIHJlc3BvbnNlIHRvIEhUVFAgc3RhdHVzXG4gICAgICAgICAgICBsZXQgaHR0cFN0YXR1cyA9IDUwMDtcbiAgICAgICAgICAgIGlmIChzZXJ2aWNlUmVzcG9uc2Uuc3RhdHVzID09PSBSZXNwb25zZVN0YXR1cy5TVUNDRVNTKSB7XG4gICAgICAgICAgICAgICAgaHR0cFN0YXR1cyA9IDIwMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaHR0cFN0YXR1cyA9IHRoaXMuZ2V0RXJyb3JIdHRwU3RhdHVzKHNlcnZpY2VSZXNwb25zZS5tZXNzYWdlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzLnN0YXR1cyhodHRwU3RhdHVzKS5qc29uKHNlcnZpY2VSZXNwb25zZSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJDb250cm9sbGVyIGVycm9yXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRFcnJvckh0dHBTdGF0dXMobWVzc2FnZTogc3RyaW5nKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UuaW5jbHVkZXMoXCJhbHJlYWR5IGV4aXN0c1wiKSkgcmV0dXJuIDQwOTtcbiAgICAgICAgaWYgKG1lc3NhZ2UuaW5jbHVkZXMoXCJJbnZhbGlkXCIpIHx8IG1lc3NhZ2UuaW5jbHVkZXMoXCJtdXN0IGJlXCIpKSByZXR1cm4gNDAwO1xuICAgICAgICByZXR1cm4gNTAwO1xuICAgIH1cbn1cbmBgYGBcblxuTGV0J3MgYnJlYWsgZG93biBob3cgRFRPcyBmbG93IHRocm91Z2ggdGhlIGxheWVyczpcblxuMS4gKipDb250cm9sbGVyIExheWVyKio6XG4gICAtIFJlY2VpdmVzIHJhdyBKU09OIGRhdGEgZnJvbSBIVFRQIHJlcXVlc3RcbiAgIC0gVmFsaWRhdGVzIGFuZCB0cmFuc2Zvcm1zIGl0IGludG8gYENyZWF0ZVVzZXJEdG9gXG4gICAtIFBhc3NlcyBEVE8gdG8gc2VydmljZSBsYXllclxuICAgLSBSZWNlaXZlcyBgU2VydmljZVJlc3BvbnNlPFVzZXJSZXNwb25zZUR0bz5gIGFuZCBtYXBzIGl0IHRvIEhUVFAgcmVzcG9uc2VcblxuMi4gKipTZXJ2aWNlIExheWVyKio6XG4gICAtIFJlY2VpdmVzIGBDcmVhdGVVc2VyRHRvYCBmcm9tIGNvbnRyb2xsZXJcbiAgIC0gUGVyZm9ybXMgYnVzaW5lc3MgbG9naWMgdmFsaWRhdGlvblxuICAgLSBUcmFuc2Zvcm1zIGBDcmVhdGVVc2VyRHRvYCBpbnRvIHJlcG9zaXRvcnkgZm9ybWF0XG4gICAtIENhbGxzIHJlcG9zaXRvcnlcbiAgIC0gVHJhbnNmb3JtcyBgVXNlckRiRHRvYCBpbnRvIGBVc2VyUmVzcG9uc2VEdG9gXG4gICAtIFJldHVybnMgYFNlcnZpY2VSZXNwb25zZTxVc2VyUmVzcG9uc2VEdG8+YFxuXG4zLiAqKlJlcG9zaXRvcnkgTGF5ZXIqKjpcbiAgIC0gUmVjZWl2ZXMgZGF0YWJhc2UtcmVhZHkgRFRPXG4gICAtIFBlcmZvcm1zIGRhdGFiYXNlIG9wZXJhdGlvbnNcbiAgIC0gUmV0dXJucyBgU2VydmljZVJlc3BvbnNlPFVzZXJEYkR0bz5gXG5cbkJlbmVmaXRzIG9mIHRoaXMgYXBwcm9hY2g6XG4tIENsZWFyIGRhdGEgdHJhbnNmb3JtYXRpb24gYmV0d2VlbiBsYXllcnNcbi0gVHlwZSBzYWZldHkgdGhyb3VnaG91dCB0aGUgYXBwbGljYXRpb25cbi0gU2VwYXJhdGlvbiBvZiBjb25jZXJuc1xuLSBIaWRlIHNlbnNpdGl2ZSBkYXRhIChsaWtlIHBhc3N3b3JkX2hhc2gpIGZyb20gY2xpZW50XG4tIENvbnNpc3RlbnQgZXJyb3IgaGFuZGxpbmdcbi0gRWFzeSB0byBtb2RpZnkgZGF0YSBzdHJ1Y3R1cmUgYXQgYW55IGxheWVyIHdpdGhvdXQgYWZmZWN0aW5nIG90aGVyc1xuXG5UaGUgYFNlcnZpY2VSZXNwb25zZWAgRFRPIHdyYXBzIGFsbCByZXNwb25zZXMsIHByb3ZpZGluZzpcbi0gQ29uc2lzdGVudCBzdGF0dXMgaW5kaWNhdGlvblxuLSBFcnJvciBtZXNzYWdlcyB3aGVuIG5lZWRlZFxuLSBUeXBlLXNhZmUgZGF0YSBwYXlsb2FkXG4tIFN0YW5kYXJkIGZvcm1hdCBmb3IgZXJyb3IgaGFuZGxpbmdcblxuV291bGQgeW91IGxpa2UgbWUgdG8gZXhwbGFpbiBhbnkgc3BlY2lmaWMgcGFydCBpbiBtb3JlIGRldGFpbD9cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjYyMyIsImJsb2JfbmFtZSI6IjFiNTkyNjU3ZGI0MmU3MGU3ODE0NWM4ODgzNmVjOWM4ZTJiM2U0MTRkN2E0NmMwODM0NDM2YmE2NDBiNDk4MDgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNzFkNDM2NjItN2U0Ny00YmNkLWE5ZmQtN2I2YjRlOWQwNzliIiwicmVxdWVzdF9tZXNzYWdlIjoibm93IGkgd2FudCB0byBjcmVhdGUgYSBzdGFuZGFydCBkdG8gcGxlYXNlIGZvciBhbCBlbnRpdHlzICBcbmxpa2UgdGhhdCA6IGV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmljZVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBkYXRhPzogVDtcbiAgICBlcnJvcj86IHN0cmluZztcbn1cblxuYW5kIGNhbGwgaXQgYXBpIHJlc3BvbnNlIHBsZWFzYWUgXG4iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoibm93IGkgd2FudCB0byBjcmVhdGUgYSBzdGFuZGFydCBkdG8gcGxlYXNlIGZvciBhbCBlbnRpdHlzICAifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6Imxpa2UgdGhhdCA6IGV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLCJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIEZBSUxFRCA9ICdmYWlsZWQnIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJ9In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJleHBvcnQgaW50ZXJmYWNlIFNlcnZpY2VSZXNwb25zZTxUID0gYW55PiB7In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1czsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBtZXNzYWdlOiBzdHJpbmc7In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgZGF0YT86IFQ7In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgZXJyb3I/OiBzdHJpbmc7In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJ9In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJhbmQgY2FsbCBpdCBhcGkgcmVzcG9uc2UgcGxlYXNhZSAifSx7InR5cGUiOiJoYXJkQnJlYWsifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgY3JlYXRlIGEgc3RhbmRhcmRpemVkIEFQSSByZXNwb25zZSBEVE8gc3RydWN0dXJlIHRoYXQgY2FuIGJlIHVzZWQgYWNyb3NzIGFsbCBlbnRpdGllcy5cblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9kdG8vYXBpLXJlc3BvbnNlLmR0by50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5leHBvcnQgZW51bSBSZXNwb25zZVN0YXR1cyB7XG4gICAgU1VDQ0VTUyA9ICdzdWNjZXNzJyxcbiAgICBGQUlMRUQgPSAnZmFpbGVkJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBkYXRhPzogVDtcbiAgICBlcnJvcj86IHN0cmluZztcbn1cblxuLy8gUGFnaW5hdGlvbiByZXNwb25zZSBpbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgUGFnaW5hdGVkQXBpUmVzcG9uc2U8VCA9IGFueT4gZXh0ZW5kcyBBcGlSZXNwb25zZTxUPiB7XG4gICAgZGF0YT86IHtcbiAgICAgICAgaXRlbXM6IFRbXTtcbiAgICAgICAgdG90YWw6IG51bWJlcjtcbiAgICAgICAgcGFnZTogbnVtYmVyO1xuICAgICAgICBsaW1pdDogbnVtYmVyO1xuICAgICAgICB0b3RhbFBhZ2VzOiBudW1iZXI7XG4gICAgfTtcbn1cblxuLy8gQ29tbW9uIHJlc3BvbnNlIGJ1aWxkZXIgY2xhc3NcbmV4cG9ydCBjbGFzcyBBcGlSZXNwb25zZUJ1aWxkZXIge1xuICAgIHN0YXRpYyBzdWNjZXNzPFQ+KGRhdGE/OiBULCBtZXNzYWdlOiBzdHJpbmcgPSAnT3BlcmF0aW9uIHN1Y2Nlc3NmdWwnKTogQXBpUmVzcG9uc2U8VD4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZXJyb3IobWVzc2FnZTogc3RyaW5nID0gJ09wZXJhdGlvbiBmYWlsZWQnLCBlcnJvcj86IHN0cmluZyk6IEFwaVJlc3BvbnNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIHN1Y2Nlc3NQYWdpbmF0ZWQ8VD4oXG4gICAgICAgIGl0ZW1zOiBUW10sXG4gICAgICAgIHRvdGFsOiBudW1iZXIsXG4gICAgICAgIHBhZ2U6IG51bWJlcixcbiAgICAgICAgbGltaXQ6IG51bWJlcixcbiAgICAgICAgbWVzc2FnZTogc3RyaW5nID0gJ09wZXJhdGlvbiBzdWNjZXNzZnVsJ1xuICAgICk6IFBhZ2luYXRlZEFwaVJlc3BvbnNlPFQ+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgaXRlbXMsXG4gICAgICAgICAgICAgICAgdG90YWwsXG4gICAgICAgICAgICAgICAgcGFnZSxcbiAgICAgICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICAgICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodG90YWwgLyBsaW1pdClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbk5vdywgbGV0J3Mgc2VlIGhvdyB0byB1c2UgdGhpcyBpbiBkaWZmZXJlbnQgbGF5ZXJzOlxuXG4xLiBSZXBvc2l0b3J5IEV4YW1wbGU6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVXNlclJlcG9zaXRvcnkge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ1ByaXNtYUNsaWVudCcpIHByaXZhdGUgcHJpc21hOiBQcmlzbWFDbGllbnQpIHt9XG5cbiAgICBhc3luYyBjcmVhdGVVc2VyKHVzZXJEYXRhOiBDcmVhdGVVc2VyRHRvKTogUHJvbWlzZTxBcGlSZXNwb25zZTxVc2VyRHRvPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0YTogdXNlckRhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5zdWNjZXNzKHVzZXIsICdVc2VyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHVzZXInLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGZpbmRVc2VycyhwYWdlOiBudW1iZXIgPSAxLCBsaW1pdDogbnVtYmVyID0gMTApOiBQcm9taXNlPFBhZ2luYXRlZEFwaVJlc3BvbnNlPFVzZXJEdG8+PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB0b3RhbCA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmNvdW50KCk7XG4gICAgICAgICAgICBjb25zdCBpdGVtcyA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICBza2lwOiAocGFnZSAtIDEpICogbGltaXQsXG4gICAgICAgICAgICAgICAgdGFrZTogbGltaXRcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gQXBpUmVzcG9uc2VCdWlsZGVyLnN1Y2Nlc3NQYWdpbmF0ZWQoaXRlbXMsIHRvdGFsLCBwYWdlLCBsaW1pdCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggdXNlcnMnLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuMi4gU2VydmljZSBFeGFtcGxlOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ1VzZXJSZXBvc2l0b3J5JykgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHt9XG5cbiAgICBhc3luYyBzaWduVXAodXNlckRhdGE6IENyZWF0ZVVzZXJEdG8pOiBQcm9taXNlPEFwaVJlc3BvbnNlPFVzZXJEdG8+PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZEVtYWlsKHVzZXJEYXRhLmVtYWlsKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoJ0ludmFsaWQgZW1haWwgZm9ybWF0Jyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuY3JlYXRlVXNlcih1c2VyRGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcignU2lnbiB1cCBmYWlsZWQnLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGdldFVzZXJzKHBhZ2U/OiBudW1iZXIsIGxpbWl0PzogbnVtYmVyKTogUHJvbWlzZTxQYWdpbmF0ZWRBcGlSZXNwb25zZTxVc2VyRHRvPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuZmluZFVzZXJzKHBhZ2UsIGxpbWl0KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoJ0ZhaWxlZCB0byBnZXQgdXNlcnMnLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuMy4gQ29udHJvbGxlciBFeGFtcGxlOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGguY29udHJvbGxlci50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5AY29udHJvbGxlcignL2F1dGgnKVxuZXhwb3J0IGNsYXNzIEF1dGhDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KCdBdXRoU2VydmljZScpIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgQHBvc3QoJy9zaWdudXAnKVxuICAgIGFzeW5jIHNpZ25VcChAcmVxKCkgcmVxOiBSZXF1ZXN0LCBAcmVzKCkgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5hdXRoU2VydmljZS5zaWduVXAocmVxLmJvZHkpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBzdGF0dXNDb2RlID0gcmVzdWx0LnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyA/IDIwMSA6IDQwMDtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoc3RhdHVzQ29kZSkuanNvbihyZXN1bHQpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oXG4gICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKCdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLCBlcnJvci5tZXNzYWdlKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBnZXQoJy91c2VycycpXG4gICAgYXN5bmMgZ2V0VXNlcnMoQHJlcSgpIHJlcTogUmVxdWVzdCwgQHJlcygpIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHBhZ2UgPSBOdW1iZXIocmVxLnF1ZXJ5LnBhZ2UpIHx8IDE7XG4gICAgICAgICAgICBjb25zdCBsaW1pdCA9IE51bWJlcihyZXEucXVlcnkubGltaXQpIHx8IDEwO1xuXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLmdldFVzZXJzKHBhZ2UsIGxpbWl0KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlc3VsdC5zdGF0dXMgPT09IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MgPyAyMDAgOiA0MDA7XG4gICAgICAgICAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLmpzb24ocmVzdWx0KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKFxuICAgICAgICAgICAgICAgIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcignSW50ZXJuYWwgc2VydmVyIGVycm9yJywgZXJyb3IubWVzc2FnZSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkJlbmVmaXRzIG9mIHRoaXMgYXBwcm9hY2g6XG4xLiBDb25zaXN0ZW50IHJlc3BvbnNlIGZvcm1hdCBhY3Jvc3MgdGhlIGVudGlyZSBhcHBsaWNhdGlvblxuMi4gQnVpbHQtaW4gc3VwcG9ydCBmb3IgcGFnaW5hdGlvblxuMy4gRWFzeSB0byB1c2UgaGVscGVyIG1ldGhvZHMgdGhyb3VnaCBgQXBpUmVzcG9uc2VCdWlsZGVyYFxuNC4gVHlwZS1zYWZlIHJlc3BvbnNlc1xuNS4gQ2xlYXIgc2VwYXJhdGlvbiBiZXR3ZWVuIHN1Y2Nlc3MgYW5kIGVycm9yIHJlc3BvbnNlc1xuNi4gRWFzeSB0byBleHRlbmQgZm9yIGFkZGl0aW9uYWwgcmVzcG9uc2UgdHlwZXNcbjcuIFN0YW5kYXJkaXplZCBlcnJvciBoYW5kbGluZ1xuXG5UaGUgcmVzcG9uc2UgZm9ybWF0IHdpbGwgYWx3YXlzIGJlIGNvbnNpc3RlbnQ6XG5cblN1Y2Nlc3MgUmVzcG9uc2U6XG5gYGBqc29uXG57XG4gICAgXCJzdGF0dXNcIjogXCJzdWNjZXNzXCIsXG4gICAgXCJtZXNzYWdlXCI6IFwiT3BlcmF0aW9uIHN1Y2Nlc3NmdWxcIixcbiAgICBcImRhdGFcIjogeyAuLi4gfVxufVxuYGBgXG5cbkVycm9yIFJlc3BvbnNlOlxuYGBganNvblxue1xuICAgIFwic3RhdHVzXCI6IFwiZmFpbGVkXCIsXG4gICAgXCJtZXNzYWdlXCI6IFwiT3BlcmF0aW9uIGZhaWxlZFwiLFxuICAgIFwiZXJyb3JcIjogXCJEZXRhaWxlZCBlcnJvciBtZXNzYWdlXCJcbn1cbmBgYFxuXG5QYWdpbmF0ZWQgUmVzcG9uc2U6XG5gYGBqc29uXG57XG4gICAgXCJzdGF0dXNcIjogXCJzdWNjZXNzXCIsXG4gICAgXCJtZXNzYWdlXCI6IFwiT3BlcmF0aW9uIHN1Y2Nlc3NmdWxcIixcbiAgICBcImRhdGFcIjoge1xuICAgICAgICBcIml0ZW1zXCI6IFsuLi5dLFxuICAgICAgICBcInRvdGFsXCI6IDEwMCxcbiAgICAgICAgXCJwYWdlXCI6IDEsXG4gICAgICAgIFwibGltaXRcIjogMTAsXG4gICAgICAgIFwidG90YWxQYWdlc1wiOiAxMFxuICAgIH1cbn1cbmBgYFxuXG5Xb3VsZCB5b3UgbGlrZSBtZSB0byBleHBsYWluIGFueSBzcGVjaWZpYyBwYXJ0IGluIG1vcmUgZGV0YWlsP1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJXRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHM6MC02MjMifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkknbGwgY3JlYXRlIGEgc3RhbmRhcmRpemVkIEFQSSByZXNwb25zZSBEVE8gc3RydWN0dXJlIHRoYXQgY2FuIGJlIHVzZWQgYWNyb3NzIGFsbCBlbnRpdGllcy5cblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9kdG8vYXBpLXJlc3BvbnNlLmR0by50cyBtb2RlPUVESVRcbmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBpUmVzcG9uc2U8VCA9IGFueT4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXM7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUO1xuICAgIGVycm9yPzogc3RyaW5nO1xufVxuXG4vLyBQYWdpbmF0aW9uIHJlc3BvbnNlIGludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBQYWdpbmF0ZWRBcGlSZXNwb25zZTxUID0gYW55PiBleHRlbmRzIEFwaVJlc3BvbnNlPFQ+IHtcbiAgICBkYXRhPzoge1xuICAgICAgICBpdGVtczogVFtdO1xuICAgICAgICB0b3RhbDogbnVtYmVyO1xuICAgICAgICBwYWdlOiBudW1iZXI7XG4gICAgICAgIGxpbWl0OiBudW1iZXI7XG4gICAgICAgIHRvdGFsUGFnZXM6IG51bWJlcjtcbiAgICB9O1xufVxuXG4vLyBDb21tb24gcmVzcG9uc2UgYnVpbGRlciBjbGFzc1xuZXhwb3J0IGNsYXNzIEFwaVJlc3BvbnNlQnVpbGRlciB7XG4gICAgc3RhdGljIHN1Y2Nlc3M8VD4oZGF0YT86IFQsIG1lc3NhZ2U6IHN0cmluZyA9ICdPcGVyYXRpb24gc3VjY2Vzc2Z1bCcpOiBBcGlSZXNwb25zZTxUPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgZGF0YVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlOiBzdHJpbmcgPSAnT3BlcmF0aW9uIGZhaWxlZCcsIGVycm9yPzogc3RyaW5nKTogQXBpUmVzcG9uc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgc3VjY2Vzc1BhZ2luYXRlZDxUPihcbiAgICAgICAgaXRlbXM6IFRbXSxcbiAgICAgICAgdG90YWw6IG51bWJlcixcbiAgICAgICAgcGFnZTogbnVtYmVyLFxuICAgICAgICBsaW1pdDogbnVtYmVyLFxuICAgICAgICBtZXNzYWdlOiBzdHJpbmcgPSAnT3BlcmF0aW9uIHN1Y2Nlc3NmdWwnXG4gICAgKTogUGFnaW5hdGVkQXBpUmVzcG9uc2U8VD4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBpdGVtcyxcbiAgICAgICAgICAgICAgICB0b3RhbCxcbiAgICAgICAgICAgICAgICBwYWdlLFxuICAgICAgICAgICAgICAgIGxpbWl0LFxuICAgICAgICAgICAgICAgIHRvdGFsUGFnZXM6IE1hdGguY2VpbCh0b3RhbCAvIGxpbWl0KVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbn1cbmBgYGBcblxuTm93LCBsZXQncyBzZWUgaG93IHRvIHVzZSB0aGlzIGluIGRpZmZlcmVudCBsYXllcnM6XG5cbjEuIFJlcG9zaXRvcnkgRXhhbXBsZTpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9yZXBvc2l0b3JpZXMvdXNlci5yZXBvc2l0b3J5LnRzIG1vZGU9RURJVFxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVzZXJSZXBvc2l0b3J5IHtcbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KCdQcmlzbWFDbGllbnQnKSBwcml2YXRlIHByaXNtYTogUHJpc21hQ2xpZW50KSB7fVxuXG4gICAgYXN5bmMgY3JlYXRlVXNlcih1c2VyRGF0YTogQ3JlYXRlVXNlckR0byk6IFByb21pc2U8QXBpUmVzcG9uc2U8VXNlckR0bz4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHVzZXJEYXRhXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBBcGlSZXNwb25zZUJ1aWxkZXIuc3VjY2Vzcyh1c2VyLCAnVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcignRmFpbGVkIHRvIGNyZWF0ZSB1c2VyJywgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBmaW5kVXNlcnMocGFnZTogbnVtYmVyID0gMSwgbGltaXQ6IG51bWJlciA9IDEwKTogUHJvbWlzZTxQYWdpbmF0ZWRBcGlSZXNwb25zZTxVc2VyRHRvPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdG90YWwgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5jb3VudCgpO1xuICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBhd2FpdCB0aGlzLnByaXNtYS51c2Vycy5maW5kTWFueSh7XG4gICAgICAgICAgICAgICAgc2tpcDogKHBhZ2UgLSAxKSAqIGxpbWl0LFxuICAgICAgICAgICAgICAgIHRha2U6IGxpbWl0XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5zdWNjZXNzUGFnaW5hdGVkKGl0ZW1zLCB0b3RhbCwgcGFnZSwgbGltaXQpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcignRmFpbGVkIHRvIGZldGNoIHVzZXJzJywgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBgXG5cbjIuIFNlcnZpY2UgRXhhbXBsZTpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UudHMgbW9kZT1FRElUXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ1VzZXJSZXBvc2l0b3J5JykgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnkpIHt9XG5cbiAgICBhc3luYyBzaWduVXAodXNlckRhdGE6IENyZWF0ZVVzZXJEdG8pOiBQcm9taXNlPEFwaVJlc3BvbnNlPFVzZXJEdG8+PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZEVtYWlsKHVzZXJEYXRhLmVtYWlsKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoJ0ludmFsaWQgZW1haWwgZm9ybWF0Jyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuY3JlYXRlVXNlcih1c2VyRGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlQnVpbGRlci5lcnJvcignU2lnbiB1cCBmYWlsZWQnLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGdldFVzZXJzKHBhZ2U/OiBudW1iZXIsIGxpbWl0PzogbnVtYmVyKTogUHJvbWlzZTxQYWdpbmF0ZWRBcGlSZXNwb25zZTxVc2VyRHRvPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuZmluZFVzZXJzKHBhZ2UsIGxpbWl0KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoJ0ZhaWxlZCB0byBnZXQgdXNlcnMnLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuMy4gQ29udHJvbGxlciBFeGFtcGxlOlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL2NvbnRyb2xsZXJzL2F1dGguY29udHJvbGxlci50cyBtb2RlPUVESVRcbkBjb250cm9sbGVyKCcvYXV0aCcpXG5leHBvcnQgY2xhc3MgQXV0aENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ0F1dGhTZXJ2aWNlJykgcHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UpIHt9XG5cbiAgICBAcG9zdCgnL3NpZ251cCcpXG4gICAgYXN5bmMgc2lnblVwKEByZXEoKSByZXE6IFJlcXVlc3QsIEByZXMoKSByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcChyZXEuYm9keSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IHN0YXR1c0NvZGUgPSByZXN1bHQuc3RhdHVzID09PSBSZXNwb25zZVN0YXR1cy5TVUNDRVNTID8gMjAxIDogNDAwO1xuICAgICAgICAgICAgcmVzLnN0YXR1cyhzdGF0dXNDb2RlKS5qc29uKHJlc3VsdCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihcbiAgICAgICAgICAgICAgICBBcGlSZXNwb25zZUJ1aWxkZXIuZXJyb3IoJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIGVycm9yLm1lc3NhZ2UpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGdldCgnL3VzZXJzJylcbiAgICBhc3luYyBnZXRVc2VycyhAcmVxKCkgcmVxOiBSZXF1ZXN0LCBAcmVzKCkgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGFnZSA9IE51bWJlcihyZXEucXVlcnkucGFnZSkgfHwgMTtcbiAgICAgICAgICAgIGNvbnN0IGxpbWl0ID0gTnVtYmVyKHJlcS5xdWVyeS5saW1pdCkgfHwgMTA7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2UuZ2V0VXNlcnMocGFnZSwgbGltaXQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBzdGF0dXNDb2RlID0gcmVzdWx0LnN0YXR1cyA9PT0gUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyA/IDIwMCA6IDQwMDtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoc3RhdHVzQ29kZSkuanNvbihyZXN1bHQpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oXG4gICAgICAgICAgICAgICAgQXBpUmVzcG9uc2VCdWlsZGVyLmVycm9yKCdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLCBlcnJvci5tZXNzYWdlKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYGBcblxuQmVuZWZpdHMgb2YgdGhpcyBhcHByb2FjaDpcbjEuIENvbnNpc3RlbnQgcmVzcG9uc2UgZm9ybWF0IGFjcm9zcyB0aGUgZW50aXJlIGFwcGxpY2F0aW9uXG4yLiBCdWlsdC1pbiBzdXBwb3J0IGZvciBwYWdpbmF0aW9uXG4zLiBFYXN5IHRvIHVzZSBoZWxwZXIgbWV0aG9kcyB0aHJvdWdoIGBBcGlSZXNwb25zZUJ1aWxkZXJgXG40LiBUeXBlLXNhZmUgcmVzcG9uc2VzXG41LiBDbGVhciBzZXBhcmF0aW9uIGJldHdlZW4gc3VjY2VzcyBhbmQgZXJyb3IgcmVzcG9uc2VzXG42LiBFYXN5IHRvIGV4dGVuZCBmb3IgYWRkaXRpb25hbCByZXNwb25zZSB0eXBlc1xuNy4gU3RhbmRhcmRpemVkIGVycm9yIGhhbmRsaW5nXG5cblRoZSByZXNwb25zZSBmb3JtYXQgd2lsbCBhbHdheXMgYmUgY29uc2lzdGVudDpcblxuU3VjY2VzcyBSZXNwb25zZTpcbmBgYGpzb25cbntcbiAgICBcInN0YXR1c1wiOiBcInN1Y2Nlc3NcIixcbiAgICBcIm1lc3NhZ2VcIjogXCJPcGVyYXRpb24gc3VjY2Vzc2Z1bFwiLFxuICAgIFwiZGF0YVwiOiB7IC4uLiB9XG59XG5gYGBcblxuRXJyb3IgUmVzcG9uc2U6XG5gYGBqc29uXG57XG4gICAgXCJzdGF0dXNcIjogXCJmYWlsZWRcIixcbiAgICBcIm1lc3NhZ2VcIjogXCJPcGVyYXRpb24gZmFpbGVkXCIsXG4gICAgXCJlcnJvclwiOiBcIkRldGFpbGVkIGVycm9yIG1lc3NhZ2VcIlxufVxuYGBgXG5cblBhZ2luYXRlZCBSZXNwb25zZTpcbmBgYGpzb25cbntcbiAgICBcInN0YXR1c1wiOiBcInN1Y2Nlc3NcIixcbiAgICBcIm1lc3NhZ2VcIjogXCJPcGVyYXRpb24gc3VjY2Vzc2Z1bFwiLFxuICAgIFwiZGF0YVwiOiB7XG4gICAgICAgIFwiaXRlbXNcIjogWy4uLl0sXG4gICAgICAgIFwidG90YWxcIjogMTAwLFxuICAgICAgICBcInBhZ2VcIjogMSxcbiAgICAgICAgXCJsaW1pdFwiOiAxMCxcbiAgICAgICAgXCJ0b3RhbFBhZ2VzXCI6IDEwXG4gICAgfVxufVxuYGBgXG5cbldvdWxkIHlvdSBsaWtlIG1lIHRvIGV4cGxhaW4gYW55IHNwZWNpZmljIHBhcnQgaW4gbW9yZSBkZXRhaWw/XG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjMiLCJibG9iX25hbWUiOiIxYjU5MjY1N2RiNDJlNzBlNzgxNDVjODg4MzZlYzljOGUyYjNlNDE0ZDdhNDZjMDgzNDQzNmJhNjQwYjQ5ODA4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIn19XX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImI5YmVmMzMxLTA0NTUtNDUyZS04ZGQ3LThmYzcxNDI3NzI0YSIsInJlcXVlc3RfbWVzc2FnZSI6ImRvIG5vdCB3cml0ZSBhbnkgdGhpbmcgdGhhdCBpIGRvbnQgYXNrIHlvdSBmb3IgaXQgXG4gaSB3YW50IGp1c3QgdG8gY3JlYXRlIHRoYXQgOmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBpUmVzcG9uc2U8VCA9IGFueT4ge1xuICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXM7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGE/OiBUO1xuICAgIGVycm9yPzogc3RyaW5nO1xufVxuXG5zbyBleHBhbGFpbiBpdCB0byBtZSBwbGVhc2UgIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6ImRvIG5vdCB3cml0ZSBhbnkgdGhpbmcgdGhhdCBpIGRvbnQgYXNrIHlvdSBmb3IgaXQgIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgaSB3YW50IGp1c3QgdG8gY3JlYXRlIHRoYXQgOmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLCJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIEZBSUxFRCA9ICdmYWlsZWQnIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJ9In0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiJleHBvcnQgaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSBhbnk+IHsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzOyJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIG1lc3NhZ2U6IHN0cmluZzsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBkYXRhPzogVDsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBlcnJvcj86IHN0cmluZzsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6In0ifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6InNvIGV4cGFsYWluIGl0IHRvIG1lIHBsZWFzZSAifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkhlcmUncyB0aGUgZXhwbGFuYXRpb24gb2YgdGhlIHJlcXVlc3RlZCBEVE8gc3RydWN0dXJlOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL2R0by9hcGktcmVzcG9uc2UuZHRvLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbi8vIERlZmluZXMgcG9zc2libGUgcmVzcG9uc2Ugc3RhdHVzZXNcbmV4cG9ydCBlbnVtIFJlc3BvbnNlU3RhdHVzIHtcbiAgICBTVUNDRVNTID0gJ3N1Y2Nlc3MnLFxuICAgIEZBSUxFRCA9ICdmYWlsZWQnXG59XG5cbi8vIEdlbmVyaWMgaW50ZXJmYWNlIGZvciBBUEkgcmVzcG9uc2VzXG5leHBvcnQgaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSBhbnk+IHtcbiAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzOyAgICAgLy8gV2lsbCBiZSBlaXRoZXIgJ3N1Y2Nlc3MnIG9yICdmYWlsZWQnXG4gICAgbWVzc2FnZTogc3RyaW5nOyAgICAgICAgICAgLy8gQSBkZXNjcmlwdGl2ZSBtZXNzYWdlIGFib3V0IHRoZSBvcGVyYXRpb25cbiAgICBkYXRhPzogVDsgICAgICAgICAgICAgICAgICAvLyBPcHRpb25hbCBnZW5lcmljIGRhdGEgZmllbGQsIGNhbiBob2xkIGFueSB0eXBlXG4gICAgZXJyb3I/OiBzdHJpbmc7ICAgICAgICAgICAgLy8gT3B0aW9uYWwgZXJyb3IgbWVzc2FnZSwgdHlwaWNhbGx5IHVzZWQgd2hlbiBzdGF0dXMgaXMgRkFJTEVEXG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cblRoaXMgc3RydWN0dXJlIHByb3ZpZGVzIGEgY29uc2lzdGVudCB3YXkgdG8gZm9ybWF0IGFsbCBBUEkgcmVzcG9uc2VzLiBUaGUgZ2VuZXJpYyB0eXBlIGBUYCBhbGxvd3MgeW91IHRvIHNwZWNpZnkgdGhlIHR5cGUgb2YgZGF0YSBiZWluZyByZXR1cm5lZCwgd2hpbGUga2VlcGluZyB0aGUgcmVzcG9uc2Ugc3RydWN0dXJlIHVuaWZvcm0gYWNyb3NzIHlvdXIgYXBwbGljYXRpb24uXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50czowLTYyMyJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSGVyZSdzIHRoZSBleHBsYW5hdGlvbiBvZiB0aGUgcmVxdWVzdGVkIERUTyBzdHJ1Y3R1cmU6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvZHRvL2FwaS1yZXNwb25zZS5kdG8udHMgbW9kZT1FRElUXG4vLyBEZWZpbmVzIHBvc3NpYmxlIHJlc3BvbnNlIHN0YXR1c2VzXG5leHBvcnQgZW51bSBSZXNwb25zZVN0YXR1cyB7XG4gICAgU1VDQ0VTUyA9ICdzdWNjZXNzJyxcbiAgICBGQUlMRUQgPSAnZmFpbGVkJ1xufVxuXG4vLyBHZW5lcmljIGludGVyZmFjZSBmb3IgQVBJIHJlc3BvbnNlc1xuZXhwb3J0IGludGVyZmFjZSBBcGlSZXNwb25zZTxUID0gYW55PiB7XG4gICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1czsgICAgIC8vIFdpbGwgYmUgZWl0aGVyICdzdWNjZXNzJyBvciAnZmFpbGVkJ1xuICAgIG1lc3NhZ2U6IHN0cmluZzsgICAgICAgICAgIC8vIEEgZGVzY3JpcHRpdmUgbWVzc2FnZSBhYm91dCB0aGUgb3BlcmF0aW9uXG4gICAgZGF0YT86IFQ7ICAgICAgICAgICAgICAgICAgLy8gT3B0aW9uYWwgZ2VuZXJpYyBkYXRhIGZpZWxkLCBjYW4gaG9sZCBhbnkgdHlwZVxuICAgIGVycm9yPzogc3RyaW5nOyAgICAgICAgICAgIC8vIE9wdGlvbmFsIGVycm9yIG1lc3NhZ2UsIHR5cGljYWxseSB1c2VkIHdoZW4gc3RhdHVzIGlzIEZBSUxFRFxufVxuYGBgYFxuXG5UaGlzIHN0cnVjdHVyZSBwcm92aWRlcyBhIGNvbnNpc3RlbnQgd2F5IHRvIGZvcm1hdCBhbGwgQVBJIHJlc3BvbnNlcy4gVGhlIGdlbmVyaWMgdHlwZSBgVGAgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHRoZSB0eXBlIG9mIGRhdGEgYmVpbmcgcmV0dXJuZWQsIHdoaWxlIGtlZXBpbmcgdGhlIHJlc3BvbnNlIHN0cnVjdHVyZSB1bmlmb3JtIGFjcm9zcyB5b3VyIGFwcGxpY2F0aW9uLlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjIzIiwiYmxvYl9uYW1lIjoiMWI1OTI2NTdkYjQyZTcwZTc4MTQ1Yzg4ODM2ZWM5YzhlMmIzZTQxNGQ3YTQ2YzA4MzQ0MzZiYTY0MGI0OTgwOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJmZTM5NzljMS1kMmJmLTRmYWItYWM0My0wZTg5NTNmN2MzYmMiLCJyZXF1ZXN0X21lc3NhZ2UiOiJvayBwbGVhc2UgZXhwbGFpbiB0byBtZSBob3cgdG8gdXNlIGl0IGluIG15IHJlcG8gYW5kIHNlcnZpY2UgYW5kIGNvbnRyb2xsZXIgIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6Im9rIHBsZWFzZSBleHBsYWluIHRvIG1lIGhvdyB0byB1c2UgaXQgaW4gbXkgcmVwbyBhbmQgc2VydmljZSBhbmQgY29udHJvbGxlciAifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgc2hvdyB5b3UgaG93IHRvIHVzZSB0aGUgQXBpUmVzcG9uc2UgaW4geW91ciBleGlzdGluZyBjb2RlIHN0cnVjdHVyZTpcblxuMS4gRmlyc3QgaW4gdGhlIFJlcG9zaXRvcnk6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvcmVwb3NpdG9yaWVzL3VzZXIucmVwb3NpdG9yeS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVXNlclJlcG9zaXRvcnkge1xuICAgIGFzeW5jIGZpbmRCeUVtYWlsKGVtYWlsOiBzdHJpbmcpOiBQcm9taXNlPEFwaVJlc3BvbnNlPHVzZXJzPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGZvdW5kXCIsXG4gICAgICAgICAgICAgICAgZGF0YTogdXNlclxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJGYWlsZWQgdG8gZmluZCB1c2VyXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbjIuIEluIHlvdXIgQXV0aFNlcnZpY2U6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRoU2VydmljZSB7XG4gICAgcHJpdmF0ZSB1c2VyUmVwb3NpdG9yeTogVXNlclJlcG9zaXRvcnk7XG5cbiAgICBjb25zdHJ1Y3RvcihAaW5qZWN0KCdVc2VyUmVwb3NpdG9yeScpIHVzZXJSZXBvc2l0b3J5OiBVc2VyUmVwb3NpdG9yeSkge1xuICAgICAgICB0aGlzLnVzZXJSZXBvc2l0b3J5ID0gdXNlclJlcG9zaXRvcnk7XG4gICAgfVxuXG4gICAgYXN5bmMgc2lnblVwKHVzZXI6IFByaXNtYS51c2Vyc0NyZWF0ZUlucHV0KTogUHJvbWlzZTxBcGlSZXNwb25zZTx1c2Vycz4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IHRoaXMudXNlclJlcG9zaXRvcnkuZmluZEJ5RW1haWwodXNlci5lbWFpbCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIuZGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgYWxyZWFkeSBleGlzdHNcIixcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IFwiRW1haWwgYWxyZWFkeSByZWdpc3RlcmVkXCJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5jcmVhdGUodXNlcik7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlVzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHlcIixcbiAgICAgICAgICAgICAgICBkYXRhOiBuZXdVc2VyXG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkZhaWxlZCB0byBjcmVhdGUgdXNlclwiLFxuICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxufVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG4zLiBJbiB5b3VyIENvbnRyb2xsZXI6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYXV0aC5jb250cm9sbGVyLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbkBjb250cm9sbGVyKCcvYXV0aCcpXG5leHBvcnQgY2xhc3MgQXV0aENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlKSB7fVxuXG4gICAgQHBvc3QoJy9zaWdudXAnKVxuICAgIGFzeW5jIHNpZ25VcChAcmVxKCkgcmVxOiBSZXF1ZXN0LCBAcmVzKCkgcmVzOiBSZXNwb25zZSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuYXV0aFNlcnZpY2Uuc2lnblVwKHJlcS5ib2R5KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHN0YXR1c0NvZGUgPSByZXNwb25zZS5zdGF0dXMgPT09IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MgPyAyMDEgOiA0MDA7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLmpzb24ocmVzcG9uc2UpO1xuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuVGhpcyB3YXksIHlvdSBtYWludGFpbiBhIGNvbnNpc3RlbnQgcmVzcG9uc2Ugc3RydWN0dXJlIHRocm91Z2hvdXQgeW91ciBhcHBsaWNhdGlvbiBsYXllcnMsIG1ha2luZyBpdCBlYXNpZXIgdG8gaGFuZGxlIHJlc3BvbnNlcyBhbmQgZXJyb3JzIG9uIHRoZSBjbGllbnQgc2lkZS5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNjIzIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJJJ2xsIHNob3cgeW91IGhvdyB0byB1c2UgdGhlIEFwaVJlc3BvbnNlIGluIHlvdXIgZXhpc3RpbmcgY29kZSBzdHJ1Y3R1cmU6XG5cbjEuIEZpcnN0IGluIHRoZSBSZXBvc2l0b3J5OlxuXG5gYGBgdHlwZXNjcmlwdCBwYXRoPVdFQi9CQUNLRU5EL0NPREUvc3JjL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnkudHMgbW9kZT1FRElUXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVXNlclJlcG9zaXRvcnkge1xuICAgIGFzeW5jIGZpbmRCeUVtYWlsKGVtYWlsOiBzdHJpbmcpOiBQcm9taXNlPEFwaVJlc3BvbnNlPHVzZXJzPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMucHJpc21hLnVzZXJzLmZpbmRVbmlxdWUoe1xuICAgICAgICAgICAgICAgIHdoZXJlOiB7IGVtYWlsIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLlNVQ0NFU1MsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGZvdW5kXCIsXG4gICAgICAgICAgICAgICAgZGF0YTogdXNlclxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJGYWlsZWQgdG8gZmluZCB1c2VyXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBgXG5cbjIuIEluIHlvdXIgQXV0aFNlcnZpY2U6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIG1vZGU9RURJVFxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEF1dGhTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHVzZXJSZXBvc2l0b3J5OiBVc2VyUmVwb3NpdG9yeTtcblxuICAgIGNvbnN0cnVjdG9yKEBpbmplY3QoJ1VzZXJSZXBvc2l0b3J5JykgdXNlclJlcG9zaXRvcnk6IFVzZXJSZXBvc2l0b3J5KSB7XG4gICAgICAgIHRoaXMudXNlclJlcG9zaXRvcnkgPSB1c2VyUmVwb3NpdG9yeTtcbiAgICB9XG5cbiAgICBhc3luYyBzaWduVXAodXNlcjogUHJpc21hLnVzZXJzQ3JlYXRlSW5wdXQpOiBQcm9taXNlPEFwaVJlc3BvbnNlPHVzZXJzPj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgdGhpcy51c2VyUmVwb3NpdG9yeS5maW5kQnlFbWFpbCh1c2VyLmVtYWlsKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGV4aXN0aW5nVXNlci5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBhbHJlYWR5IGV4aXN0c1wiLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogXCJFbWFpbCBhbHJlYWR5IHJlZ2lzdGVyZWRcIlxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCB0aGlzLnVzZXJSZXBvc2l0b3J5LmNyZWF0ZSh1c2VyKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5TVUNDRVNTLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseVwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IG5ld1VzZXJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiRmFpbGVkIHRvIGNyZWF0ZSB1c2VyXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBgXG5cbjMuIEluIHlvdXIgQ29udHJvbGxlcjpcblxuYGBgYHR5cGVzY3JpcHQgcGF0aD1XRUIvQkFDS0VORC9DT0RFL3NyYy9jb250cm9sbGVycy9hdXRoLmNvbnRyb2xsZXIudHMgbW9kZT1FRElUXG5AY29udHJvbGxlcignL2F1dGgnKVxuZXhwb3J0IGNsYXNzIEF1dGhDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSkge31cblxuICAgIEBwb3N0KCcvc2lnbnVwJylcbiAgICBhc3luYyBzaWduVXAoQHJlcSgpIHJlcTogUmVxdWVzdCwgQHJlcygpIHJlczogUmVzcG9uc2UpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF1dGhTZXJ2aWNlLnNpZ25VcChyZXEuYm9keSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzdGF0dXNDb2RlID0gcmVzcG9uc2Uuc3RhdHVzID09PSBSZXNwb25zZVN0YXR1cy5TVUNDRVNTID8gMjAxIDogNDAwO1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXNDb2RlKS5qc29uKHJlc3BvbnNlKTtcbiAgICB9XG59XG5gYGBgXG5cblRoaXMgd2F5LCB5b3UgbWFpbnRhaW4gYSBjb25zaXN0ZW50IHJlc3BvbnNlIHN0cnVjdHVyZSB0aHJvdWdob3V0IHlvdXIgYXBwbGljYXRpb24gbGF5ZXJzLCBtYWtpbmcgaXQgZWFzaWVyIHRvIGhhbmRsZSByZXNwb25zZXMgYW5kIGVycm9ycyBvbiB0aGUgY2xpZW50IHNpZGUuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MjMiLCJibG9iX25hbWUiOiIxYjU5MjY1N2RiNDJlNzBlNzgxNDVjODg4MzZlYzljOGUyYjNlNDE0ZDdhNDZjMDgzNDQzNmJhNjQwYjQ5ODA4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIn19XX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjQxZjViOWU4LTA4MTYtNDA4Ni1hMGE0LTdhZDVmM2E4NDNhNiIsInJlcXVlc3RfbWVzc2FnZSI6Im9rIG5vdyBpIHdhbnQgdG8gY3JlYXRlIGEgbWlkZHdhcmUgZm9yIG15IHJvdXRlcyB0aGF0IGhhdmUgdG8gYmUgYWJsZSB0byB1c2VyIHRoZSBzYW1lIGFwaXJlc3BvbnNlZHRvIHRvICBwcm90ZWN0IHJvdXRlcyBhbmQgcmV0cnVuIHJlcG9uc2UgXG5vayBub3cgZ2l2ZSBtZSBhbiBleGFtcGxlIG9mIGEgbWlkZHdhcmUgdGhhdCB3aWxsIHByb3RlY3QgYSByb3V0ZXMgYW5kIG1ha2Ugc3VyZSB0aGF0IHRoaXMgcm91dGUgd2lsbGwgYmUgYWJsZSB0byAgbWFrZSBzdXJlIHRoYXQgb25seSBhdXRoZW5pdGNhdGVkIGFkbWlucyBhcmUgYWJsZSB0byBhY2NlcyB0aGUgcm91dGUiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoib2sgbm93IGkgd2FudCB0byBjcmVhdGUgYSBtaWRkd2FyZSBmb3IgbXkgcm91dGVzIHRoYXQgaGF2ZSB0byBiZSBhYmxlIHRvIHVzZXIgdGhlIHNhbWUgYXBpcmVzcG9uc2VkdG8gdG8gIHByb3RlY3Qgcm91dGVzIGFuZCByZXRydW4gcmVwb25zZSAifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6Im9rIG5vdyBnaXZlIG1lIGFuIGV4YW1wbGUgb2YgYSBtaWRkd2FyZSB0aGF0IHdpbGwgcHJvdGVjdCBhIHJvdXRlcyBhbmQgbWFrZSBzdXJlIHRoYXQgdGhpcyByb3V0ZSB3aWxsbCBiZSBhYmxlIHRvICBtYWtlIHN1cmUgdGhhdCBvbmx5IGF1dGhlbml0Y2F0ZWQgYWRtaW5zIGFyZSBhYmxlIHRvIGFjY2VzIHRoZSByb3V0ZSJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSGVyZSdzIGFuIGV4YW1wbGUgb2YgYW4gYWRtaW4gYXV0aGVudGljYXRpb24gbWlkZGxld2FyZSB1c2luZyB0aGUgQXBpUmVzcG9uc2UgRFRPOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIldFQi9CQUNLRU5EL0NPREUvc3JjL21pZGRsZXdhcmVzL2FkbWluLWF1dGgubWlkZGxld2FyZS50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSwgTmV4dEZ1bmN0aW9uIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgeyBBcGlSZXNwb25zZSwgUmVzcG9uc2VTdGF0dXMgfSBmcm9tICcuLi9kdG8vYXBpLXJlc3BvbnNlLmR0byc7XG5cbmV4cG9ydCBjb25zdCBhZG1pbkF1dGhNaWRkbGV3YXJlID0gYXN5bmMgKFxuICAgIHJlcTogUmVxdWVzdCxcbiAgICByZXM6IFJlc3BvbnNlLFxuICAgIG5leHQ6IE5leHRGdW5jdGlvblxuKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gR2V0IHRva2VuIGZyb20gaGVhZGVyXG4gICAgICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcignQXV0aG9yaXphdGlvbicpPy5yZXBsYWNlKCdCZWFyZXIgJywgJycpO1xuXG4gICAgICAgIGlmICghdG9rZW4pIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlOiBBcGlSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQWNjZXNzIGRlbmllZCcsXG4gICAgICAgICAgICAgICAgZXJyb3I6ICdObyB0b2tlbiBwcm92aWRlZCdcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24ocmVzcG9uc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVmVyaWZ5IHRva2VuXG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcbiAgICAgICAgXG4gICAgICAgIC8vIENoZWNrIGlmIHVzZXIgaXMgYWRtaW5cbiAgICAgICAgaWYgKGRlY29kZWQucm9sZSAhPT0gJ2FkbWluJykge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2U6IEFwaVJlc3BvbnNlID0ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogUmVzcG9uc2VTdGF0dXMuRkFJTEVELFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdBY2Nlc3MgZGVuaWVkJyxcbiAgICAgICAgICAgICAgICBlcnJvcjogJ0FkbWluIHByaXZpbGVnZXMgcmVxdWlyZWQnXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHJlc3BvbnNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCB1c2VyIHRvIHJlcXVlc3RcbiAgICAgICAgcmVxLnVzZXIgPSBkZWNvZGVkO1xuICAgICAgICBuZXh0KCk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zdCByZXNwb25zZTogQXBpUmVzcG9uc2UgPSB7XG4gICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIHRva2VuJyxcbiAgICAgICAgICAgIGVycm9yOiAnUGxlYXNlIGF1dGhlbnRpY2F0ZSdcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHJlc3BvbnNlKTtcbiAgICB9XG59O1xuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5Vc2FnZSBpbiB5b3VyIHJvdXRlczpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJXRUIvQkFDS0VORC9DT0RFL3NyYy9yb3V0ZXMvYWRtaW4ucm91dGVzLnRzXCIgbW9kZT1cIkVESVRcIj5cbmBgYHR5cGVzY3JpcHRcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgYWRtaW5BdXRoTWlkZGxld2FyZSB9IGZyb20gJy4uL21pZGRsZXdhcmVzL2FkbWluLWF1dGgubWlkZGxld2FyZSc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBQcm90ZWN0ZWQgYWRtaW4gcm91dGVcbnJvdXRlci5nZXQoJy9hZG1pbi91c2VycycsIGFkbWluQXV0aE1pZGRsZXdhcmUsIGFkbWluQ29udHJvbGxlci5nZXRVc2Vycyk7XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbk9yIHdpdGggZGVjb3JhdG9ycyBpbiB5b3VyIGNvbnRyb2xsZXI6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYWRtaW4uY29udHJvbGxlci50c1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0eXBlc2NyaXB0XG5AY29udHJvbGxlcignL2FkbWluJylcbmV4cG9ydCBjbGFzcyBBZG1pbkNvbnRyb2xsZXIge1xuICAgIEBnZXQoJy91c2VycycpXG4gICAgQG1pZGRsZXdhcmUoYWRtaW5BdXRoTWlkZGxld2FyZSlcbiAgICBhc3luYyBnZXRVc2VycyhAcmVxKCkgcmVxOiBSZXF1ZXN0LCBAcmVzKCkgcmVzOiBSZXNwb25zZSkge1xuICAgICAgICAvLyBZb3VyIGNvbnRyb2xsZXIgbG9naWMgaGVyZVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiV0VCL0JBQ0tFTkQvQ09ERS9zcmMvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzOjAtNjIzIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJIZXJlJ3MgYW4gZXhhbXBsZSBvZiBhbiBhZG1pbiBhdXRoZW50aWNhdGlvbiBtaWRkbGV3YXJlIHVzaW5nIHRoZSBBcGlSZXNwb25zZSBEVE86XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvbWlkZGxld2FyZXMvYWRtaW4tYXV0aC5taWRkbGV3YXJlLnRzIG1vZGU9RURJVFxuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2UsIFJlc3BvbnNlU3RhdHVzIH0gZnJvbSAnLi4vZHRvL2FwaS1yZXNwb25zZS5kdG8nO1xuXG5leHBvcnQgY29uc3QgYWRtaW5BdXRoTWlkZGxld2FyZSA9IGFzeW5jIChcbiAgICByZXE6IFJlcXVlc3QsXG4gICAgcmVzOiBSZXNwb25zZSxcbiAgICBuZXh0OiBOZXh0RnVuY3Rpb25cbikgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIC8vIEdldCB0b2tlbiBmcm9tIGhlYWRlclxuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXIoJ0F1dGhvcml6YXRpb24nKT8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcblxuICAgICAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZTogQXBpUmVzcG9uc2UgPSB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0FjY2VzcyBkZW5pZWQnLFxuICAgICAgICAgICAgICAgIGVycm9yOiAnTm8gdG9rZW4gcHJvdmlkZWQnXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHJlc3BvbnNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFZlcmlmeSB0b2tlblxuICAgICAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCk7XG4gICAgICAgIFxuICAgICAgICAvLyBDaGVjayBpZiB1c2VyIGlzIGFkbWluXG4gICAgICAgIGlmIChkZWNvZGVkLnJvbGUgIT09ICdhZG1pbicpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlOiBBcGlSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFJlc3BvbnNlU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQWNjZXNzIGRlbmllZCcsXG4gICAgICAgICAgICAgICAgZXJyb3I6ICdBZG1pbiBwcml2aWxlZ2VzIHJlcXVpcmVkJ1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbihyZXNwb25zZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBZGQgdXNlciB0byByZXF1ZXN0XG4gICAgICAgIHJlcS51c2VyID0gZGVjb2RlZDtcbiAgICAgICAgbmV4dCgpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2U6IEFwaVJlc3BvbnNlID0ge1xuICAgICAgICAgICAgc3RhdHVzOiBSZXNwb25zZVN0YXR1cy5GQUlMRUQsXG4gICAgICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCB0b2tlbicsXG4gICAgICAgICAgICBlcnJvcjogJ1BsZWFzZSBhdXRoZW50aWNhdGUnXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbihyZXNwb25zZSk7XG4gICAgfVxufTtcbmBgYGBcblxuVXNhZ2UgaW4geW91ciByb3V0ZXM6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvcm91dGVzL2FkbWluLnJvdXRlcy50cyBtb2RlPUVESVRcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgYWRtaW5BdXRoTWlkZGxld2FyZSB9IGZyb20gJy4uL21pZGRsZXdhcmVzL2FkbWluLWF1dGgubWlkZGxld2FyZSc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBQcm90ZWN0ZWQgYWRtaW4gcm91dGVcbnJvdXRlci5nZXQoJy9hZG1pbi91c2VycycsIGFkbWluQXV0aE1pZGRsZXdhcmUsIGFkbWluQ29udHJvbGxlci5nZXRVc2Vycyk7XG5gYGBgXG5cbk9yIHdpdGggZGVjb3JhdG9ycyBpbiB5b3VyIGNvbnRyb2xsZXI6XG5cbmBgYGB0eXBlc2NyaXB0IHBhdGg9V0VCL0JBQ0tFTkQvQ09ERS9zcmMvY29udHJvbGxlcnMvYWRtaW4uY29udHJvbGxlci50cyBtb2RlPUVESVRcbkBjb250cm9sbGVyKCcvYWRtaW4nKVxuZXhwb3J0IGNsYXNzIEFkbWluQ29udHJvbGxlciB7XG4gICAgQGdldCgnL3VzZXJzJylcbiAgICBAbWlkZGxld2FyZShhZG1pbkF1dGhNaWRkbGV3YXJlKVxuICAgIGFzeW5jIGdldFVzZXJzKEByZXEoKSByZXE6IFJlcXVlc3QsIEByZXMoKSByZXM6IFJlc3BvbnNlKSB7XG4gICAgICAgIC8vIFlvdXIgY29udHJvbGxlciBsb2dpYyBoZXJlXG4gICAgfVxufVxuYGBgYFxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjIzIiwiYmxvYl9uYW1lIjoiMWI1OTI2NTdkYjQyZTcwZTc4MTQ1Yzg4ODM2ZWM5YzhlMmIzZTQxNGQ3YTQ2YzA4MzQ0MzZiYTY0MGI0OTgwOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IldFQi9CQUNLRU5EL0NPREUvc3JjL3NlcnZpY2VzL2F1dGguc2VydmljZS50cyJ9fV19XSwiZmVlZGJhY2tTdGF0ZXMiOnsidGVtcC1mZS04ZDljMWE0Ni02OTQzLTRlZTctYWE5Ny00MWJkN2MwZGI3OTYiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTQyMzNiOTE0LTI1MDYtNGUzOC1iMmI2LTE4MjkyYTlkMjQ1OCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtOWE4NTY5NmMtMjZiMy00NTFlLThhYTQtYmFiNjlhYTllYWM0Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS00MzgzMjA0My1jOWFmLTQzMDUtOWY0NS0wM2QxOWJmNDQyNTgiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTE3NDlkMzA5LTM5OTUtNDZiZC1hYWI4LTc4M2MwY2E4NGM3ZCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMDY3ODc0NmYtN2Q3Yi00ODgzLTliNzYtZjZiZjFhMjlkMzU3Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1iZTk3M2NlMy02ODA5LTQ5YTQtYjE4MS1mYzQyYzkzZDZjZTAiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTAwZjQ5OGQ4LTM5NGUtNDIyMC1iMDg5LWVhNTg1NjZjZjA1NCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNDRlYWQ1ZjEtMTdmMS00NWNlLTlmMzAtYzc1ZmE1ZDIxMjM5Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1jNmZkN2ZkNy1hZDE1LTQyNTctOTg5OC0zZWY3YmE1MDAwY2IiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTYzODkzNWM3LTMzZmYtNDg0OC1iZGE1LTcxNDg0ODQwOTM5ZiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMzczNDNhODEtN2QyZS00YzQ5LTllZDYtZmUyZjY1Y2JlZDJhIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifX0sInRvb2xVc2VTdGF0ZXMiOnt9LCJkcmFmdEV4Y2hhbmdlIjp7InJlcXVlc3RfbWVzc2FnZSI6IlxuXG4iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn0seyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6e319fSwiaXNDb250ZXh0UGFuZU9wZW4iOmZhbHNlLCJpc0FjdGlvbnNQYW5lT3BlbiI6ZmFsc2UsImFnZW50RXhlY3V0aW9uTW9kZSI6Im1hbnVhbCJ9" />
      </map>
    </option>
  </component>
</project>